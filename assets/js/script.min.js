const $=(t,e=document)=>e.querySelector(t),$$=(t,e=document)=>e.querySelectorAll(t);Node.prototype.on=function(t,e){return this.addEventListener(t,e)};var get={},set={},actions={},triggers={},state={database:null,table:null,databases_order:[],databases:{},tables:[]};function tabClassActive(){return["bg-navy-100","text-navy-900","border-navy-300"]}function tabClassInactive(){return["hover:bg-gray-100","bg-gray-50","bg-gradient-to-b","from-white","to-gray-100","border-gray-300"]}function hollowClassActive(){return["bg-navy-100","text-navy-900","border","border-navy-300","rounded"]}function hollowClassInactive(){return["hover:bg-grayExtra","border","border-transparent"]}function eventCellKeydown(){window.addEventListener("keydown",t=>{const e=$(`pane-main[db="${state.database}"][tb="${state.table}"]`);let s=$('cell-ring[state="active"]',e).closest("table-cell");if(s)switch(t.key){case"ArrowLeft":case"ArrowRight":case"ArrowDown":case"ArrowUp":s.handleStep(t.key);break;case"Tab":s.handleCellTab(t);break;case"Enter":s.handleCellEdit()}})}function handleCellClose(){isCellState("edit")&&(dom.current.cell_ring.setAttribute("state","active"),resetEdit())}class cell{static setPreview(t,e){$("preview-value",e.closest("table-cell")).innerHTML=t}static setTempValue(t,e){const s=table.get(e);temp[row.getType(e)][s].data[row.getIndex(e)][cell.getColumn(e)]=t}static getTempValue(t){const e=table.get(t);return temp[row.getType(t)][e].data[row.getIndex(t)][cell.getColumn(t)]}static getColumn(t){return t.closest("table-cell").getAttribute("column")}static isNullable(){return"true"==obj.closest("table-cell").getAttribute("nullable")}static isNull(){return"true"==obj.closest("table-cell").getAttribute("is_null")}}function leaveEdit(){in_field=!0,fieldClose()}function fieldClose(){const t=$('cell-ring[state="edit"]');if(!t)return;const e=t.closest("table-cell"),s=$("cell-edit",e);t.setAttribute("state","active"),s.removeAttribute("active")}function updatePreview(t,e){$("preview-value",e.closest("table-cell")).innerHTML=t}function updateNull(t){const e=$("preview",t.closest("table-cell"));$("preview-value",t.closest("table-cell")).setAttribute("hidden",""),e.setAttribute("active","true");$("preview-null",t.closest("table-cell")).removeAttribute("hidden")}function setCellFieldState(t,e){e.querySelector("cell-edit").setAttribute("active",t)}function setCellPreviewState(t,e){e.querySelector("cell-preview").setAttribute("active",t)}function cellActiveIndex(t){return[...t.parentElement.children].indexOf(t)+1}function isCellActive(){return dom.current&&"active"==dom.current.cell_ring.getAttribute("state")}function isCellState(t="active"){return dom.current&&dom.current.cell_ring.getAttribute("state")==t}function setCellActiveToEl(t,e="active"){t.setAttribute("state",e)}function isEmpty(t){return 0===Object.keys(t).length}function error(t){}function success(t){}function spreadDomCell(t){return current={table_cell:t,cell_ring:t.querySelector("cell-ring"),cell_edit:t.querySelector("cell-edit"),cell_preview:t.querySelector("cell-preview")}}function resetStore(){dom.current=null,dom.left=null,dom.right=null,dom.up=null,dom.down=null}function storeDomCell(t){dom.current=spreadDomCell(t),dom.left=spreadDomCell(getDomCellLeft()),dom.right=spreadDomCell(getDomCellRight()),dom.down=spreadDomCell(getDomCellDown()),dom.up=spreadDomCell(getDomCellUp())}class row{static isNew(t){return!!t.closest(".row-new")}static getType(t){return row.isNew(t)?"insert":"update"}static getIndex(t){return t.closest("table-row").dataset.index}}class tab{static onMiddleClick(t){t.on("mouseup",e=>{1===e.button&&tab.closeHandler(t)})}}class table{static get(t){let e=t;return"PANE-MAIN"!=t.tagName&&(e=t.closest("pane-main")),`${e.getAttribute("database")} ${e.getAttribute("table")}`}}actions.database={},actions.databases={},actions.databases.load=()=>{axios.get("server/php/queries/databases.php").then(t=>{200===t.status&&(set.database.order(t.data),set.database.items(t.data))})},actions.database.toggle=t=>{set.database.toggleState(t)},actions.table={},actions.tables={},actions.table.load=(t,e)=>{isEmpty(get.tb.items(t,e))?axios.get(`server/php/queries/data.php?database=${t}&table=${e}`).then(s=>{200===s.status&&(actions.table.activate(t,e),set.table.item(s.data,t,e))}):actions.table.activate(t,e)},actions.tables.load=t=>{axios.get("server/php/queries/tables.php?database="+t).then(e=>{200===e.status&&(set.table.order(e.data,t),set.table.items(e.data,t))})},actions.table.activate=(t,e)=>{set.table.name(t,e)},actions.table.closeTab=(t,e)=>{set.table.item({},t,e),set.table.name(null,null)},get.db={},get.tb={},get.col={},get.tb.order=()=>state.databases[state.database].tables_order,get.tb.items=(t=state.database,e=state.table)=>state.databases[t].table_items[e],get.tb.value=(t,e,s,i)=>get.tb.items(t,e).rows[i][s],get.col.data=(t,e,s)=>get.tb.items(t,e).cols[s],set.database={},set.database.order=t=>{state.databases_order=t},set.database.items=t=>{state.databases={},t.forEach(t=>{state.databases[t]={open:!1,table_order:[],table_items:{}}}),triggers.db.load()},set.database.toggleState=t=>{state.databases[t].open=!state.databases[t].open,triggers.db.toggle(t)},set.table={},set.table.order=(t,e)=>{state.databases[e].table_order=t},set.table.name=(t,e)=>{const s=state.database,i=state.table;state.database=t,state.table=e,state.table?triggers.tb.activate():triggers.tb.closeTab(s,i)},set.table.item=(t,e,s)=>{state.databases[e].table_items[s]=t,triggers.tb.data()},set.table.items=(t,e)=>{t.forEach(t=>{state.databases[e].table_items[t]={}}),triggers.tb.items(e)},triggers.db={},triggers.db.load=()=>{$("db-list").databasesPopulate()},triggers.db.toggle=t=>{triggers.db.open(t),triggers.db.close(t)},triggers.db.open=t=>{state.databases[t].open&&($("db-list").arrowUp(t),$("db-list").showElement("tb-section",t),$("db-list").groupEmpty(t)&&actions.tables.load(t))},triggers.db.close=t=>{state.databases[t].open||($("db-list").arrowDown(t),$("db-list").hideElement("tb-section",t))},triggers.tb={},triggers.tb.activate=()=>{$("db-list").deactivateTb(),$("db-list").activateTb(),$("tab-items").activate()},triggers.tb.closeTab=(t,e)=>{$("db-list").deactivateTb(),$("tab-items").close(t,e)},triggers.tb.items=t=>{$("db-list").tablesPopulate(t),$("db-list").hideElement("tb-loading",t)},triggers.tb.data=()=>{console.log(state),$("main-x").deactivatePanes(),$("main-x").addPane()};class ActionbarRefresh extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <div data-action>\n        <img-svg src="material-icons/refresh.svg" classes="animate-spin w-5 h-5"></img-svg>\n        <div>Refresh</div>\n      </div>\n    '}attributeChangedCallback(t,e,s){"active"==t&&e!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}}customElements.define("actionbar-refresh",ActionbarRefresh);class ButtonItem extends HTMLElement{constructor(){super()}connectedCallback(){const t=this.getAttribute("href"),e=this.getAttribute("title");this.removeAttribute("title");let s="";s=t?this.linkHtml(e,t):this.buttonHtml(e,t),this.innerHTML=s}getClasses(){let t="";switch(this.getAttribute("style")){case"default":t=this.classesStyleDefault();break;case"action":t=this.classesStyleAction();break;case"ghost":t=this.classesStyleGhost()}return this.classesBase().concat(t)}linkHtml(t,e){return`<a href="${e}" class="${this.getClasses().join(" ")}">${t}</a>`}buttonHtml(t){return`<button class="focus:outline-none cursor-default ${this.getClasses().join(" ")}">${t}</button>`}classesBase(){return["inline-flex","items-center","gap-2","px-4","py-1.5","font-bold","rounded","fill-current"]}classesStyleDefault(){return["text-white","border-2","bg-blueGray-700","border-black","hover:bg-blueGray-800"]}classesStyleAction(){return["text-white","bg-gradient-to-br","from-navy-500","via-navy-600","to-navy-600","hover:from-navy-600","border","border-navy-600"]}classesStyleGhost(){return["border-2","border-gray-200","hover:border-gray-400"]}}customElements.define("button-item",ButtonItem);class CheckboxItem extends HTMLElement{constructor(){super()}connectedCallback(){const t=this.getAttribute("name"),e=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`\n      <label class="flex select-none items-center gap-2">\n        <input type="checkbox" class="form-checkbox w-4 h-4 rounded focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${t}" ${s} />\n        ${e||""}\n      </label>\n    `}}customElements.define("checkbox-item",CheckboxItem);class ImgSvg extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes","src"]}attributeChangedCallback(t,e,s){e!==s&&"src"==t&&""!=s&&fetch("assets/icons/"+s).then(t=>t.text()).then(t=>{this.innerHTML=t;const e=this.querySelector("svg");e.setAttribute("class",this.getAttribute("classes")),e.classList.add("fill-current")}).catch(console.error.bind(console))}}customElements.define("img-svg",ImgSvg);class MainX extends HTMLElement{constructor(){super()}connectedCallback(){}deactivatePanes(){$$("pane-main").forEach(t=>{t.deactivate()})}addPane(){$("main-x").insertAdjacentHTML("beforeend",this.templatePane())}templatePane(){return`\n      <pane-main database="${state.database}" db="${state.database}" table="${state.table}" tb="${state.table}"></pane-main>\n    `}}customElements.define("main-x",MainX);class MessageItem extends HTMLElement{constructor(){super()}connectedCallback(){const t=this.getAttribute("state"),e=this.innerHTML;let s="";switch(t){case"success":s="bg-green-600";break;case"error":s="bg-red-700"}this.classList.add("flex",s,"text-white","text-opacity-90"),this.innerHTML=`\n      <div class="flex-1 p-6">${e}</div>\n      <div class="p-2">\n        <button class="hover:bg-black hover:bg-opacity-10 p-2 focus:outline-none cursor-default">\n          <img-svg src="remixicon/close.svg"></img-svg>\n        </button>\n      </div>\n    `}}customElements.define("message-item",MessageItem);class ModalBox extends HTMLElement{constructor(){super()}connectedCallback(){this.deactivate(),this.innerHTML='\n      <div\n        data-backdrop\n        class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"\n      >\n        <div class="flex items-start w-full max-w-lg bg-white shadow-md">\n          <div class="p-8 flex-1" data-modal-content>\n            <modal-info></modal-info>\n          </div>\n          <button class="p-2 m-2 focus:outline-none hover:bg-gray-100 rounded">\n            <img-svg src="remixicon/close.svg"></img-svg>\n          </button>\n        </div>\n      </div>\n    ',this.onClose()}onClose(){this.querySelector("button").addEventListener("click",t=>{this.deactivate()}),this.querySelector("[data-backdrop]").addEventListener("click",t=>{t.target==t.currentTarget&&this.deactivate()})}activate(){this.removeAttribute("hidden")}deactivate(){this.setAttribute("hidden","")}}customElements.define("modal-box",ModalBox);class PaneMain extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}set db(t){this.dbValue=t}get db(){return this.dbValue}set tb(t){this.tbValue=t}get tb(){return this.tbValue}connectedCallback(){this.db=this.getAttribute("db"),this.tb=this.getAttribute("tb"),this.data=get.tb.items(this.db,this.tb),this.classList.add("flex","flex-col","overflow-auto","flex-1");const t=this.gridCols(),e=`auto ${t.widths.join("px ")}px`;console.log(JSON.stringify(e)),this.innerHTML=`\n      <actions-x></actions-x>\n      <div class="flex-1 flex overflow-auto">\n        <div class="overflow-x-auto flex-1 my-4 border border-gray-200 rounded bg-white">\n          <div class="flex-1 text-13" style="width: ${t.sum}px;">\n            <div data-table class="grid gap-y-px bg-white" style="grid-template-columns: ${e};">\n              <table-headings class="z-40 contents">\n                <table-heading-check\n                  class="sticky top-0 z-[600] flex bg-gray-100 heading-bkg left-0">\n                  <label class="tp relative heading-bkg flex items-center bg-gray-100">\n                    <input type="checkbox" class="form-checkbox checkstyle-white" name="test" />\n                  </label>\n                </table-heading-check>\n                ${this.data.cols_order.map(t=>{const e=this.data.cols[t];return`\n                      <table-heading\n                        class="tp heading-bkg font-bold flex gap-2 items-center text-sm sticky top-0 z-[500] bg-gray-100"\n                      >\n                        ${this.keyIcon(t)}\n                        <div class="flex flex-col gap-1">\n                          <div>\n                            <div class="text-opacity-60 text-black inline-block py-0.5 text-xs font-normal rounded">${e.meta.Type}</div>\n                          </div>\n                          ${t}\n                        </div>\n                      </table-heading>\n                    `}).join("")}\n              </table-headings>\n              <table-cells class="contents">\n                <table-row-ghost hidden>\n                  <template data-first>\n                    <table-row class="contents row-new">\n                      <row-select></row-select>\n                      ${this.templateTableCells()}\n                    </table-row>\n                  </template>\n                </table-row-ghost>\n                ${this.data.rows.map((t,e)=>`\n                    <table-row class="contents">\n                      <row-select class="flex sticky z-50 left-0 heading-bkg">\n                        <label class="tp relative">\n                          <input type="checkbox" class="checkstyle form-checkbox" name="test" />\n                          <div class="absolute block inset-0 shadow-y"></div>\n                        </label>\n                      </row-select>\n                      ${this.data.cols_order.map(s=>`\n                            <table-cell\n                              class="relative"\n                              col="${s}"\n                              row="${t[this.data.meta.id]}"\n                              index="${e}"\n                            ></table-cell>\n                          `).join("")}\n                    </table-row>`).join("")}\n              </table-cells>\n            </div>\n          </div>\n        </div>\n      </div>\n      <pagination-x></pagination-x>\n    `,this.setFirstCellActive(),this.onChangeCheckAll(),this.onChangeCheckOne()}keyIcon(t){return t.config&&t.config.id?'<img-svg src="remixicon/key-2-line.svg" classes="w-5 h-5"></img-svg>':""}onChangeCheckAll(){$("table-heading-check input",this).on("change",t=>{const e=t.currentTarget.checked;$$("row-select input",this).forEach(()=>{this.checkToggleAll(e)})})}onChangeCheckOne(){$$("row-select input",this).forEach(t=>{t.on("change",t=>{const e=t.currentTarget,s=e.checked;e.closest("table-row").classList.toggle("row-selected",s)})})}setFirstCellActive(){$("cell-ring",this).setAttribute("state","active")}checkToggleAll(t){$$("table-row",this).forEach(e=>{e.classList.toggle("row-selected",t)}),$$("row-select input",this).forEach(e=>{e.checked=t})}addRow(){const t=`${this.db} ${this.tb}`,e=$("[data-first]",this).innerHTML,s=$('cell-ring[state="active"]',this).closest("table-row");$('cell-ring[state="active"]',this).closest("table-row").insertAdjacentHTML("afterend",e);const i=(new Date).getTime();s.nextElementSibling.dataset.index=i,temp.insert[t].data[i]=temp.insert[t].defaults}deactivateCells(){this.deactivateCellEdit(),this.deactivateCellRing()}deactivateCellRing(){const t=$('cell-ring[state="active"], cell-ring[state="edit"]',this);t&&t.setAttribute("state","default")}deactivateCellEdit(){const t=$("cell-edit[active]",this);t&&(t.innerHTML="",t.removeAttribute("active"))}gridCols(){const t=get.tb.items(this.db,this.tb);let e=0,s=[];return t.cols_order.forEach(i=>{let a=null;const n=t.cols[i];a=n.config&&n.config.hasOwnProperty("width")?n.config.width:300,s.push(a),e+=a,console.log(a)}),{sum:e,widths:s}}templateTableCells(){let t="";return temp.insert[this.tb]={defaults:{},data:[]},this.data.cols_order.forEach(e=>{const s=this.isNullable(e),i=this.parseDefault(e);this.data.meta.id!==e&&(temp.insert[this.tb].defaults[e]="true"==s?"":i),t+=`\n        <table-cell class="relative" col="${e}">\n          <cell-ring></cell-ring>\n          <cell-edit></cell-edit>\n          <cell-preview>\n            <preview-null class="text-opacity-50 text-gray-800 italic">NULL</preview-null>\n            <preview-value>${row[e]}</preview-value>\n          </cell-preview>\n        </table-cell>\n      `}),t}parseDefault(t){let e=this.data.cols[t].meta.Default;return e=this.trimNull(e),e=this.trimQuotes(e),e}trimNull(t){return null!==t?t:""}trimQuotes(t){return t.startsWith("'")&&t.endsWith("'")?t.slice(1,-1):t}isNullable(t){return"YES"==this.data.cols[t].meta.Null?"true":"false"}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("pane-main",PaneMain);class RadioItem extends HTMLElement{constructor(){super()}connectedCallback(){const t=this.getAttribute("name"),e=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`\n      <label class="flex select-none items-center gap-2">\n        <input type="radio" class="w-4 h-4 focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${t}" ${s} />\n        ${e}\n      </label>\n    `}}customElements.define("radio-item",RadioItem);class ActionsAdd extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-default"),this.innerHTML='\n      <img-svg src="remixicon/add-circle-line.svg" classes="w-5 h-5"></img-svg>\n      <div>Add</div>\n    ',this.onClick()}attributeChangedCallback(t,e,s){}onClick(){this.addEventListener("click",()=>{const t=$('cell-ring[state="active"]',this.closest("pane-main"));t&&t.closest("pane-main").addRow()})}}customElements.define("actions-add",ActionsAdd);class ActionsBtn extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const t=this.getAttribute("label"),e=this.getAttribute("icon");this.classList.add("btn"),this.classList.add("btn-default"),this.innerHTML=`\n      <img-svg src="${e}" classes="w-5 h-5"></img-svg>\n      <div>${t}</div>\n    `}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.replace("btn-default","btn-default-active")}thisDeactivate(){this.classList.replace("btn-default-active","btn-default")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("actions-btn",ActionsBtn);class ActionsPanes extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("block","bg-white","border","rounded","border-gray-200"),this.setAttribute("hidden",""),this.innerHTML="\n      <panes-x></panes-x>\n      <columns-x></columns-x>\n      <filter-x></filter-x>\n      <order-x></order-x>\n    "}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(t){this.setAttribute("active","true"),this.querySelector(t).removeAttribute("hidden")}deactivate(){[...this.children].forEach(t=>{t.setAttribute("hidden","")}),this.removeAttribute("active")}}customElements.define("actions-panes",ActionsPanes);class ActionsTab extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const t=this.getAttribute("label"),e=this.getAttribute("icon");this.classList.add("btn","btn-default"),this.innerHTML=`\n      <img-svg src="${e}" classes="w-5 h-5"></img-svg>\n      <div>${t}</div>\n      <img-svg src="remixicon/arrow-down-s.svg" classes="w-5 h-5 fill-current opacity-30"></img-svg>\n    `,this.onClick()}onClick(){this.addEventListener("click",()=>{const t="true"==this.getAttribute("active"),e=this.getAttribute("name"),s=this.closest("pane-main").querySelector("actions-panes");console.log(s),this.closest("pane-main").querySelector("actions-tabs").deactivate(),s.deactivate(),t||(this.activate(),s.activate(e))})}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.replace("btn-default","btn-default-active")}thisDeactivate(){this.classList.replace("btn-default-active","btn-default")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("actions-tab",ActionsTab);class ActionsTabs extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","gap-4","pt-4","bg-gray-50","justify-between","gap-1"),this.innerHTML='\n      <div class="flex gap-1">\n        <actions-tab name="panes-x" label="Panes" icon="remixicon/layout-5-line.svg"></actions-tab>\n        <actions-tab name="columns-x" label="Columns" icon="remixicon/layout-column-line.svg"></actions-tab>\n        <actions-tab name="filter-x" label="Filter" icon="remixicon/filter-3-line.svg"></actions-tab>\n        <actions-tab name="order-x" label="Order" icon="remixicon/arrow-up-down.svg"></actions-tab>\n      </div>\n      <div class="flex gap-1">\n        <actions-btn name="refresh" label="Refresh" icon="material-icons/refresh.svg"></actions-btn>\n        <actions-add></actions-add>\n        <execute-x></execute-x>\n        <revert-x></revert-x>\n      </div>\n    '}deactivate(){$$("actions-tab",this).forEach(t=>{t.deactivate()})}}customElements.define("actions-tabs",ActionsTabs);class ActionsX extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col","gap-4"),this.innerHTML="      \n      <actions-tabs></actions-tabs>\n      <actions-panes></actions-panes>\n      "}}customElements.define("actions-x",ActionsX);class PaneClose extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="p-2">\n        <button class="focus:outline-none hover:bg-gray-100 p-2 rounded">\n          <img-svg src="remixicon/close.svg"></img-svg>\n        </button>\n      </div>',this.onClick()}onClick(){$("button",this).addEventListener("click",()=>{$("actions-panes > *:not([hidden])",this).setAttribute("hidden",""),$("actions-panes",this).removeAttribute("active"),$('actions-tab[active="true"]',this).deactivate()})}}customElements.define("pane-close",PaneClose);class ColumnsItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["checked"]}connectedCallback(){const t=this.getAttribute("name"),e=this.getAttribute("checked");this.classList.add("flex"),this.innerHTML=this.template(t,e),this.onClick()}template(t,e){return`\n      <label class="btn btn-borderless">\n        <input type="checkbox" name="${t}" class="checkbox form-checkbox" ${e?"checked":""}>\n        ${t}\n      </label>\n    `}attributeChangedCallback(t,e,s){e!==s&&"checked"==t&&this.onChange()}onClick(){$("input",this).addEventListener("change",t=>{t.currentTarget.checked?this.activate():this.deactivate()})}onChange(){console.log("Something has changed")}activate(){this.setAttribute("checked","true")}deactivate(){this.removeAttribute("checked")}}customElements.define("columns-item",ColumnsItem);class ColumnsX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-2","flex","flex-col","text-sm","p-4"),this.setAttribute("hidden",""),this.innerHTML=this.template("Columns")}checkboxes(){const t=this.closest("pane-main").getAttribute("database"),e=this.closest("pane-main").getAttribute("table"),s=get.tb.items(t,e),i=s.cols_all,a=s.cols_order;let n="";return i.forEach(t=>{const e=a.includes(t);n+=`<columns-item name="${t}" ${e?'checked="true"':""}></columns-item>`}),n}template(t){return`\n      <div class="font-bold">${t}</div>\n      <div class="flex gap-x-4 gap-y-1 flex-wrap">\n        ${this.checkboxes()}\n      </div>\n    `}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.remove("hidden")}thisDeactivate(){this.classList.add("hidden")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("columns-x",ColumnsX);class FilterItem extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("contents"),this.innerHTML=`\n      <select class="form-select actionbar-select">\n        <option>hello</option>\n        <option>hello2</option>\n      </select>\n      <select class="form-select actionbar-select">\n        ${this.matchesOptions()}\n      </select>\n      <input type="text" class="form-input actionbar-select" />\n      <filter-delete class="btn btn-default">\n        <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>\n      </filter-delete>\n    `,this.onRemove()}onRemove(){this.querySelector("filter-delete").addEventListener("click",t=>{t.currentTarget.closest("filter-item").remove()})}matchesOptions(){let t=[];return[{name:"contains",label:"Contains"},{name:"not_contains",label:"Not contains"},{name:"starts_with",label:"Starts with"},{name:"ends_with",label:"Ends with"},{name:"equals",label:"Equals"},{name:"not_equals",label:"Not equals"},{name:"less_than",label:"Less than"},{name:"larger_than",label:"Larger than"}].forEach(e=>{t.push(`<option value="${e.name}">${e.label}</option>`)}),t.join(" ")}}customElements.define("filter-item",FilterItem);class FilterX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","flex-col","p-4","text-sm"),this.setAttribute("hidden",""),this.innerHTML=this.template("Filter"),this.onAdd()}template(t){return`      \n      <div class="grid grid-cols-[minmax(200px,max-content),minmax(200px,max-content),1fr,auto] gap-2 flex-col">\n        <div class="contents">\n          ${this.heading("Column")}\n          ${this.heading("Match")}\n          ${this.heading("Value")}\n          ${this.heading("")}\n        </div>\n        <filter-items class="contents"></filter-items>\n      </div>\n      <div class="flex gap-2 justify-between">\n        <filter-add class="btn btn-default">\n          <img-svg src="remixicon/add.svg" classes="w-5 h-5"></img-svg>\n          <div>Add new</div>\n        </filter-add>\n        <button class="btn btn-primary">\n          <img-svg src="remixicon/filter-3-line.svg" classes="w-5 h-5"></img-svg>\n          <div>Filter rows</div>\n        </button>\n      </div>\n    `}onAdd(){$("filter-add").addEventListener("click",()=>{this.appendItem()})}appendItem(){$("filter-items").insertAdjacentHTML("beforeend","<filter-item></filter-item>")}heading(t){return`<div class="font-bold text-sm">${t}</div>`}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("filter-x",FilterX);class OrderItem extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("contents"),this.innerHTML=`\n      <select class="form-select actionbar-select">\n        <option>hello</option>\n        <option>hello2</option>\n      </select>\n      <select class="form-select actionbar-select">\n        ${this.matchesOptions()}\n      </select>\n      <order-delete class="btn btn-default">\n        <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>\n      </order-delete>\n    `,this.onRemove()}onRemove(){this.querySelector("order-delete").addEventListener("click",t=>{t.currentTarget.closest("order-item").remove()})}matchesOptions(){let t=[];return[{name:"ASC",label:"Ascending"},{name:"DESC",label:"Descending"}].forEach(e=>{t.push(`<option value="${e.name}">${e.label}</option>`)}),t.join(" ")}}customElements.define("order-item",OrderItem);class OrderX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","flex-col","p-4","text-sm"),this.setAttribute("hidden",""),this.innerHTML=this.template(),this.onAdd()}template(){return`\n      <div class="grid grid-cols-[minmax(200px,max-content),1fr,auto] gap-2 flex-col">\n        <div class="contents">\n          ${this.heading("Order by")}\n          ${this.heading("Order")}\n          ${this.heading("")}\n        </div>\n        <order-items class="contents"></order-items>\n      </div>\n      <div class="flex gap-2 justify-between">\n        <order-add class="btn btn-default">\n          <img-svg src="remixicon/add.svg" classes="w-5 h-5"></img-svg>\n          <div>Add new</div>\n        </order-add>\n        <button class="btn btn-primary">\n          <img-svg src="remixicon/arrow-up-down.svg" classes="w-5 h-5"></img-svg>\n          <div>Order rows</div>\n        </button>\n      </div>\n    `}onAdd(){$("order-add").addEventListener("click",()=>{this.appendItem()})}appendItem(){$("order-items").insertAdjacentHTML("beforeend","<order-item></order-item>")}heading(t){return`<div class="font-bold text-sm">${t}</div>`}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("order-x",OrderX);class PanesItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["checked"]}connectedCallback(){const t=this.getAttribute("name"),e=this.getAttribute("label"),s=this.getAttribute("checked");this.classList.add("flex"),this.innerHTML=this.template(t,e,s),this.onClick()}template(t,e,s){return`\n      <label class="btn btn-borderless">\n        <input type="checkbox" name="${t}" class="checkbox form-checkbox" ${s?"checked":""}>\n        ${e}\n      </label>\n    `}attributeChangedCallback(t,e,s){e!==s&&"checked"==t&&this.onChange(s)}onClick(){this.querySelector("input").addEventListener("change",t=>{t.currentTarget.checked?this.activate():this.deactivate()})}onChange(t){const e=this.getAttribute("name");$$(e).forEach(s=>{t?s.removeAttribute("hidden",""):s.setAttribute("hidden",""),$$(`panes-item[name="${e}"]`).forEach(e=>{t?e.setAttribute("checked","true"):e.removeAttribute("checked"),e.querySelector("input").checked=t})})}activate(){this.setAttribute("checked","true")}deactivate(){this.removeAttribute("checked")}}customElements.define("panes-item",PanesItem);class PanesX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-2","flex","flex-col","p-4","text-sm"),this.setAttribute("hidden",""),this.innerHTML=this.template()}checkboxes(){return'\n      <panes-item name="topbar-wrap" label="Top" checked="true"></panes-item>\n      <panes-item name="sidebar-wrap" label="Sidebar" checked="true"></panes-item>\n      <panes-item name="pagination-x" label="Footer" checked="true"></panes-item>\n    '}template(){return`\n      <div class="font-bold">Panes</div>\n      <div class="flex gap-4">\n        ${this.checkboxes()}\n      </div>\n    `}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.remove("hidden")}thisDeactivate(){this.classList.add("hidden")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("panes-x",PanesX);class DeleteX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-default"),this.innerHTML='\n      <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>\n      Delete checked\n    ',this.onClick()}onClick(){this.addEventListener("click",()=>{$$(".row-new[active]").forEach(t=>{t.remove()}),this.delete()})}async delete(){const t=[1,2,3];try{return(await axios.post("http://localhost/tools/squares/server/php/queries/delete.php?database=asda&table=asda",{ids:t})).data}catch(t){console.error(t)}}}customElements.define("delete-x",DeleteX);class ExecuteX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-primary"),this.innerHTML='\n      <img-svg src="remixicon/flashlight-fill.svg" classes="w-5 h-5"></img-svg>\n      Execute\n    '}onClick(){this.addEventListener("click",()=>{this.run()})}async run(){const t=[1,2,3];try{return(await axios.post("http://localhost/tools/squares/server/php/queries/delete.php?database=asda&table=asda",{ids:t})).data}catch(t){console.error(t)}}}customElements.define("execute-x",ExecuteX);class PaginationX extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n    <div class="flex justify-between pb-4 bg-gray-50">\n      <row-actions></row-actions>\n      <div class="flex gap-4">\n        ${this.buttonTemplate("prev","remixicon/arrow-left-s-line.svg")}\n        <records-x offset="101" rows="100" total="120234233"></records-x>\n        ${this.buttonTemplate("next","remixicon/arrow-right-s-line.svg")}\n      </div>\n    </div>\n    `}buttonTemplate(t,e){return`\n      <records-${t} class="py-1.5 px-2 select-none flex gap-1 items-center hover:bg-grayExtra rounded">\n        <img-svg src="${e}" classes="w-5 h-5">\n      </records-${t}>`}}customElements.define("pagination-x",PaginationX);class RecordsX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["limit","rows","total"]}connectedCallback(){this.classList.add("text-13","items-center","flex"),this.update()}attributeChangedCallback(t,e,s){e!==s&&this.update()}update(){const t=this.getAttribute("offset"),e=this.getAttribute("rows"),s=this.getAttribute("total");this.innerHTML=this.template(t,e,s)}template(t,e,s){return`${t}-${parseInt(t)+parseInt(e)} of ${parseInt(s).toLocaleString("en-US")}`}}customElements.define("records-x",RecordsX);class RevertX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-danger"),this.innerHTML='\n      <img-svg src="material-icons/undo_black_24dp.svg" classes="w-5 h-5"></img-svg>\n      Revert\n    '}onClick(){this.addEventListener("click",()=>{this.run()})}async run(){const t=[1,2,3];try{return(await axios.post("http://localhost/tools/squares/server/php/queries/delete.php?database=asda&table=asda",{ids:t})).data}catch(t){console.error(t)}}}customElements.define("revert-x",RevertX);class RowActions extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("invisible","flex","gap-1"),this.innerHTML='\n      <delete-x></delete-x>\n      <duplicate-x class="btn btn-default">\n        <img-svg src="remixicon/file-copy-2-line.svg" classes="w-5 h-5"></img-svg>\n        Duplicate checked\n      </duplicate-x>\n    '}attributeChangedCallback(t,e,s){e!==s&&"active"==t&&("true"==s?this.thisActivate():this.thisDeactivate())}toggle(){$("row-select input:checked",this.closest("pane-main"))?this.activate():this.deactivate()}thisActivate(){this.classList.remove("invisible")}thisDeactivate(){this.classList.add("invisible")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("row-actions",RowActions);class DbList extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col"),actions.databases.load()}databasesPopulate(){let t="";state.databases_order.forEach(e=>{t+=`\n      <db-group db="${e}">\n        <db-item class="nav-row">\n          <img-svg\n            src="remixicon/database-2-fill.svg"\n            classes="w-4 h-4 text-yellow-500">\n          </img-svg>\n          <div class="flex-1 truncate font-bold text-sm">\n            ${e}\n          </div>\n          <img-svg\n            arrow\n            src="remixicon/arrow-down-s.svg"\n            class="transform"\n            classes="w-4 h-4 text-gray-800">\n          </img-svg>\n        </db-item>\n        <tb-section hidden>\n          <tb-refresh class="nav-row">\n            <img-svg\n              src="material-icons/refresh.svg"\n              classes="w-4 h-4 text-gray-400">\n            </img-svg>\n            <div class="flex-1 truncate text-13">Refresh</div>\n          </tb-refresh>\n          <tb-loading class="nav-row">\n            <img-svg\n              src="material-icons/refresh.svg"\n              classes="w-4 h-4 text-gray-400 animate-spin">\n            </img-svg>\n            <div class="flex-1 truncate text-13">Loading...</div>\n          </tb-loading>\n          <tb-group></tb-group>\n        </tb-section>\n      </db-group>`}),this.innerHTML+=t,this.onClickRefresh(),this.onClickDatabase()}tablesPopulate(t){let e="";state.databases[t].table_order.forEach(t=>{e+=`\n        <tb-item tb="${t}" title="${t}" class="nav-row">\n          <img-svg src="boxicons/bx-table.svg" classes="w-4 h-4 text-navy-400"></img-svg>\n          <div class="flex-1 truncate text-13">${t}</div>\n        </tb-item>\n      `}),this.dom("tb-group",t).innerHTML=e,this.onClickTable(t)}onClickRefresh(){$$("tb-refresh").forEach(t=>{t.on("click",t=>{const e=t.currentTarget.closest("db-group").getAttribute("db");actions.tables.load(e)})})}onClickDatabase(){$$("db-item").forEach(t=>{t.on("click",t=>{const e=t.currentTarget.closest("db-group").getAttribute("db");actions.database.toggle(e)})})}onClickTable(t){$$("tb-item",this.dom("tb-group",t)).forEach(t=>{t.on("click",t=>{const e=t.currentTarget,s=e.getAttribute("tb"),i=e.closest("db-group").getAttribute("db");actions.table.load(i,s)})})}arrowUp(t){this.dom("[arrow]",t).classList.add("rotate-180")}arrowDown(t){this.dom("[arrow]",t).classList.remove("rotate-180")}showElement(t,e){this.dom(t,e).removeAttribute("hidden")}hideElement(t,e){this.dom(t,e).setAttribute("hidden","")}groupEmpty(t){return""==this.dom("tb-group",t).innerHTML}activateTb(){this.tbItem().setAttribute("active","true")}deactivateTb(){$$("tb-item").forEach(t=>{t.removeAttribute("active")})}dom=(t,e)=>$(t,this.dbGroup(e));dbGroup=t=>$(`db-group[db="${t}"]`);tbItem=()=>$(`tb-item[tb="${state.table}"]`,this.dbGroup(state.database))}customElements.define("db-list",DbList);class SidebarFilter extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <label class="flex flex-col gap-2">\n        <div class="uppercase font-bold text-sm">Filter tables</div>\n        <input spellcheck="false" placeholder="Show matching tables..." type="text" class="form-input bg-white border-gray-200 text-sm rounded focus:ring-0 focus:border-gray-400">\n      </label>\n    ',this.onChange()}onChange(){this.querySelector("input").addEventListener("input",()=>{this.filter()})}filter(){const t=$("sidebar-filter input").value;$$("sidebar-table").forEach(e=>{e.getValue().includes(t)?e.show():e.hide()})}}customElements.define("sidebar-filter",SidebarFilter);class SidebarX extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col","pb-4","overflow-auto","resize-x","bg-gray-50","w-80","gap-4","pl-4"),this.innerHTML='\n      <h2 class="pt-4 text-sm text-gray-400 uppercase">Databases and tables</h2>\n      <sidebar-filter></sidebar-filter>\n      <db-list></db-list>\n    '}}customElements.define("sidebar-x",SidebarX);class IconDatabase2 extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes"]}connectedCallback(){this.innerHTML='\n        <svg\n          xmlns="http://www.w3.org/2000/svg"\n          viewBox="0 0 24 24"\n          width="24"\n          height="24"\n        >\n          <path fill="none" d="M0 0h24v24H0z" />\n          <path\n            d="M5 12.5c0 .313.461.858 1.53 1.393C7.914 14.585 9.877 15 12 15c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171C17.35 11.349 14.827 12 12 12s-5.35-.652-7-1.671V12.5zm14 2.829C17.35 16.349 14.827 17 12 17s-5.35-.652-7-1.671V17.5c0 .313.461.858 1.53 1.393C7.914 19.585 9.877 20 12 20c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171zM3 17.5v-10C3 5.015 7.03 3 12 3s9 2.015 9 4.5v10c0 2.485-4.03 4.5-9 4.5s-9-2.015-9-4.5zm9-7.5c2.123 0 4.086-.415 5.47-1.107C18.539 8.358 19 7.813 19 7.5c0-.313-.461-.858-1.53-1.393C16.086 5.415 14.123 5 12 5c-2.123 0-4.086.415-5.47 1.107C5.461 6.642 5 7.187 5 7.5c0 .313.461.858 1.53 1.393C7.914 9.585 9.877 10 12 10z"\n          />\n        </svg>\n      ',this.querySelector("svg").setAttribute("class",this.classes)}attributeChangedCallback(t,e,s){e!==s&&(this.classes=s)}}customElements.define("icon-database-2",IconDatabase2);class ModalInfo extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex flex-col flex-1 gap-6">\n        <div class="flex gap-3 items-center">\n          <img-svg src="remixicon/checkbox-multiple-blank.svg" classes="h-12 w-12"></img-svg>\n          <img-svg\n            src="logo.svg"\n            classes="h-10"\n          ></img-svg>\n        </div>\n        we rjiweor jweior jweior jwer iowejrio wejrweiojr weiorj weiorj\n        weiorj iowerj weiorj weiorjwe\n\n        \x3c!-- Links --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">Links</h2>\n          <ul class="list-disc list-inside">\n            <li>\n              <a\n                href="https://github.com/getsquares/squares"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Github</a\n              >\n            </li>\n            <li>\n              <a\n                href="https://github.com/getsquares/squares"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Documentation</a\n              >\n            </li>\n          </ul>\n        </div>\n\n        \x3c!-- Dependencies --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">Dependencies</h2>\n          <ul class="list-disc list-inside">\n            <li>\n              <a\n                href="https://remixicon.com/"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Remixicon</a\n              >\n            </li>\n            <li>\n              <a\n                href="https://fonts.google.com/icons"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Material Icons</a\n              >\n            </li>\n          </ul>\n        </div>\n\n        \x3c!-- Dependencies --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">License</h2>\n          <p>\n            Free to use with some limitations. You are not allowed to use\n            the source code in your own projects.\n          </p>\n        </div>\n        \n        \x3c!-- Purchase --\x3e\n        <div class="flex flex-col gap-4">\n          <div class="flex flex-col gap-2">\n            <h2 class="text-xl font-bold">Purchase</h2>\n            <p>\n              By purchasing to this product, you will support the software\n              now and in the future.\n            </p>\n          </div>\n          <div class="flex gap-2">\n            <div>\n              <button-item title="Purchase" href="#" style="action"></button-item>\n            </div>\n            <div>\n              <button-item title="Cancel" style="ghost"></button-item>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-info",ModalInfo);class ModalLogout extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex flex-col flex-1 gap-6">\n        <div class="flex flex-col gap-6">\n          <div class="flex flex-col gap-2">\n            <h2 class="text-xl font-bold">Logout</h2>\n            <p>\n              You you want to logout?\n            </p>\n          </div>\n          <div class="flex gap-2">\n            <div>\n              <button-item href="#" title="Logout" style="default"></button-item>\n            </div>\n            <div>\n              <button-item title="Cancel" style="ghost"></button-item>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-logout",ModalLogout);class CellEdit extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active","is_null","nullable"]}connectedCallback(){this.toggleActive()}set nullable(t){this.nullableValue=t}get nullable(){return this.nullableValue}set active(t){this.activeValue=t}get active(){return this.activeValue}set is_null(t){this.nullValue=t}get is_null(){return this.nullValue}toggleActive(){this.active?this.thisActivate():this.thisDeactivate()}toggleNull(){this.nullable&&(this.is_null?this.setChecked(!0):this.setChecked(!1))}attributeChangedCallback(t,e,s){if(e!==s)switch(t){case"active":this.active="true"==s,this.toggleActive();break;case"is_null":this.is_null="true"==s,this.toggleNull();break;case"nullable":this.nullable="true"==s}}setChecked(t){$('input[type="checkbox"][name="null"]')&&($('input[type="checkbox"][name="null"]').checked=t)}populate(){const t="true"==this.closest("table-cell").getAttribute("nullable");let e="";t&&(e='\n        <label class="flex gap-2 items-center">\n          <input type="checkbox" class="checkstyle-white form-checkbox" name="null">\n          <div class="italic">NULL</div>\n        </label>\n      ');let s=`\n      ${e}\n      <field-text></field-text>\n    `;this.innerHTML=s,t&&this.onClickNull()}onClickNull(){$('input[type="checkbox"][name="null"]',this).addEventListener("click",t=>{const e=!!t.currentTarget.checked;$("cell-preview",this.closest("table-cell")).setAttribute("is_null",e),this.setAttribute("is_null",e)})}thisActivate(){this.removeAttribute("hidden"),this.populate(),this.toggleNull()}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("cell-edit",CellEdit);class CellRing extends HTMLElement{constructor(){super()}static get observedAttributes(){return["state"]}connectedCallback(){}attributeChangedCallback(t,e,s){"state"==t&&e!==s&&"default"!=s&&this.xEdges()}}class TableCell extends HTMLElement{constructor(){super()}connectedCallback(){this.db=this.closest("pane-main").getAttribute("db"),this.tb=this.closest("pane-main").getAttribute("tb"),this.col=this.getAttribute("col"),this.row=this.getAttribute("row"),this.index=this.getAttribute("index"),this.data=get.tb.items(this.db,this.tb),this.value=get.tb.value(this.db,this.tb,this.col,this.index),this.col_data=get.col.data(this.db,this.tb,this.col),console.log(this.col_data),this.innerHTML='\n      <cell-ring></cell-ring>\n      <cell-edit></cell-edit>\n      <cell-preview>\n        <preview-null class="text-opacity-50 text-gray-800 italic">NULL</preview-null>\n        <preview-value></preview-value>\n      </cell-preview>\n    ',this.xEdges(),this.setPreviewValue(),this.setPreviewNull(),this.onClickRing(),this.onDblclickRing()}setPreviewValue(){$("preview-value",this).innerText=this.value}setPreviewNull(){$("preview-null",this).hidden=null!==this.value,$("preview-value",this).hidden=null===this.value}onClickRing(){$("cell-ring",this).on("click",()=>{this.handleCellActive(this)})}onDblclickRing(){$("cell-ring",this).on("dblclick",()=>{this.handleCellEdit()})}handleStep(t){switch(t){case"ArrowLeft":this.stepLeft();break;case"ArrowRight":this.stepRight();break;case"ArrowUp":this.stepUp();break;case"ArrowDown":this.stepDown()}}stepLeft(){const t=this.previousElementSibling;t&&"TABLE-CELL"===t.tagName&&this.handleCellActive(t)}stepRight(){const t=this.nextElementSibling;t&&"TABLE-CELL"===t.tagName&&this.handleCellActive(t)}stepDown(){const t=cellActiveIndex(this),e=this.parentElement.nextElementSibling;e&&"TABLE-ROW"===e.tagName&&$(`table-cell:nth-child(${t})`,e).handleCellActive(e)}stepUp(){const t=cellActiveIndex(this),e=this.parentElement.previousElementSibling;e&&"TABLE-ROW"===e.tagName&&$(`table-cell:nth-child(${t})`,e).handleCellActive(e)}handleCellTab(t){t.preventDefault(),this.handleStep(t.shiftKey?"ArrowLeft":"ArrowRight")}handleCellEdit(){console.log("edit"),in_field?in_field=!1:(this.setAttribute("state","edit"),$("cell-edit",this).activate())}handleCellActive(t){"active"!=$("cell-ring",t).getAttribute("state")&&(this.closest("pane-main").deactivateCells(),$("cell-ring",t).setAttribute("state","active"))}isNullable(){return"YES"==this.col_data.meta.Null?"true":"false"}xEdges(){const t=this.previousElementSibling,e=this.nextElementSibling;"ROW-SELECT"==t.tagName?$("cell-ring",this).classList.add("ml-2px"):e||$("cell-ring",this).classList.add("mr-2px")}}customElements.define("table-cell",TableCell);class TabItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}set database(t){this.databaseValue=t}get database(){return this.databaseValue}set table(t){this.tableValue=t}get table(){return this.tableValue}connectedCallback(){this.database=this.getAttribute("database"),this.table=this.getAttribute("table"),this.setAttribute("title",this.database+"/"+this.table),this.innerHTML=`\n      ${this.table}\n      <img-svg src="remixicon/close.svg" classes="rounded w-5 h-5">\n    `,this.onClick(),this.onCloseClick(),this.onMiddleClick()}deactivate(){this.removeAttribute("active")}activate(){this.setAttribute("active","true")}onClick(){this.on("mousedown",t=>{t.currentTarget===t.target&&1!==t.button&&actions.table.activate(this.database,this.table)})}onCloseClick(){$("img-svg",this).on("click",()=>{this.handleClose()})}onMiddleClick(){this.on("mouseup",t=>{1===t.button&&this.handleClose()})}handleClose(){"true"==this.getAttribute("active")?actions.table.closeTab(this.database,this.table):this.remove()}}customElements.define("tab-item",TabItem);class TabItems extends HTMLElement{constructor(){super()}static get observedAttributes(){return["database","table"]}connectedCallback(){this.classList.add("flex","items-center","gap-2","bg-blueGray-700","overflow-auto","w-full","px-2","self-end")}activate(){this.deactivate(),this.tab(state.database,state.table)?this.tab(state.database,state.table).activate():(this.create(state.database,state.table),this.last().activate())}close(t,e){$(`tab-item[database="${t}"][table="${e}"]`).remove()}deactivate(){const t=$$("tab-item");t&&t.forEach(t=>{t.deactivate()})}create(t,e){$("tab-items").insertAdjacentHTML("beforeend",this.templateTab(t,e,"true"))}templateTab(t,e,s){return`\n    <tab-item database="${t}" table="${e}" active="${s}"></tab-item>`}last(){return $("tab-item:last-child")}tab(t,e){return $(`tab-item[database="${t}"][table="${e}"]`)}}customElements.define("tab-items",TabItems);class ActionbarInfo extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <div data-action>\n        <img-svg src="remixicon/info.svg" classes="w-5 h-5">\n        <div>Info</div>\n      </div>kkk\n    '+this.modal()}attributeChangedCallback(t,e,s){"active"==t&&e!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}onClick(){}modal(){return'\n    <div class="bg-black inset-0">test</div>\n    '}}customElements.define("actionbar-info",ActionbarInfo);class TopbarItems extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n      <div class="flex gap-2 text-sm text-white py-2">\n        ${this.itemHtml("info","Info","remixicon/question-fill.svg")}\n        ${this.itemHtml("logout","Logout","material-icons/logout_black_24dp.svg")}\n      </div>\n    `,this.onClick()}itemHtml(t,e,s){return`\n      <div title="${e}" data-action="${t}" class="flex items-center gap-1 fill-current px-2 py-1.5 select-none hover:bg-black hover:bg-opacity-20 rounded"\n      >\n      <img-svg src="${s}"></img-svg>\n    </div>\n    `}onClick(){this.querySelectorAll("[data-action]").forEach(t=>{t.addEventListener("click",t=>{const e=t.currentTarget.getAttribute("data-action");["info","logout"].includes(e)&&($("[data-modal-content]").innerHTML=`<modal-${e}></modal-${e}>`,$("modal-box").activate())})})}}customElements.define("topbar-items",TopbarItems);class TopbarWrap extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n    <div\n      class="flex items-center justify-between pr-2 text-gray-200 bg-blueGray-700"\n    >\n      <resize-logo>\n        <div class="pl-4 pr-8 flex items-center gap-2 text-2xl text-white uppercase">\n          <img-svg\n            src="remixicon/checkbox-multiple-blank.svg"\n          ></img-svg>\n          <img-svg src="logo.svg" classes="h-5"></img-svg>\n        </div>\n      </resize-logo>\n      <topbar-items></topbar-items>\n    </div>\n    '}}customElements.define("topbar-wrap",TopbarWrap);class FieldText extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <input value="omomo" type="text" class="form-input focus:outline-none focus:ring-yellow-500 focus:ring-offset-1 border-2 focus:ring-2 focus:border-gray-300 border-gray-300">\n    ',this.onKeyup(),this.onEnter(),this.onEscape(),updatePreview($("input",this).value,this),$("input",this).select()}onKeyup(){$("input",this).addEventListener("keyup",t=>{const e=t.currentTarget.value;cell.setTempValue(e,this),updatePreview(e,this),console.log(temp)})}onEnter(){$("input",this).addEventListener("keydown",t=>{"Enter"===t.key&&(t.preventDefault(),leaveEdit(t))})}onEscape(){window.addEventListener("keydown",t=>{if("Escape"!==t.key)return;$('cell-ring[state="edit"]')&&(t.preventDefault(),fieldClose())})}attributeChangedCallback(t,e,s){}}customElements.define("field-text",FieldText);