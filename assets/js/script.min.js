const $=(e,t=document)=>t.querySelector(e),$$=(e,t=document)=>t.querySelectorAll(e);Node.prototype.on=function(e,t){return this.addEventListener(e,t)};var get={},set={},actions={},triggers={},state={database:null,table:null,databases_order:[],databases:{},tables:[],fields:{}};function tabClassActive(){return["bg-navy-100","text-navy-900","border-navy-300"]}function tabClassInactive(){return["hover:bg-gray-100","bg-gray-50","bg-gradient-to-b","from-white","to-gray-100","border-gray-300"]}function hollowClassActive(){return["bg-navy-100","text-navy-900","border","border-navy-300","rounded"]}function hollowClassInactive(){return["hover:bg-grayExtra","border","border-transparent"]}function eventCellKeydown(){window.addEventListener("keydown",t=>{var e=$(`pane-main[db="${state.database}"][tb="${state.table}"]`);const s=$('cell-ring[state="active"]',e);var a=$('cell-ring[state="edit"]',e);if(s){let e=s.closest("table-cell");if(e)switch(t.key){case"ArrowLeft":case"ArrowRight":case"ArrowDown":case"ArrowUp":e.handleStep(t.key);break;case"Tab":e.handleCellTab(t);break;case"Enter":e.handleCellEdit()}}else if(a)switch(t.key){case"Enter":console.log("ENTER");break;case"Escape":fieldClose(a)}})}function handleCellClose(){isCellState("edit")&&(dom.current.cell_ring.setAttribute("state","active"),resetEdit())}class cell{static setPreview(e,t){$("preview-value",t.closest("table-cell")).innerHTML=e}static setTempValue(e,t){var s=table.get(t);const a=temp[row.getType(t)][s].data;a[row.getIndex(t)][cell.getColumn(t)]=e}static getValue(e){var t=e.closest("table-cell"),s=e.closest("pane-main"),a=s.db,e=s.tb,s=t.col,t=t.index;return get.tb.value(a,e,s,t)}static getColumn(e){return e.closest("table-cell").getAttribute("column")}static isNullable(){return"true"==obj.closest("table-cell").getAttribute("nullable")}static isNull(){return"true"==obj.closest("table-cell").getAttribute("is_null")}}function leaveEdit(e){in_field=!0,fieldClose(e),debug("cell",JSON.stringify(cellData(),null,4),"textarea")}function fieldClose(e){const t=e.closest("table-cell");e=t.getAttribute("mode");$('cell-ring[state="edit"]',t)&&($("cell-preview",t).hidden=!1,$("cell-ring",t).setAttribute("state","active"),$(`cell-edit-${e}`,t).hidden=!0)}function updatePreview(e,t){$("preview-value",t.closest("table-cell")).innerHTML=e,debug("cell",JSON.stringify(cellData(),null,4),"textarea")}function updateNull(e){const t=$("preview",e.closest("table-cell")),s=$("preview-value",e.closest("table-cell"));s.hidden=!0,t.setAttribute("active","true");const a=$("preview-null",e.closest("table-cell"));a.hidden=!1}function setCellPreviewState(e,t){t.querySelector("cell-preview").setAttribute("active",e)}function cellActiveIndex(e){return[...e.parentElement.children].indexOf(e)+1}function isCellActive(){return dom.current&&"active"==dom.current.cell_ring.getAttribute("state")}function isCellState(e="active"){return dom.current&&dom.current.cell_ring.getAttribute("state")==e}function setCellActiveToEl(e,t="active"){e.setAttribute("state",t)}function isEmpty(e){return 0===Object.keys(e).length}function error(e){}function success(e){}function resetStore(){dom.current=null,dom.left=null,dom.right=null,dom.up=null,dom.down=null}function debug(e,t,s="span"){$(`debug-box [data-${e}] ${s}`)&&($(`debug-box [data-${e}] ${s}`).innerHTML=t)}function cellData(){var e=state?.databases?.[state.database]?.table_items?.[state.table],t=e?.rows?.[state.index]?.[state.col],s=e?.cols?.[state.col]?.meta,a=e?.cols?.[state.col]?.config,e=e?.updates?.[`${state.index}:${state.col}`],a={field:"text",preview:"text",...a};return field_config={mode:"dropdown",...state?.fields[a.field]?.config},{value:t,meta:{is_nullable:"YES"===s.Null,type:s.Type},cell_config:a,field_config:field_config,updates:e}}class row{static isNew(e){return!!e.closest(".row-new")}static getType(e){return row.isNew(e)?"insert":"update"}static getIndex(e){return e.closest("table-row").dataset.index}}class tab{static onMiddleClick(t){t.on("mouseup",e=>{1===e.button&&tab.closeHandler(t)})}}class table{static get(e){let t=e;return"PANE-MAIN"!=e.tagName&&(t=e.closest("pane-main")),`${t.getAttribute("database")} ${t.getAttribute("table")}`}}class UpdateClass{constructor(){}initByContext(e){e=get.dom.cell.data(e);this.argsToObject(e)}argsToObject({db:e,tb:t,row:s,col:a,index:i}){this.db=e,this.tb=t,this.row=s,this.col=a,this.index=i,this.data=state?.databases[this.db]?.table_items[this.tb],this.old_value=get.tb.value(this.db,this.tb,this.col,this.index)}setNewValue(e){this.new_value=e}storeAddUpdated(){this.hasStoreUpdated()||(this.data.pending_updates={})}storeAddRow(){this.hasStoreRow()||(this.storeAddUpdated(),this.data.pending_updates[this.row]={})}storeAddCol(){this.hasStoreCol()||(this.storeAddRow(),this.data.pending_updates[this.row][this.col]={})}storeAddValue(e){this.storeAddCol(),this.data.pending_updates[this.row][this.col].value=e}storeAddIsNull(e){this.storeAddCol(),this.data.pending_updates[this.row][this.col].is_null=e}isUniqueValue(){return void 0!==this.hasStoreValue()&&this.getStoreValue()===this.old_value}isUniqueNull(){if(void 0===this.hasStoreIsNull())return!1;var e=null===this.old_value;return this.getStoreIsNull()===e}isDiff(){return!this.isUniqueValue()||!this.isNull()}getStoreValue(){return this.data.pending_updates[this.row][this.col].value}getStoreIsNull(){return this.data.pending_updates[this.row][this.col].is_null}hasStoreUpdated(){return this.data?.pending_updates}hasStoreRow(){return this.data?.pending_updates?.[this.row]}hasStoreCol(){return this.data?.pending_updates?.[this.row]?.[this.col]}hasStoreValue(){return this.data?.pending_updates?.[this.row]?.[this.col]?.value}hasStoreIsNull(){return this.data?.pending_updates?.[this.row]?.[this.col]?.is_null}removeValue(){this.hasStoreValue()&&delete this.data.pending_updates[this.row][this.col].value}removeIsNull(){this.hasStoreIsNull()&&delete this.data.pending_updates[this.row][this.col].is_null}removeCol(){this.hasStoreCol()&&delete this.data.pending_updates[this.row][this.col]}removeRow(){this.hasStoreRow()&&delete this.data.pending_updates[this.row]}removeUpdated(){this.hasStoreUpdated()&&delete this.data.pending_updates}}const test2=new UpdateClass({db:"test",tb:"asda"});actions.database={},actions.databases={},actions.databases.load=()=>{axios.get("server/php/queries/databases.php").then(e=>{200===e.status&&(set.database.order(e.data),set.database.items(e.data))})},actions.database.toggle=e=>{set.database.toggleState(e)},actions.table={},actions.tables={},actions.table.load=(t,s)=>{isEmpty(get.tb.items(t,s))?axios.get(`server/php/queries/data.php?database=${t}&table=${s}`).then(e=>{200===e.status&&(actions.table.activate(t,s),set.table.item(e.data,t,s))}):actions.table.activate(t,s)},actions.tables.load=t=>{axios.get(`server/php/queries/tables.php?database=${t}`).then(e=>{200===e.status&&(set.table.order(e.data,t),set.table.items(e.data,t))})},actions.table.activate=(e,t)=>{set.table.name(e,t)},actions.table.closeTab=(e,t)=>{set.table.item({},e,t),set.table.name(null,null)},get.db={},get.tb={},get.col={},get.dom={},get.dom.cell={},get.new={},get.dom.cell.data=e=>{var t=e.closest("pane-main");const s=e.closest("table-cell");return{db:t.db,tb:t.tb,col:s.getAttribute("col"),row:s.getAttribute("row"),index:s.getAttribute("index")}},get.tb.order=()=>state.databases[state.database].tables_order,get.tb.items=(e=state.database,t=state.table)=>state.databases[e].table_items[t],get.tb.value=(e,t,s,a)=>{return get.tb.items(e,t).rows[a][s]},get.new.param=(e,t)=>{var{db:s,tb:a,col:i,index:e}=get.dom.cell.data(e),t=get.tb.items(s,a)?.rows?.[e]?.[`${i}":"${t}`];if(void 0!==t)return t},get.tb.updated=(e,t,s,a,i)=>{e=get.tb.items(e,t),t=e?.rows?.[i]?.[`${a}:buffer`];return t||e.rows[i][a]},get.col.data=(e,t,s)=>{return get.tb.items(e,t).cols[s]},set.database={},set.database.order=e=>{state.databases_order=e},set.database.items=e=>{state.databases={},e.forEach(e=>{state.databases[e]={open:!1,table_order:[],table_items:{}}}),triggers.db.load()},set.database.toggleState=e=>{state.databases[e].open=!state.databases[e].open,triggers.db.toggle(e)},set.table={},set.pending={},set.new={},set.field={},set.table.order=(e,t)=>{state.databases[t].table_order=e},set.table.name=(e,t)=>{var s=state.database,a=state.table;state.database=e,state.table=t,state.table?triggers.tb.activate():triggers.tb.closeTab(s,a)},set.table.item=(e,t,s)=>{state.databases[t].table_items[s]=e,triggers.tb.data()},set.new.data=(e,t,s)=>{var{db:a,tb:i,col:l,index:s}=get.dom.cell.data(s);const n=state?.databases[a]?.table_items[i]?.rows?.[s];n&&(n[`${l}:value`]=t?null:e,n[`${l}:buffer`]=e)},set.new.nulled=(t,s)=>{var{db:e,tb:a,col:i,index:l}=get.dom.cell.data(s);const n=state?.databases[e]?.table_items[a]?.rows?.[l];if(n){let e=null;e=void 0!==n?.[`${i}:buffer`]?n[`${i}:buffer`]:n[i],n[`${i}:value`]=t?null:e,set.new.updates(n,s),triggers.cell.state(n,i,s)}},set.new.buffer=(e,t)=>{var{db:s,tb:a,col:i,index:l}=get.dom.cell.data(t);const n=state?.databases[s]?.table_items[a]?.rows?.[l];n&&(n[`${i}:buffer`]=e,null!==n?.[`${i}:value`]&&(n[`${i}:value`]=e),set.new.updates(n,t),triggers.cell.state(n,i,t))},set.new.updates=(e,t)=>{var{db:s,tb:a,col:i,row:l,index:t}=get.dom.cell.data(t);state?.databases?.[s]?.table_items?.[a]?.updates||(state.databases[s].table_items[a].updates={}),e[i]!==e[`${i}:value`]?state.databases[s].table_items[a].updates[`${t}:${i}`]={content:e[`${i}:value`],col:i,row:l,index:t}:delete state.databases[s].table_items[a].updates[`${t}:${i}`]},set.table.items=(e,t)=>{e.forEach(e=>{state.databases[t].table_items[e]={}}),triggers.tb.items(t)},set.field.config=(e,t)=>{state.fields[e]={},state.fields[e].config=t};var test=[];test[3]="Hello",triggers.cell={},triggers.cell.update=e=>{e.closest("table-cell").removeAttribute("state")},triggers.cell.state=(e,t,s)=>{e[t]!==e[`${t}:value`]?s.closest("table-cell").setAttribute("state","changed"):"error"!=s.closest("table-cell").getAttribute("state")&&s.closest("table-cell").removeAttribute("state")},triggers.db={},triggers.db.load=()=>{$("db-list").databasesPopulate()},triggers.db.toggle=e=>{triggers.db.open(e),triggers.db.close(e)},triggers.db.open=e=>{state.databases[e].open&&($("db-list").arrowUp(e),$("db-list").showElement("tb-section",e),$("db-list").groupEmpty(e)&&actions.tables.load(e))},triggers.db.close=e=>{state.databases[e].open||($("db-list").arrowDown(e),$("db-list").hideElement("tb-section",e))},triggers.tb={},triggers.tb.activate=()=>{$("db-list").deactivateTb(),$("db-list").activateTb(),$("tab-items").activate(),debug("db",state.database),debug("tb",state.table)},triggers.tb.closeTab=(e,t)=>{$("db-list").deactivateTb(),$("tab-items").close(e,t)},triggers.tb.items=e=>{$("db-list").tablesPopulate(e),$("db-list").hideElement("tb-loading",e)},triggers.tb.data=()=>{$("main-x").deactivatePanes(),$("main-x").addPane()};class ActionbarRefresh extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML=`
      <div data-action>
        <img-svg src="material-icons/refresh.svg" classes="animate-spin w-5 h-5"></img-svg>
        <div>Refresh</div>
      </div>
    `}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}}customElements.define("actionbar-refresh",ActionbarRefresh);class ButtonItem extends HTMLElement{constructor(){super()}connectedCallback(){var e=this.getAttribute("href"),t=this.getAttribute("title");this.removeAttribute("title");let s="";s=e?this.linkHtml(t,e):this.buttonHtml(t,e),this.innerHTML=s}getClasses(){let e="";switch(this.getAttribute("style")){case"default":e=this.classesStyleDefault();break;case"action":e=this.classesStyleAction();break;case"ghost":e=this.classesStyleGhost()}return this.classesBase().concat(e)}linkHtml(e,t){return`<a href="${t}" class="${this.getClasses().join(" ")}">${e}</a>`}buttonHtml(e){return`<button class="focus:outline-none cursor-default ${this.getClasses().join(" ")}">${e}</button>`}classesBase(){return["inline-flex","items-center","gap-2","px-4","py-1.5","font-bold","rounded","fill-current"]}classesStyleDefault(){return["text-white","border-2","bg-blueGray-700","border-black","hover:bg-blueGray-800"]}classesStyleAction(){return["text-white","bg-gradient-to-br","from-navy-500","via-navy-600","to-navy-600","hover:from-navy-600","border","border-navy-600"]}classesStyleGhost(){return["border-2","border-gray-200","hover:border-gray-400"]}}customElements.define("button-item",ButtonItem);class CheckboxItem extends HTMLElement{constructor(){super()}connectedCallback(){var e=this.getAttribute("name"),t=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`
      <label class="flex select-none items-center gap-2">
        <input type="checkbox" class="form-checkbox w-4 h-4 rounded focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${e}" ${s} />
        ${t||""}
      </label>
    `}}customElements.define("checkbox-item",CheckboxItem);class ImgSvg extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes","src"]}attributeChangedCallback(e,t,s){t!==s&&"src"==e&&""!=s&&fetch(`assets/icons/${s}`).then(e=>e.text()).then(e=>{this.innerHTML=e;const t=this.querySelector("svg");t.setAttribute("class",this.getAttribute("classes")),t.classList.add("fill-current")}).catch(console.error.bind(console))}}customElements.define("img-svg",ImgSvg);class MainX extends HTMLElement{constructor(){super()}connectedCallback(){}deactivatePanes(){$$("pane-main").forEach(e=>{e.deactivate()})}addPane(){$("main-x").insertAdjacentHTML("beforeend",this.templatePane())}templatePane(){return`
      <pane-main database="${state.database}" db="${state.database}" table="${state.table}" tb="${state.table}"></pane-main>
    `}}customElements.define("main-x",MainX);class MessageItem extends HTMLElement{constructor(){super()}connectedCallback(){var e=this.getAttribute("state"),t=this.innerHTML;let s="";switch(e){case"success":s="bg-green-600";break;case"error":s="bg-red-700"}this.classList.add("flex",s,"text-white","text-opacity-90"),this.innerHTML=`
      <div class="flex-1 p-6">${t}</div>
      <div class="p-2">
        <button class="hover:bg-black hover:bg-opacity-10 p-2 focus:outline-none cursor-default">
          <img-svg src="remixicon/close.svg"></img-svg>
        </button>
      </div>
    `}}customElements.define("message-item",MessageItem);class ModalBox extends HTMLElement{constructor(){super()}connectedCallback(){this.deactivate(),this.innerHTML=`
      <div
        data-backdrop
        class="fixed inset-0 z-[500000] flex items-center justify-center bg-black bg-opacity-50"
      >
        <div class="flex items-start w-full max-w-lg bg-white shadow-md">
          <div class="p-8 flex-1" data-modal-content>
            <modal-info></modal-info>
          </div>
          <button class="p-2 m-2 focus:outline-none hover:bg-gray-100 rounded">
            <img-svg src="remixicon/close.svg"></img-svg>
          </button>
        </div>
      </div>
    `,this.onClose()}onClose(){this.querySelector("button").addEventListener("click",e=>{this.deactivate()}),this.querySelector("[data-backdrop]").addEventListener("click",e=>{e.target==e.currentTarget&&this.deactivate()})}activate(){this.hidden=!1}deactivate(){this.hidden=!0}}customElements.define("modal-box",ModalBox);class PaneMain extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}set db(e){this.dbValue=e}get db(){return this.dbValue}set tb(e){this.tbValue=e}get tb(){return this.tbValue}connectedCallback(){this.db=this.getAttribute("db"),this.tb=this.getAttribute("tb"),this.data=get.tb.items(this.db,this.tb),this.classList.add("flex","flex-col","overflow-auto","flex-1");const e=this.gridCols();var t=`auto ${e.widths.join("px ")}px`;this.innerHTML=`
      <actions-x></actions-x>
      <div class="flex-1 flex overflow-auto">
        <div class="overflow-x-auto flex-1 my-4 border border-gray-200 rounded bg-white">
          <div class="flex-1 text-13" style="width: ${e.sum}px;">
            <div data-table class="grid gap-y-px bg-white" style="grid-template-columns: ${t};">
              <table-headings class="z-40 contents">
                <table-heading-check
                  class="sticky top-0 z-[600] flex bg-gray-100 heading-bkg left-0">
                  <label class="tp relative heading-bkg flex items-center bg-gray-100">
                    <input type="checkbox" class="form-checkbox checkstyle-white" name="test" />
                  </label>
                </table-heading-check>
                ${this.data.cols_order.map(e=>{var t=this.data.cols[e];return`
                      <table-heading
                        class="tp heading-bkg font-bold flex gap-2 items-center text-sm sticky top-0 z-[500] bg-gray-100"
                      >
                        ${this.keyIcon(e)}
                        <div class="flex flex-col gap-1">
                          <div>
                            <div class="text-opacity-60 text-black inline-block py-0.5 text-xs font-normal rounded">${t.meta.Type}</div>
                          </div>
                          ${e}
                        </div>
                      </table-heading>
                    `}).join("")}
              </table-headings>
              <table-cells class="contents">
                <table-row-ghost hidden>
                  <template data-first>
                    <table-row class="contents row-new">
                      <row-select></row-select>
                      ${this.templateTableCells()}
                    </table-row>
                  </template>
                </table-row-ghost>
                ${this.data.rows.map((t,s)=>`
                    <table-row class="contents">
                      <row-select class="flex sticky z-50 left-0 heading-bkg">
                        <label class="tp relative">
                          <input type="checkbox" class="checkstyle form-checkbox" name="test" />
                          <div class="absolute block inset-0 shadow-y"></div>
                        </label>
                      </row-select>
                      ${this.data.cols_order.map(e=>`
                            <table-cell
                              class="relative"
                              col="${e}"
                              row="${t[this.data.meta.id]}"
                              index="${s}"
                            ></table-cell>
                          `).join("")}
                    </table-row>`).join("")}
              </table-cells>
            </div>
          </div>
        </div>
      </div>
      <pagination-x></pagination-x>
    `,this.setFirstCellActive(),this.onChangeCheckAll(),this.onChangeCheckOne()}keyIcon(e){return e.config&&e.config.id?'<img-svg src="remixicon/key-2-line.svg" classes="w-5 h-5"></img-svg>':""}onChangeCheckAll(){$("table-heading-check input",this).on("change",e=>{const t=e.currentTarget.checked;$$("row-select input",this).forEach(()=>{this.checkToggleAll(t)})})}onChangeCheckOne(){$$("row-select input",this).forEach(e=>{e.on("change",e=>{const t=e.currentTarget;e=t.checked;t.closest("table-row").classList.toggle("row-selected",e)})})}setFirstCellActive(){$("cell-ring",this).setAttribute("state","active")}checkToggleAll(t){$$("table-row",this).forEach(e=>{e.classList.toggle("row-selected",t)}),$$("row-select input",this).forEach(e=>{e.checked=t})}addRow(){var e=`${this.db} ${this.tb}`,t=$("[data-first]",this).innerHTML;const s=$('cell-ring[state="active"]',this).closest("table-row");$('cell-ring[state="active"]',this).closest("table-row").insertAdjacentHTML("afterend",t);const a=new Date;t=a.getTime();s.nextElementSibling.dataset.index=t,temp.insert[e].data[t]=temp.insert[e].defaults}deactivateCells(){this.deactivateCellEdit(),this.deactivateCellRing()}deactivateCellRing(){const e=$('cell-ring[state="active"], cell-ring[state="edit"]',this);e&&e.setAttribute("state","default")}deactivateCellEdit(){$$("cell-edit-dropdown, cell-edit-inline",this).forEach(e=>{e.innerHTML="",e.hidden=!0}),$$("cell-preview",this).forEach(e=>{e.hidden=!1})}gridCols(){const a=get.tb.items(this.db,this.tb);let i=0,l=[];return a.cols_order.forEach(e=>{let t=null;const s=a.cols[e];t=s.config&&s.config.hasOwnProperty("width")?s.config.width:300,l.push(t),i+=t}),{sum:i,widths:l}}templateTableCells(){let a="";return temp.insert[this.tb]={defaults:{},data:[]},this.data.cols_order.forEach(e=>{var t=this.isNullable(e),s=this.parseDefault(e);this.data.meta.id!==e&&(temp.insert[this.tb].defaults[e]="true"==t?"":s),a+=`
        <table-cell class="relative" col="${e}">
          <cell-ring></cell-ring>
          <cell-edit-dropdown></cell-edit-dropdown>
          <cell-preview>
            <preview-null class="text-opacity-50 text-gray-800 italic">NULL</preview-null>
            <preview-value>${row[e]}</preview-value>
          </cell-preview>
        </table-cell>
      `}),a}parseDefault(e){e=this.data.cols[e].meta.Default,e=this.trimNull(e);return e=this.trimQuotes(e)}trimNull(e){return null!==e?e:""}trimQuotes(e){return e.startsWith("'")&&e.endsWith("'")?e.slice(1,-1):e}isNullable(e){return"YES"==this.data.cols[e].meta.Null?"true":"false"}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.hidden=!1}thisDeactivate(){this.hidden=!0}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("pane-main",PaneMain);class RadioItem extends HTMLElement{constructor(){super()}connectedCallback(){var e=this.getAttribute("name"),t=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`
      <label class="flex select-none items-center gap-2">
        <input type="radio" class="w-4 h-4 focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${e}" ${s} />
        ${t}
      </label>
    `}}customElements.define("radio-item",RadioItem);class ColumnsItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["checked"]}connectedCallback(){var e=this.getAttribute("name"),t=this.getAttribute("checked");this.classList.add("flex"),this.innerHTML=this.template(e,t),this.onClick()}template(e,t){return`
      <label class="btn btn-borderless">
        <input type="checkbox" name="${e}" class="checkbox form-checkbox" ${t?"checked":""}>
        ${e}
      </label>
    `}attributeChangedCallback(e,t,s){t!==s&&"checked"==e&&this.onChange()}onClick(){$("input",this).addEventListener("change",e=>{e.currentTarget.checked?this.activate():this.deactivate()})}onChange(){}activate(){this.setAttribute("checked","true")}deactivate(){this.removeAttribute("checked")}}customElements.define("columns-item",ColumnsItem);class ColumnsX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-2","flex","flex-col","text-sm","p-4"),this.hidden=!0,this.innerHTML=this.template("Columns")}checkboxes(){var e=this.closest("pane-main").getAttribute("database"),t=this.closest("pane-main").getAttribute("table"),t=get.tb.items(e,t);const s=t.cols_all,a=t.cols_order;let i="";return s.forEach(e=>{var t=a.includes(e)?'checked="true"':"";i+=`<columns-item name="${e}" ${t}></columns-item>`}),i}template(e){return`
      <div class="font-bold">${e}</div>
      <div class="flex gap-x-4 gap-y-1 flex-wrap">
        ${this.checkboxes()}
      </div>
    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.remove("hidden")}thisDeactivate(){this.classList.add("hidden")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("columns-x",ColumnsX);class ActionsAdd extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-default"),this.innerHTML=`
      <img-svg src="remixicon/add-circle-line.svg" classes="w-5 h-5"></img-svg>
      <div>Add</div>
    `,this.onClick()}attributeChangedCallback(e,t,s){}onClick(){this.addEventListener("click",()=>{const e=$('cell-ring[state="active"]',this.closest("pane-main"));e&&e.closest("pane-main").addRow()})}}customElements.define("actions-add",ActionsAdd);class ActionsBtn extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){var e=this.getAttribute("label"),t=this.getAttribute("icon");this.classList.add("btn"),this.classList.add("btn-default"),this.innerHTML=`
      <img-svg src="${t}" classes="w-5 h-5"></img-svg>
      <div>${e}</div>
    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.replace("btn-default","btn-default-active")}thisDeactivate(){this.classList.replace("btn-default-active","btn-default")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("actions-btn",ActionsBtn);class ActionsPanes extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("block","bg-white","border","rounded","border-gray-200"),this.hidden=!0,this.innerHTML=`
      <panes-x></panes-x>
      <columns-x></columns-x>
      <filter-x></filter-x>
      <order-x></order-x>
    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.hidden=!1}thisDeactivate(){this.hidden=!0}activate(e){this.setAttribute("active","true"),this.querySelector(e).hidden=!1}deactivate(){[...this.children].forEach(e=>{e.hidden=!0}),this.removeAttribute("active")}}customElements.define("actions-panes",ActionsPanes);class ActionsTab extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){var e=this.getAttribute("label"),t=this.getAttribute("icon");this.classList.add("btn","btn-default"),this.innerHTML=`
      <img-svg src="${t}" classes="w-5 h-5"></img-svg>
      <div>${e}</div>
      <img-svg src="remixicon/arrow-down-s.svg" classes="w-5 h-5 fill-current opacity-30"></img-svg>
    `,this.onClick()}onClick(){this.addEventListener("click",()=>{var e="true"==this.getAttribute("active"),t=this.getAttribute("name");const s=this.closest("pane-main").querySelector("actions-panes");this.closest("pane-main").querySelector("actions-tabs").deactivate(),s.deactivate(),e||(this.activate(),s.activate(t))})}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.replace("btn-default","btn-default-active")}thisDeactivate(){this.classList.replace("btn-default-active","btn-default")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("actions-tab",ActionsTab);class ActionsTabs extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","gap-4","pt-4","bg-gray-50","justify-between","gap-1"),this.innerHTML=`
      <div class="flex gap-1">
        <actions-tab name="panes-x" label="Panes" icon="remixicon/layout-5-line.svg"></actions-tab>
        <actions-tab name="columns-x" label="Columns" icon="remixicon/layout-column-line.svg"></actions-tab>
        <actions-tab name="filter-x" label="Filter" icon="remixicon/filter-3-line.svg"></actions-tab>
        <actions-tab name="order-x" label="Order" icon="remixicon/arrow-up-down.svg"></actions-tab>
      </div>
      <div class="flex gap-1">
      <error-x></error-x>
        <actions-btn name="refresh" label="Refresh" icon="material-icons/refresh.svg"></actions-btn>
        <actions-add></actions-add>
        <execute-x></execute-x>
        <revert-x></revert-x>
        
      </div>
    `}deactivate(){$$("actions-tab",this).forEach(e=>{e.deactivate()})}}customElements.define("actions-tabs",ActionsTabs);class ActionsX extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col","gap-4"),this.innerHTML=`      
      <actions-tabs></actions-tabs>
      <actions-panes></actions-panes>
      `}}customElements.define("actions-x",ActionsX);class PaneClose extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
      <div class="p-2">
        <button class="focus:outline-none hover:bg-gray-100 p-2 rounded">
          <img-svg src="remixicon/close.svg"></img-svg>
        </button>
      </div>`,this.onClick()}onClick(){$("button",this).addEventListener("click",()=>{$("actions-panes > *:not([hidden])",this).hidden=!0,$("actions-panes",this).removeAttribute("active"),$('actions-tab[active="true"]',this).deactivate()})}}customElements.define("pane-close",PaneClose);class FilterItem extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("contents"),this.innerHTML=`
      <select class="form-select actionbar-select">
        <option>hello</option>
        <option>hello2</option>
      </select>
      <select class="form-select actionbar-select">
        ${this.matchesOptions()}
      </select>
      <input type="text" class="form-input actionbar-select" />
      <filter-delete class="btn btn-default">
        <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>
      </filter-delete>
    `,this.onRemove()}onRemove(){this.querySelector("filter-delete").addEventListener("click",e=>{e.currentTarget.closest("filter-item").remove()})}matchesOptions(){let t=[];return[{name:"contains",label:"Contains"},{name:"not_contains",label:"Not contains"},{name:"starts_with",label:"Starts with"},{name:"ends_with",label:"Ends with"},{name:"equals",label:"Equals"},{name:"not_equals",label:"Not equals"},{name:"less_than",label:"Less than"},{name:"larger_than",label:"Larger than"}].forEach(e=>{t.push(`<option value="${e.name}">${e.label}</option>`)}),t.join(" ")}}customElements.define("filter-item",FilterItem);class FilterX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","flex-col","p-4","text-sm"),this.hidden=!0,this.innerHTML=this.template("Filter"),this.onAdd()}template(e){return`      
      <div class="grid grid-cols-[minmax(200px,max-content),minmax(200px,max-content),1fr,auto] gap-2 flex-col">
        <div class="contents">
          ${this.heading("Column")}
          ${this.heading("Match")}
          ${this.heading("Value")}
          ${this.heading("")}
        </div>
        <filter-items class="contents"></filter-items>
      </div>
      <div class="flex gap-2 justify-between">
        <filter-add class="btn btn-default">
          <img-svg src="remixicon/add.svg" classes="w-5 h-5"></img-svg>
          <div>Add new</div>
        </filter-add>
        <button class="btn btn-primary">
          <img-svg src="remixicon/filter-3-line.svg" classes="w-5 h-5"></img-svg>
          <div>Filter rows</div>
        </button>
      </div>
    `}onAdd(){$("filter-add").addEventListener("click",()=>{this.appendItem()})}appendItem(){$("filter-items").insertAdjacentHTML("beforeend","<filter-item></filter-item>")}heading(e){return`<div class="font-bold text-sm">${e}</div>`}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.hidden=!1}thisDeactivate(){this.hidden=!0}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("filter-x",FilterX);class OrderItem extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("contents"),this.innerHTML=`
      <select class="form-select actionbar-select">
        <option>hello</option>
        <option>hello2</option>
      </select>
      <select class="form-select actionbar-select">
        ${this.matchesOptions()}
      </select>
      <order-delete class="btn btn-default">
        <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>
      </order-delete>
    `,this.onRemove()}onRemove(){this.querySelector("order-delete").addEventListener("click",e=>{e.currentTarget.closest("order-item").remove()})}matchesOptions(){let t=[];return[{name:"ASC",label:"Ascending"},{name:"DESC",label:"Descending"}].forEach(e=>{t.push(`<option value="${e.name}">${e.label}</option>`)}),t.join(" ")}}customElements.define("order-item",OrderItem);class OrderX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","flex-col","p-4","text-sm"),this.hidden=!0,this.innerHTML=this.template(),this.onAdd()}template(){return`
      <div class="grid grid-cols-[minmax(200px,max-content),1fr,auto] gap-2 flex-col">
        <div class="contents">
          ${this.heading("Order by")}
          ${this.heading("Order")}
          ${this.heading("")}
        </div>
        <order-items class="contents"></order-items>
      </div>
      <div class="flex gap-2 justify-between">
        <order-add class="btn btn-default">
          <img-svg src="remixicon/add.svg" classes="w-5 h-5"></img-svg>
          <div>Add new</div>
        </order-add>
        <button class="btn btn-primary">
          <img-svg src="remixicon/arrow-up-down.svg" classes="w-5 h-5"></img-svg>
          <div>Order rows</div>
        </button>
      </div>
    `}onAdd(){$("order-add").addEventListener("click",()=>{this.appendItem()})}appendItem(){$("order-items").insertAdjacentHTML("beforeend","<order-item></order-item>")}heading(e){return`<div class="font-bold text-sm">${e}</div>`}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.hidden=!1}thisDeactivate(){this.hidden=!0}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("order-x",OrderX);class PanesItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["checked"]}connectedCallback(){var e=this.getAttribute("name"),t=this.getAttribute("label"),s=this.getAttribute("checked");this.classList.add("flex"),this.innerHTML=this.template(e,t,s),this.onClick()}template(e,t,s){return`
      <label class="btn btn-borderless">
        <input type="checkbox" name="${e}" class="checkbox form-checkbox" ${s?"checked":""}>
        ${t}
      </label>
    `}attributeChangedCallback(e,t,s){t!==s&&"checked"==e&&this.onChange(s)}onClick(){this.querySelector("input").addEventListener("change",e=>{e.currentTarget.checked?this.activate():this.deactivate()})}onChange(t){const s=this.getAttribute("name");$$(s).forEach(e=>{e.hidden=!t,$$(`panes-item[name="${s}"]`).forEach(e=>{t?e.setAttribute("checked","true"):e.removeAttribute("checked"),e.querySelector("input").checked=t})})}activate(){this.setAttribute("checked","true")}deactivate(){this.removeAttribute("checked")}}customElements.define("panes-item",PanesItem);class PanesX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-2","flex","flex-col","p-4","text-sm"),this.hidden=!0,this.innerHTML=this.template()}checkboxes(){return`
      <panes-item name="topbar-wrap" label="Top" checked="true"></panes-item>
      <panes-item name="sidebar-wrap" label="Sidebar" checked="true"></panes-item>
      <panes-item name="pagination-x" label="Footer" checked="true"></panes-item>
    `}template(){return`
      <div class="font-bold">Panes</div>
      <div class="flex gap-4">
        ${this.checkboxes()}
      </div>
    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.remove("hidden")}thisDeactivate(){this.classList.add("hidden")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("panes-x",PanesX);class DeleteX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-default"),this.innerHTML=`
      <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>
      Delete checked
    `,this.onClick()}onClick(){this.addEventListener("click",()=>{$$(".row-new[active]").forEach(e=>{e.remove()}),this.delete()})}async delete(){try{return(await axios.post("http://localhost/tools/squares/server/php/queries/delete.php?database=asda&table=asda",{ids:[1,2,3]})).data}catch(e){console.error(e)}}}customElements.define("delete-x",DeleteX);class ErrorX extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("btn","btn-error"),this.innerHTML=`
      <img-svg src="remixicon/error-warning-line.svg" classes="w-5 h-5"></img-svg>
      Error in selected cell
    `,this.onClick()}onClick(){this.addEventListener("click",()=>{console.log(cellData()),$("[data-modal-content]").innerHTML="<modal-error></modal-error>",$("modal-error [data-error-message]").innerText=cellData().updates.message,$("modal-box").activate()})}}customElements.define("error-x",ErrorX);class ExecuteX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-primary"),this.innerHTML=`
      <img-svg src="remixicon/flashlight-fill.svg" classes="w-5 h-5"></img-svg>
      Commit
    `,this.onClick()}onClick(){this.addEventListener("click",()=>{const l=this.closest("pane-main");$$('table-cell[state="changed"]',l).forEach(e=>{e.setAttribute("state","saving")}),this.run().then(e=>{console.log(e),e.forEach(e=>{const t=$(`table-cell[row="${e.row}"][col="${e.col}"]`,l);var s=t.getAttribute("index"),a=get.tb.items(l.db,l.tb);void 0!==a?.cols?.[e.col]?.config?.field&&a?.cols?.[e.col];const i=state?.databases?.[state.database]?.table_items?.[state.table];i.rows[s][e.col]=e.content;a=e.success&&e.match?"saved":"error";t.setAttribute("state",a),e.success&&e.match?(console.log("SUCCESS"),delete i.updates[`${s}:${e.col}`]):(i.updates[`${s}:${e.col}`].success=e.success,i.updates[`${s}:${e.col}`].match=e.match,i.updates[`${s}:${e.col}`].message=e.message)}),debug("response",JSON.stringify(e,null,4),"textarea")})})}async run(){var e=this.closest("pane-main"),t=e.db,e=e.tb,e=get.tb.items(t,e);try{return(await axios.post("http://localhost/tools/squares/server/php/queries/insert.php?database=test&table=a_table_with_a_really_long_name",{updates:e?.updates})).data}catch(e){console.error(e)}}}customElements.define("execute-x",ExecuteX);class PaginationX extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
    <div class="flex justify-between pb-4 bg-gray-50">
      <row-actions></row-actions>
      <div class="flex gap-4">
        ${this.buttonTemplate("prev","remixicon/arrow-left-s-line.svg")}
        <records-x offset="101" rows="100" total="120234233"></records-x>
        ${this.buttonTemplate("next","remixicon/arrow-right-s-line.svg")}
      </div>
    </div>
    `}buttonTemplate(e,t){return`
      <records-${e} class="py-1.5 px-2 select-none flex gap-1 items-center hover:bg-grayExtra rounded">
        <img-svg src="${t}" classes="w-5 h-5">
      </records-${e}>`}}customElements.define("pagination-x",PaginationX);class RecordsX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["limit","rows","total"]}connectedCallback(){this.classList.add("text-13","items-center","flex"),this.update()}attributeChangedCallback(e,t,s){t!==s&&this.update()}update(){var e=this.getAttribute("offset"),t=this.getAttribute("rows"),s=this.getAttribute("total");this.innerHTML=this.template(e,t,s)}template(e,t,s){return`${e}-${parseInt(e)+parseInt(t)} of ${parseInt(s).toLocaleString("en-US")}`}}customElements.define("records-x",RecordsX);class RevertX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-danger"),this.innerHTML=`
      <img-svg src="material-icons/undo_black_24dp.svg" classes="w-5 h-5"></img-svg>
      Cancel
    `}onClick(){this.addEventListener("click",()=>{this.run()})}async run(){try{return(await axios.post("http://localhost/tools/squares/server/php/queries/delete.php?database=asda&table=asda",{ids:[1,2,3]})).data}catch(e){console.error(e)}}}customElements.define("revert-x",RevertX);class RowActions extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("invisible","flex","gap-1"),this.innerHTML=`
      <delete-x></delete-x>
      <duplicate-x class="btn btn-default">
        <img-svg src="remixicon/file-copy-2-line.svg" classes="w-5 h-5"></img-svg>
        Duplicate checked
      </duplicate-x>
    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}toggle(){$("row-select input:checked",this.closest("pane-main"))?this.activate():this.deactivate()}thisActivate(){this.classList.remove("invisible")}thisDeactivate(){this.classList.add("invisible")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("row-actions",RowActions);class DbList extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col"),actions.databases.load()}databasesPopulate(){let t="";state.databases_order.forEach(e=>{t+=`
      <db-group db="${e}">
        <db-item class="nav-row">
          <img-svg
            src="remixicon/database-2-fill.svg"
            classes="w-4 h-4 text-yellow-500">
          </img-svg>
          <div class="flex-1 truncate font-bold text-sm">
            ${e}
          </div>
          <img-svg
            arrow
            src="remixicon/arrow-down-s.svg"
            class="transform"
            classes="w-4 h-4 text-gray-800">
          </img-svg>
        </db-item>
        <tb-section hidden>
          <tb-refresh class="nav-row">
            <img-svg
              src="material-icons/refresh.svg"
              classes="w-4 h-4 text-gray-400">
            </img-svg>
            <div class="flex-1 truncate text-13">Refresh</div>
          </tb-refresh>
          <tb-loading class="nav-row">
            <img-svg
              src="material-icons/refresh.svg"
              classes="w-4 h-4 text-gray-400 animate-spin">
            </img-svg>
            <div class="flex-1 truncate text-13">Loading...</div>
          </tb-loading>
          <tb-group></tb-group>
        </tb-section>
      </db-group>`}),this.innerHTML+=t,this.onClickRefresh(),this.onClickDatabase()}tablesPopulate(e){let t="";state.databases[e].table_order.forEach(e=>{t+=`
        <tb-item tb="${e}" title="${e}" class="nav-row">
          <img-svg src="boxicons/bx-table.svg" classes="w-4 h-4 text-navy-400"></img-svg>
          <div class="flex-1 truncate text-13">${e}</div>
        </tb-item>
      `}),this.dom("tb-group",e).innerHTML=t,this.onClickTable(e)}onClickRefresh(){$$("tb-refresh").forEach(e=>{e.on("click",e=>{e=e.currentTarget.closest("db-group").getAttribute("db");actions.tables.load(e)})})}onClickDatabase(){$$("db-item").forEach(e=>{e.on("click",e=>{e=e.currentTarget.closest("db-group").getAttribute("db");actions.database.toggle(e)})})}onClickTable(e){$$("tb-item",this.dom("tb-group",e)).forEach(e=>{e.on("click",e=>{const t=e.currentTarget;var s=t.getAttribute("tb"),e=t.closest("db-group").getAttribute("db");actions.table.load(e,s)})})}arrowUp(e){this.dom("[arrow]",e).classList.add("rotate-180")}arrowDown(e){this.dom("[arrow]",e).classList.remove("rotate-180")}showElement(e,t){this.dom(e,t).hidden=!1}hideElement(e,t){this.dom(e,t).hidden=!0}groupEmpty(e){return""==this.dom("tb-group",e).innerHTML}activateTb(){this.tbItem().setAttribute("active","true")}deactivateTb(){$$("tb-item").forEach(e=>{e.removeAttribute("active")})}dom=(e,t)=>$(e,this.dbGroup(t));dbGroup=e=>$(`db-group[db="${e}"]`);tbItem=()=>$(`tb-item[tb="${state.table}"]`,this.dbGroup(state.database))}customElements.define("db-list",DbList);class SidebarFilter extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
      <label class="flex flex-col gap-2">
        <div class="uppercase font-bold text-sm">Filter tables</div>
        <input spellcheck="false" placeholder="Show matching tables..." type="text" class="form-input bg-white border-gray-200 text-sm rounded focus:ring-0 focus:border-gray-400">
      </label>
    `,this.onChange()}onChange(){this.querySelector("input").addEventListener("input",()=>{this.filter()})}filter(){const t=$("sidebar-filter input").value;$$("sidebar-table").forEach(e=>{e.getValue().includes(t)?e.show():e.hide()})}}customElements.define("sidebar-filter",SidebarFilter);class SidebarX extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col","pb-4","overflow-auto","resize-x","bg-gray-50","w-80","gap-4","pl-4"),this.innerHTML=`
      <h2 class="pt-4 text-sm text-gray-400 uppercase">Databases and tables</h2>
      <sidebar-filter></sidebar-filter>
      <db-list></db-list>
    `}}customElements.define("sidebar-x",SidebarX);class IconDatabase2 extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes"]}connectedCallback(){this.innerHTML=`
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          width="24"
          height="24"
        >
          <path fill="none" d="M0 0h24v24H0z" />
          <path
            d="M5 12.5c0 .313.461.858 1.53 1.393C7.914 14.585 9.877 15 12 15c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171C17.35 11.349 14.827 12 12 12s-5.35-.652-7-1.671V12.5zm14 2.829C17.35 16.349 14.827 17 12 17s-5.35-.652-7-1.671V17.5c0 .313.461.858 1.53 1.393C7.914 19.585 9.877 20 12 20c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171zM3 17.5v-10C3 5.015 7.03 3 12 3s9 2.015 9 4.5v10c0 2.485-4.03 4.5-9 4.5s-9-2.015-9-4.5zm9-7.5c2.123 0 4.086-.415 5.47-1.107C18.539 8.358 19 7.813 19 7.5c0-.313-.461-.858-1.53-1.393C16.086 5.415 14.123 5 12 5c-2.123 0-4.086.415-5.47 1.107C5.461 6.642 5 7.187 5 7.5c0 .313.461.858 1.53 1.393C7.914 9.585 9.877 10 12 10z"
          />
        </svg>
      `,this.querySelector("svg").setAttribute("class",this.classes)}attributeChangedCallback(e,t,s){t!==s&&(this.classes=s)}}customElements.define("icon-database-2",IconDatabase2);class ModalInfo extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
      <div class="flex flex-col flex-1 gap-6">
        <div class="flex gap-3 items-center">
          <img-svg src="remixicon/checkbox-multiple-blank.svg" classes="h-12 w-12"></img-svg>
          <img-svg
            src="logo.svg"
            classes="h-10"
          ></img-svg>
        </div>
        we rjiweor jweior jweior jwer iowejrio wejrweiojr weiorj weiorj
        weiorj iowerj weiorj weiorjwe

        <!-- Links -->
        <div class="flex flex-col gap-2">
          <h2 class="text-xl font-bold">Links</h2>
          <ul class="list-disc list-inside">
            <li>
              <a
                href="https://github.com/getsquares/squares"
                target="_blank"
                class="text-blue-600 underline"
                >Github</a
              >
            </li>
            <li>
              <a
                href="https://github.com/getsquares/squares"
                target="_blank"
                class="text-blue-600 underline"
                >Documentation</a
              >
            </li>
          </ul>
        </div>

        <!-- Dependencies -->
        <div class="flex flex-col gap-2">
          <h2 class="text-xl font-bold">Dependencies</h2>
          <ul class="list-disc list-inside">
            <li>
              <a
                href="https://remixicon.com/"
                target="_blank"
                class="text-blue-600 underline"
                >Remixicon</a
              >
            </li>
            <li>
              <a
                href="https://fonts.google.com/icons"
                target="_blank"
                class="text-blue-600 underline"
                >Material Icons</a
              >
            </li>
          </ul>
        </div>

        <!-- Dependencies -->
        <div class="flex flex-col gap-2">
          <h2 class="text-xl font-bold">License</h2>
          <p>
            Free to use with some limitations. You are not allowed to use
            the source code in your own projects.
          </p>
        </div>
        
        <!-- Purchase -->
        <div class="flex flex-col gap-4">
          <div class="flex flex-col gap-2">
            <h2 class="text-xl font-bold">Purchase</h2>
            <p>
              By purchasing to this product, you will support the software
              now and in the future.
            </p>
          </div>
          <div class="flex gap-2">
            <div>
              <button-item title="Purchase" href="#" style="action"></button-item>
            </div>
            <div>
              <button-item title="Cancel" style="ghost"></button-item>
            </div>
          </div>
        </div>
      </div>
    `,this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-info",ModalInfo);class ModalLogout extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
      <div class="flex flex-col flex-1 gap-6">
        <div class="flex flex-col gap-6">
          <div class="flex flex-col gap-2">
            <h2 class="text-xl font-bold">Logout</h2>
            <p>
              You you want to logout?
            </p>
          </div>
          <div class="flex gap-2">
            <div>
              <button-item href="#" title="Logout" style="default"></button-item>
            </div>
            <div>
              <button-item title="Cancel" style="ghost"></button-item>
            </div>
          </div>
        </div>
      </div>
    `,this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-logout",ModalLogout);class ModalError extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
    <div class="flex flex-col flex-1 gap-6">      
      <h2 class="text-xl font-bold">Error</h2>
      <p>
        The selected cell has errors.
      </p>
      <div data-error-message class="border border-red-300 h-[300px] focus:outline-none focus:border-red-300 w-full p-2 bg-red-100 text-red-800">dfsf</div>
    </div>
    `}}customElements.define("modal-error",ModalError);class CellEditDropdown extends HTMLElement{constructor(){super()}connectedCallback(){var{db:e,tb:t,col:s,row:a,index:i}=get.dom.cell.data(this);this.db=e,this.tb=t,this.col=s,this.row=a,this.index=i}populateEdit(){let e="";var t=get.tb.items(this.db,this.tb),s="text";void 0!==t?.cols?.[this.col]?.config?.field&&(s=t?.cols?.[this.col]?.config?.field),this.isNullable()&&(e=`
        <label class="flex gap-2 items-center">
          <input
            type="checkbox"
            class="checkstyle-white form-checkbox"
            ${null===this.value?"checked":""}
          >
          <div class="italic">NULL</div>
        </label>
      `);s=`
      ${e}
      <field-${s}></field-${s}>
    `;this.hidden=!1,this.innerHTML=s,this.isNullable()&&this.onClickNull()}isNullable(){return"YES"==get.col.data(this.db,this.tb,this.col).meta.Null}onClickNull(){$("label:first-child input",this).on("change",e=>{var t=e.currentTarget.checked;set.new.nulled(t,e.currentTarget),$("preview-null",this.parentElement).hidden=!t,$("preview-value",this.parentElement).hidden=t})}}customElements.define("cell-edit-dropdown",CellEditDropdown);class CellEditInline extends HTMLElement{constructor(){super()}connectedCallback(){var{db:e,tb:t,col:s,row:a,index:i}=get.dom.cell.data(this);this.db=e,this.tb=t,this.col=s,this.row=a,this.index=i}populateEdit(){$("cell-preview",this.closest("table-cell")).hidden=!0;let e="";var t=get.tb.items(this.db,this.tb),s="text";void 0!==t?.cols?.[this.col]?.config?.field&&(s=t?.cols?.[this.col]?.config?.field),this.isNullable()&&(e=`
        <label class="flex gap-2 items-center">
          <input
            type="checkbox"
            class="checkstyle-white form-checkbox"
            ${null===this.value?"checked":""}
          >
          <div class="italic pr-3">NULL</div>
        </label>
      `);s=`
      <field-${s}></field-${s}>
      ${e}
    `;this.hidden=!1,this.innerHTML=s,this.isNullable()&&this.onClickNull()}isNullable(){return"YES"==get.col.data(this.db,this.tb,this.col).meta.Null}onClickNull(){$("label:first-of-type input",this).on("change",e=>{var t=e.currentTarget.checked;set.new.nulled(t,e.currentTarget),$("preview-null",this.parentElement).hidden=!t,$("preview-value",this.parentElement).hidden=t})}}customElements.define("cell-edit-inline",CellEditInline);class TableCell extends HTMLElement{constructor(){super()}mode(){return this.mode}connectedCallback(){this.db=this.closest("pane-main").getAttribute("db"),this.tb=this.closest("pane-main").getAttribute("tb"),this.col=this.getAttribute("col"),this.row=this.getAttribute("row"),this.index=this.getAttribute("index"),this.data=get.tb.items(this.db,this.tb),this.value=get.tb.value(this.db,this.tb,this.col,this.index),this.col_data=get.col.data(this.db,this.tb,this.col);const table=get.tb.items(this.db,this.tb);var field_type="text";void 0!==table?.cols?.[this.col]?.config?.field&&(field_type=table?.cols?.[this.col]?.config?.field);const class_name=`Field${field_type.capitalize()}`,field=eval(`new ${class_name}()`);let mode="dropdown";field?.config&&(mode=field.config().mode),this.mode=mode,this.setAttribute("mode",mode),this.innerHTML=`
      <cell-ring></cell-ring>
      <cell-edit-${mode} hidden></cell-edit-${mode}>
      <cell-preview>
        <preview-null class="text-opacity-50 text-gray-800 italic">NULL</preview-null>
        <preview-value></preview-value>
      </cell-preview>
    `,this.xEdges(),this.setPreviewValue(),this.setPreviewNull(),this.onClickRing(),this.onDblclickRing()}setPreviewValue(){$("preview-value",this).innerText=this.value}setPreviewNull(){$("preview-null",this).hidden=null!==this.value,$("preview-value",this).hidden=null===this.value}onClickRing(){$("cell-ring",this).on("click",()=>{this.handleCellActive(this)})}onDblclickRing(){$("cell-ring",this).on("dblclick",e=>{this.handleCellEdit()})}handleStep(e){switch(e){case"ArrowLeft":this.stepLeft();break;case"ArrowRight":this.stepRight();break;case"ArrowUp":this.stepUp();break;case"ArrowDown":this.stepDown()}}stepLeft(){var e=this.previousElementSibling;e&&"TABLE-CELL"===e.tagName&&this.handleCellActive(e)}stepRight(){var e=this.nextElementSibling;e&&"TABLE-CELL"===e.tagName&&this.handleCellActive(e)}stepDown(){var e=cellActiveIndex(this),t=this.parentElement.nextElementSibling;t&&"TABLE-ROW"===t.tagName&&this.handleCellActive($(`table-cell:nth-child(${e})`,t))}stepUp(){var e=cellActiveIndex(this),t=this.parentElement.previousElementSibling;t&&"TABLE-ROW"===t.tagName&&this.handleCellActive($(`table-cell:nth-child(${e})`,t))}handleCellTab(e){e.preventDefault(),this.handleStep(e.shiftKey?"ArrowLeft":"ArrowRight")}handleCellEdit(){in_field?in_field=!1:($("cell-ring",this).setAttribute("state","edit"),$(`cell-edit-${this.mode}`,this).populateEdit())}handleCellActive(e){"active"!=$("cell-ring",e).getAttribute("state")&&(this.closest("pane-main").deactivateCells(),$("cell-ring",e).setAttribute("state","active"),state.row=e.getAttribute("row"),state.col=e.getAttribute("col"),state.index=e.getAttribute("index"),debug("row",state.row),debug("col",state.col),debug("index",state.index),debug("cell",JSON.stringify(cellData(),null,4),"textarea"))}xEdges(){var e=this.previousElementSibling,t=this.nextElementSibling;"ROW-SELECT"==e.tagName?$("cell-ring",this).classList.add("ml-2px"):t||$("cell-ring",this).classList.add("mr-2px")}}customElements.define("table-cell",TableCell);class TabItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}set database(e){this.databaseValue=e}get database(){return this.databaseValue}set table(e){this.tableValue=e}get table(){return this.tableValue}connectedCallback(){this.database=this.getAttribute("database"),this.table=this.getAttribute("table"),this.setAttribute("title",this.database+"/"+this.table),this.innerHTML=`
      ${this.table}
      <img-svg src="remixicon/close.svg" classes="rounded w-5 h-5">
    `,this.onClick(),this.onCloseClick(),this.onMiddleClick()}deactivate(){this.removeAttribute("active")}activate(){this.setAttribute("active","true")}onClick(){this.on("mousedown",e=>{e.currentTarget===e.target&&1!==e.button&&actions.table.activate(this.database,this.table)})}onCloseClick(){$("img-svg",this).on("click",()=>{this.handleClose()})}onMiddleClick(){this.on("mouseup",e=>{1===e.button&&this.handleClose()})}handleClose(){"true"==this.getAttribute("active")?actions.table.closeTab(this.database,this.table):this.remove()}}customElements.define("tab-item",TabItem);class TabItems extends HTMLElement{constructor(){super()}static get observedAttributes(){return["database","table"]}connectedCallback(){this.classList.add("flex","items-center","gap-2","bg-blueGray-700","overflow-auto","w-full","px-2","self-end")}activate(){this.deactivate(),this.tab(state.database,state.table)?this.tab(state.database,state.table).activate():(this.create(state.database,state.table),this.last().activate())}close(e,t){$(`tab-item[database="${e}"][table="${t}"]`).remove()}deactivate(){const e=$$("tab-item");e&&e.forEach(e=>{e.deactivate()})}create(e,t){$("tab-items").insertAdjacentHTML("beforeend",this.templateTab(e,t,"true"))}templateTab(e,t,s){return`
    <tab-item database="${e}" table="${t}" active="${s}"></tab-item>`}last(){return $("tab-item:last-child")}tab(e,t){return $(`tab-item[database="${e}"][table="${t}"]`)}}customElements.define("tab-items",TabItems);class ActionbarInfo extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML=`
      <div data-action>
        <img-svg src="remixicon/info.svg" classes="w-5 h-5">
        <div>Info</div>
      </div>kkk
    `+this.modal()}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}onClick(){}modal(){return`
    <div class="bg-black inset-0">test</div>
    `}}customElements.define("actionbar-info",ActionbarInfo);class TopbarItems extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
      <div class="flex gap-2 text-sm text-white py-2">
        ${this.itemHtml("info","Info","remixicon/question-fill.svg")}
        ${this.itemHtml("logout","Logout","material-icons/logout_black_24dp.svg")}
      </div>
    `,this.onClick()}itemHtml(e,t,s){return`
      <div title="${t}" data-action="${e}" class="flex items-center gap-1 fill-current px-2 py-1.5 select-none hover:bg-black hover:bg-opacity-20 rounded"
      >
      <img-svg src="${s}"></img-svg>
    </div>
    `}onClick(){this.querySelectorAll("[data-action]").forEach(e=>{e.addEventListener("click",e=>{const t=e.currentTarget;e=t.getAttribute("data-action");["info","logout"].includes(e)&&($("[data-modal-content]").innerHTML=`<modal-${e}></modal-${e}>`,$("modal-box").activate())})})}}customElements.define("topbar-items",TopbarItems);class TopbarWrap extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`
    <div
      class="flex items-center justify-between pr-2 text-gray-200 bg-blueGray-700"
    >
      <resize-logo>
        <div class="pl-4 pr-8 flex items-center gap-2 text-2xl text-white uppercase">
          <img-svg
            src="remixicon/checkbox-multiple-blank.svg"
          ></img-svg>
          <img-svg src="logo.svg" classes="h-5"></img-svg>
        </div>
      </resize-logo>
      <topbar-items></topbar-items>
    </div>
    `}}customElements.define("topbar-wrap",TopbarWrap);class FieldNumber extends HTMLElement{constructor(){super()}config(){return{mode:"inline"}}connectedCallback(){var{db:e,tb:t,col:s,row:a,index:i}=get.dom.cell.data(this),i=get.tb.updated(e,t,a,s,i);this.classList.add("w-full"),this.innerHTML=`
      <input value="${i}" type="number" class="w-full form-input leading-normal focus:outline-none focus:ring-0 bg-transparent focus:ring-offset-0 border-0 focus:border-gray-300 border-gray-300 text-13 tp">
    `,this.onKeyup(),this.onEnter(),set.new.buffer(i,this),updatePreview(i,this),$("input",this).focus(),$("input",this).select()}onKeyup(){$("input",this).addEventListener("keyup",e=>{e=parseInt(e.currentTarget.value);set.new.buffer(e,this),updatePreview(e,this)})}onEnter(){$("input",this).addEventListener("keydown",e=>{"Enter"===e.key&&(e.preventDefault(),leaveEdit(e.currentTarget))})}}customElements.define("field-number",FieldNumber),set.field.config("number",{mode:"inline"});class FieldText extends HTMLElement{constructor(){super()}config(){return{mode:"dropdown"}}connectedCallback(){var{db:e,tb:t,col:s,row:a,index:i}=get.dom.cell.data(this),i=get.tb.updated(e,t,a,s,i);this.innerHTML=`
      <input value="${i}" type="text" class="form-input leading-normal focus:outline-none focus:ring-0 focus:ring-offset-0 border focus:border-gray-300 border-gray-300 text-13 tp">
    `,this.onKeyup(),this.onEnter(),set.new.buffer(i,this),updatePreview(i,this),$("input",this).focus(),$("input",this).select()}onKeyup(){$("input",this).addEventListener("keyup",e=>{e=e.currentTarget.value;set.new.buffer(e,this),updatePreview(e,this)})}onEnter(){$("input",this).addEventListener("keydown",e=>{"Enter"===e.key&&(e.preventDefault(),leaveEdit(e.currentTarget))})}}customElements.define("field-text",FieldText),set.field.config("text",{mode:"dropdown"});