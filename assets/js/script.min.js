function tabClassActive(){return["bg-navy-100","text-navy-900","border-navy-300"]}function tabClassInactive(){return["hover:bg-gray-100","bg-gray-50","bg-gradient-to-b","from-white","to-gray-100","border-gray-300"]}function hollowClassActive(){return["bg-navy-100","text-navy-900","border","border-navy-300","rounded"]}function hollowClassInactive(){return["hover:bg-grayExtra","border","border-transparent"]}function eventCellKeydown(){window.addEventListener("keydown",e=>{let t=$('cell-ring[state="active"]');if(t)switch(e.key){case"ArrowLeft":case"ArrowRight":case"ArrowDown":case"ArrowUp":t.handleStep(e.key);break;case"Tab":t.handleCellTab(e);break;case"Enter":t.handleCellEdit()}})}function handleCellClose(){isCellState("edit")&&(dom.current.cell_ring.setAttribute("state","active"),resetEdit())}function leaveEdit(){in_field=!0,fieldClose()}function fieldClose(){const e=$('cell-ring[state="edit"]');if(!e)return;const t=e.closest("table-cell"),s=$("cell-edit",t);e.setAttribute("state","active"),s.removeAttribute("active")}function updatePreview(e,t){$("preview-value",t.closest("table-cell")).innerHTML=e}function updateNull(e){const t=$("preview",e.closest("table-cell"));$("preview-value",e.closest("table-cell")).setAttribute("hidden",""),t.setAttribute("active","true");$("preview-null",e.closest("table-cell")).removeAttribute("hidden")}function setCellFieldState(e,t){t.querySelector("cell-edit").setAttribute("active",e)}function setCellPreviewState(e,t){t.querySelector("cell-preview").setAttribute("active",e)}function cellActiveIndex(e){return[...e.parentElement.children].indexOf(e)+1}function isCellActive(){return dom.current&&"active"==dom.current.cell_ring.getAttribute("state")}function isCellState(e="active"){return dom.current&&dom.current.cell_ring.getAttribute("state")==e}function setCellActiveToEl(e,t="active"){e.setAttribute("state",t)}function syncSidebarLogo(){$("resize-logo").style.width=$("sidebar-wrap").offsetWidth+16+"px"}function error(e){}function success(e){}function spreadDomCell(e){return current={table_cell:e,cell_ring:e.querySelector("cell-ring"),cell_edit:e.querySelector("cell-edit"),cell_preview:e.querySelector("cell-preview")}}function resetStore(){dom.current=null,dom.left=null,dom.right=null,dom.up=null,dom.down=null}function storeDomCell(e){dom.current=spreadDomCell(e),dom.left=spreadDomCell(getDomCellLeft()),dom.right=spreadDomCell(getDomCellRight()),dom.down=spreadDomCell(getDomCellDown()),dom.up=spreadDomCell(getDomCellUp())}class tab{static activateLast(){const e=this.getLast();e&&e.activate()}static add(e,t){tabs.deactivate(),$("tab-items").insertAdjacentHTML("beforeend",tab.html(e,t,"true")),tab.onClick(tab.getLast())}static getItem(e,t){return $(`tab-item[database="${e}"][table="${t}"]`)}static getLast(){return $("tab-item:last-child")}static onClose(e){this.onCloseClick(e),this.onMiddleClick(e)}static onCloseClick(e){$("img-svg",e).on("click",()=>{tab.closeHandler(e)})}static onMiddleClick(e){e.on("mouseup",t=>{1===t.button&&tab.closeHandler(e)})}static html(e,t,s){return`\n    <tab-item database="${e}" table="${t}" active="${s}"></tab-item>`}static deactivate(e){const t=$("img-svg",e);t&&(e.classList.remove(...this.classesActive()),e.classList.add(...this.classesInactive()),t.classList.remove(...this.classesActiveClose()),t.classList.add(...this.classesInactiveClose()))}static activate(e){const t=$("img-svg",e);t&&(e.classList.add(...this.classesActive()),e.classList.remove(...this.classesInactive()),t.classList.add(...this.classesActiveClose()),t.classList.remove(...this.classesInactiveClose()),current.table=e.getAttribute("table"),current.database=e.getAttribute("database"))}static classesActive(){return["bg-gray-50","text-gray-800"]}static classesInactive(){return["bg-blueGray-800","text-blueGray-200","hover:bg-blueGray-800"]}static classesActiveClose(){return["hover:bg-gray-200"]}static classesInactiveClose(){return["hover:bg-blueGray-600"]}static hasActive(){return $('tab-item[active="true"]')}static closeHandler(e){e.remove();const t=$('sidebar-table[active="true"]');t&&(t.removeAttribute("active","true"),this.hasActive()||tab.activateLast())}static onClick(e){e.on("mousedown",t=>{t.currentTarget===t.target&&1===t.which&&(tabs.deactivate(),e.activate())})}}class tabs{static deactivate(){const e=$$("tab-item");e&&e.forEach(e=>{e.deactivate()})}}class ActionsAdd extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-success"),this.innerHTML='\n      <img-svg src="remixicon/add-circle-line.svg" classes="w-5 h-5"></img-svg>\n      <div>Add</div>\n    ',this.onClick()}attributeChangedCallback(e,t,s){}onClick(){this.addEventListener("click",()=>{console.log(current.database);const e=$('cell-ring[state="active"]',this.closest("pane-main"));console.log("dooo2"),e&&(console.log("dooo"),e.closest("table-row").addRow())})}}customElements.define("actions-add",ActionsAdd);class ActionsBtn extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const e=this.getAttribute("label"),t=this.getAttribute("icon");this.classList.add("btn"),this.classList.add("btn-default"),this.innerHTML=`\n      <img-svg src="${t}" classes="w-5 h-5"></img-svg>\n      <div>${e}</div>\n    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.replace("btn-default","btn-default-active")}thisDeactivate(){this.classList.replace("btn-default-active","btn-default")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("actions-btn",ActionsBtn);class ActionsPanes extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("block","bg-white","border","rounded","border-gray-200"),this.setAttribute("hidden",""),this.innerHTML="\n      <panes-x></panes-x>\n      <columns-x></columns-x>\n      <filter-x></filter-x>\n      <order-x></order-x>\n    "}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(e){this.setAttribute("active","true"),this.querySelector(e).removeAttribute("hidden")}deactivate(){[...this.children].forEach(e=>{e.setAttribute("hidden","")}),this.removeAttribute("active")}}customElements.define("actions-panes",ActionsPanes);class ActionsTab extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const e=this.getAttribute("label"),t=this.getAttribute("icon");this.classList.add("btn","btn-default"),this.innerHTML=`\n      <img-svg src="${t}" classes="w-5 h-5"></img-svg>\n      <div>${e}</div>\n      <img-svg src="remixicon/arrow-down-s.svg" classes="w-5 h-5 fill-current opacity-30"></img-svg>\n    `,this.onClick()}onClick(){this.addEventListener("click",()=>{const e="true"==this.getAttribute("active"),t=this.getAttribute("name"),s=this.closest("pane-main").querySelector("actions-panes");console.log(s),this.closest("pane-main").querySelector("actions-tabs").deactivate(),s.deactivate(),e||(this.activate(),s.activate(t))})}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.replace("btn-default","btn-default-active")}thisDeactivate(){this.classList.replace("btn-default-active","btn-default")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("actions-tab",ActionsTab);class ActionsTabs extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","gap-4","pt-4","bg-gray-50","justify-between","gap-1"),this.innerHTML='\n      <div class="flex gap-1">\n        <actions-tab name="panes-x" label="Panes" icon="remixicon/layout-5-line.svg"></actions-tab>\n        <actions-tab name="columns-x" label="Columns" icon="remixicon/layout-column-line.svg"></actions-tab>\n        <actions-tab name="filter-x" label="Filter" icon="remixicon/filter-3-line.svg"></actions-tab>\n        <actions-tab name="order-x" label="Order" icon="remixicon/arrow-up-down.svg"></actions-tab>\n      </div>\n      <div class="flex gap-1">\n        <actions-btn name="refresh" label="Refresh" icon="material-icons/refresh.svg"></actions-btn>\n        <actions-add></actions-add>\n      </div>\n    '}deactivate(){$$("actions-tab",this).forEach(e=>{e.deactivate()})}}customElements.define("actions-tabs",ActionsTabs);class ActionsX extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col","gap-4"),this.innerHTML="      \n      <actions-tabs></actions-tabs>\n      <actions-panes></actions-panes>\n      "}}customElements.define("actions-x",ActionsX);class PaneClose extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="p-2">\n        <button class="focus:outline-none hover:bg-gray-100 p-2 rounded">\n          <img-svg src="remixicon/close.svg"></img-svg>\n        </button>\n      </div>',this.onClick()}onClick(){$("button",this).addEventListener("click",()=>{$("actions-panes > *:not([hidden])",this).setAttribute("hidden",""),$("actions-panes",this).removeAttribute("active"),$('actions-tab[active="true"]',this).deactivate()})}}customElements.define("pane-close",PaneClose);class ColumnsItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["checked"]}connectedCallback(){const e=this.getAttribute("name"),t=this.getAttribute("checked");this.classList.add("flex"),this.innerHTML=this.template(e,t),this.onClick()}template(e,t){return`\n      <label class="btn btn-borderless">\n        <input type="checkbox" name="${e}" class="checkbox form-checkbox" ${t?"checked":""}>\n        ${e}\n      </label>\n    `}attributeChangedCallback(e,t,s){t!==s&&"checked"==e&&this.onChange()}onClick(){$("input",this).addEventListener("change",e=>{e.currentTarget.checked?this.activate():this.deactivate()})}onChange(){console.log("Something has changed")}activate(){this.setAttribute("checked","true")}deactivate(){this.removeAttribute("checked")}}customElements.define("columns-item",ColumnsItem);class ColumnsX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-2","flex","flex-col","text-sm","p-4"),this.setAttribute("hidden",""),this.innerHTML=this.template("Columns")}checkboxes(){const e=this.closest("pane-main").getAttribute("database"),t=this.closest("pane-main").getAttribute("table"),s=data[`${e} ${t}`].cols_all,i=data[`${e} ${t}`].cols_order;let a="";return s.forEach(e=>{const t=i.includes(e);a+=`<columns-item name="${e}" ${t?'checked="true"':""}></columns-item>`}),a}template(e){return`\n      <div class="font-bold">${e}</div>\n      <div class="flex gap-x-4 gap-y-1 flex-wrap">\n        ${this.checkboxes()}\n      </div>\n    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.remove("hidden")}thisDeactivate(){this.classList.add("hidden")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("columns-x",ColumnsX);class FilterItem extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("contents"),this.innerHTML=`\n      <select class="form-select actionbar-select">\n        <option>hello</option>\n        <option>hello2</option>\n      </select>\n      <select class="form-select actionbar-select">\n        ${this.matchesOptions()}\n      </select>\n      <input type="text" class="form-input actionbar-select" />\n      <filter-delete class="btn btn-default">\n        <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>\n      </filter-delete>\n    `,this.onRemove()}onRemove(){this.querySelector("filter-delete").addEventListener("click",e=>{e.currentTarget.closest("filter-item").remove()})}matchesOptions(){let e=[];return[{name:"contains",label:"Contains"},{name:"not_contains",label:"Not contains"},{name:"starts_with",label:"Starts with"},{name:"ends_with",label:"Ends with"},{name:"equals",label:"Equals"},{name:"not_equals",label:"Not equals"},{name:"less_than",label:"Less than"},{name:"larger_than",label:"Larger than"}].forEach(t=>{e.push(`<option value="${t.name}">${t.label}</option>`)}),e.join(" ")}}customElements.define("filter-item",FilterItem);class FilterX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","flex-col","p-4","text-sm"),this.setAttribute("hidden",""),this.innerHTML=this.template("Filter"),this.onAdd()}template(e){return`      \n      <div class="grid grid-cols-[minmax(200px,max-content),minmax(200px,max-content),1fr,auto] gap-2 flex-col">\n        <div class="contents">\n          ${this.heading("Column")}\n          ${this.heading("Match")}\n          ${this.heading("Value")}\n          ${this.heading("")}\n        </div>\n        <filter-items class="contents"></filter-items>\n      </div>\n      <div class="flex gap-2 justify-between">\n        <filter-add class="btn btn-default">\n          <img-svg src="remixicon/add.svg" classes="w-5 h-5"></img-svg>\n          <div>Add new</div>\n        </filter-add>\n        <button class="btn btn-primary">\n          <img-svg src="remixicon/filter-3-line.svg" classes="w-5 h-5"></img-svg>\n          <div>Filter rows</div>\n        </button>\n      </div>\n    `}onAdd(){$("filter-add").addEventListener("click",()=>{this.appendItem()})}appendItem(){$("filter-items").insertAdjacentHTML("beforeend","<filter-item></filter-item>")}heading(e){return`<div class="font-bold text-sm">${e}</div>`}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("filter-x",FilterX);class OrderItem extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("contents"),this.innerHTML=`\n      <select class="form-select actionbar-select">\n        <option>hello</option>\n        <option>hello2</option>\n      </select>\n      <select class="form-select actionbar-select">\n        ${this.matchesOptions()}\n      </select>\n      <order-delete class="btn btn-default">\n        <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>\n      </order-delete>\n    `,this.onRemove()}onRemove(){this.querySelector("order-delete").addEventListener("click",e=>{e.currentTarget.closest("order-item").remove()})}matchesOptions(){let e=[];return[{name:"ASC",label:"Ascending"},{name:"DESC",label:"Descending"}].forEach(t=>{e.push(`<option value="${t.name}">${t.label}</option>`)}),e.join(" ")}}customElements.define("order-item",OrderItem);class OrderX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","flex-col","p-4","text-sm"),this.setAttribute("hidden",""),this.innerHTML=this.template(),this.onAdd()}template(){return`\n      <div class="grid grid-cols-[minmax(200px,max-content),1fr,auto] gap-2 flex-col">\n        <div class="contents">\n          ${this.heading("Order by")}\n          ${this.heading("Order")}\n          ${this.heading("")}\n        </div>\n        <order-items class="contents"></order-items>\n      </div>\n      <div class="flex gap-2 justify-between">\n        <order-add class="btn btn-default">\n          <img-svg src="remixicon/add.svg" classes="w-5 h-5"></img-svg>\n          <div>Add new</div>\n        </order-add>\n        <button class="btn btn-primary">\n          <img-svg src="remixicon/arrow-up-down.svg" classes="w-5 h-5"></img-svg>\n          <div>Order rows</div>\n        </button>\n      </div>\n    `}onAdd(){$("order-add").addEventListener("click",()=>{this.appendItem()})}appendItem(){$("order-items").insertAdjacentHTML("beforeend","<order-item></order-item>")}heading(e){return`<div class="font-bold text-sm">${e}</div>`}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("order-x",OrderX);class PanesItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["checked"]}connectedCallback(){const e=this.getAttribute("name"),t=this.getAttribute("label"),s=this.getAttribute("checked");this.classList.add("flex"),this.innerHTML=this.template(e,t,s),this.onClick()}template(e,t,s){return`\n      <label class="btn btn-borderless">\n        <input type="checkbox" name="${e}" class="checkbox form-checkbox" ${s?"checked":""}>\n        ${t}\n      </label>\n    `}attributeChangedCallback(e,t,s){t!==s&&"checked"==e&&this.onChange(s)}onClick(){this.querySelector("input").addEventListener("change",e=>{e.currentTarget.checked?this.activate():this.deactivate()})}onChange(e){const t=this.getAttribute("name");$$(t).forEach(s=>{e?s.removeAttribute("hidden",""):s.setAttribute("hidden",""),$$(`panes-item[name="${t}"]`).forEach(t=>{e?t.setAttribute("checked","true"):t.removeAttribute("checked"),t.querySelector("input").checked=e})})}activate(){this.setAttribute("checked","true")}deactivate(){this.removeAttribute("checked")}}customElements.define("panes-item",PanesItem);class PanesX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-2","flex","flex-col","p-4","text-sm"),this.setAttribute("hidden",""),this.innerHTML=this.template()}checkboxes(){return'\n      <panes-item name="topbar-wrap" label="Top" checked="true"></panes-item>\n      <panes-item name="sidebar-wrap" label="Sidebar" checked="true"></panes-item>\n      <panes-item name="pagination-x" label="Footer" checked="true"></panes-item>\n    '}template(){return`\n      <div class="font-bold">Panes</div>\n      <div class="flex gap-4">\n        ${this.checkboxes()}\n      </div>\n    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.classList.remove("hidden")}thisDeactivate(){this.classList.add("hidden")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("panes-x",PanesX);class DeleteX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("btn","btn-delete"),this.innerHTML='\n      <img-svg src="remixicon/delete-bin-line.svg" classes="w-5 h-5"></img-svg>\n      Delete\n    ',this.onClick()}onClick(){this.addEventListener("click",()=>{$$(".row-new[active]").forEach(e=>{e.remove()}),this.delete()})}async delete(){const e=[1,2,3];try{const t=await axios.post("http://localhost/tools/squares/server/php/queries/delete.php?database=asda&table=asda",{ids:e});return console.log(t.data),t.data}catch(e){console.error(e)}}}customElements.define("delete-x",DeleteX);class PaginationX extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n    <div class="flex justify-between pb-4 bg-gray-50">\n      <row-actions></row-actions>\n      <div class="flex gap-4">\n        ${this.buttonTemplate("prev","remixicon/arrow-left-s-line.svg")}\n        <records-x offset="101" rows="100" total="120234233"></records-x>\n        ${this.buttonTemplate("next","remixicon/arrow-right-s-line.svg")}\n      </div>\n    </div>\n    `}buttonTemplate(e,t){return`\n      <records-${e} class="py-1.5 px-2 select-none flex gap-1 items-center hover:bg-grayExtra rounded">\n        <img-svg src="${t}" classes="w-5 h-5">\n      </records-${e}>`}}customElements.define("pagination-x",PaginationX);class RecordsX extends HTMLElement{constructor(){super()}static get observedAttributes(){return["limit","rows","total"]}connectedCallback(){this.classList.add("text-13","items-center","flex"),this.update()}attributeChangedCallback(e,t,s){t!==s&&this.update()}update(){const e=this.getAttribute("offset"),t=this.getAttribute("rows"),s=this.getAttribute("total");this.innerHTML=this.template(e,t,s)}template(e,t,s){return`${e}-${parseInt(e)+parseInt(t)} of ${parseInt(s).toLocaleString("en-US")}`}}customElements.define("records-x",RecordsX);class RowActions extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("invisible"),this.innerHTML='\n      <delete-x></delete-x>\n      <clone-x class="btn btn-success">\n        <img-svg src="remixicon/file-copy-2-line.svg" classes="w-5 h-5"></img-svg>\n        Clone</clone-x>\n    '}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}toggle(){$("row-select input:checked",this.closest("pane-main"))?this.activate():this.deactivate()}thisActivate(){this.classList.remove("invisible")}thisDeactivate(){this.classList.add("invisible")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("row-actions",RowActions);class SidebarDatabaseLoading extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","gap-2","py-1","px-2","cursor-default","select-none","fill-current","items-center"),this.innerHTML='\n      <img-svg src="material-icons/refresh.svg" classes="animate-spin w-4 h-4 text-gray-400"></img-svg>\n      <div data-local-table class="flex-1 truncate text-13">Loading...</div>\n    '}}customElements.define("sidebar-database-loading",SidebarDatabaseLoading);class SidebarDatabaseRefresh extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add(...hollowClassInactive(),"flex","gap-2","py-1","px-2","cursor-default","select-none","fill-current","items-center"),this.innerHTML='\n      <img-svg src="material-icons/refresh.svg" classes="w-4 h-4 text-gray-400"></img-svg>\n      <div data-local-table class="flex-1 truncate text-13">Refresh</div>\n    ',this.onClick()}onClick(){this.addEventListener("click",()=>{this.closest("sidebar-database").populate()})}}customElements.define("sidebar-database-refresh",SidebarDatabaseRefresh);class SidebarDatabase extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const e=this.getAttribute("title");this.removeAttribute("title"),this.innerHTML=`\n      <div data-database class="${hollowClassInactive().join(" ")} flex gap-2 px-2 py-1 cursor-default select-none fill-current items-center">\n        <img-svg src="remixicon/database-2-fill.svg" classes="w-4 h-4 text-yellow-500"></img-svg>\n        <div data-local-database class="flex-1 truncate font-bold text-sm">${e}</div>\n        <img-svg data-arrow src="remixicon/arrow-down-s.svg" classes="transform rotate-180 w-4 h-4"></img-svg>\n      </div>\n\n      <div data-tables hidden></div>\n      `,this.onClickDatabase()}attributeChangedCallback(e,t,s){if(t!==s){const t=this.querySelector("[data-arrow] svg");t&&("active"==e&&"true"==s?t.classList.remove("rotate-180"):t.classList.add("rotate-180"))}}onClickDatabase(){this.querySelector("[data-database]").addEventListener("click",e=>{this.isActive()?this.deactivate():this.activate()})}onClickTable(e){e.addEventListener("click",()=>{e.isActive()?e.deactivate():e.activate()})}deactivateAllTables(){$$("sidebar-table").forEach(e=>{e.deactivate()})}activate(){const e=this.querySelector("[data-tables]");this.setAttribute("active","true"),this.querySelector("[data-tables]").removeAttribute("hidden"),""==e.innerHTML&&this.populate()}populate(){const e=this.querySelector("[data-tables]");e.innerHTML="<sidebar-database-loading></sidebar-database-loading>",axios.get("http://localhost/tools/squares/server/php/queries/tables.php?database="+this.getValue()).then(t=>{if(200!==t.status)return;let s="\n        <sidebar-database-refresh></sidebar-database-refresh>\n        ";t.data.forEach(e=>{s+=this.template(e)}),e.innerHTML=s,$("sidebar-filter").filter(e),this.populateEvents(e)})}populateEvents(e){e.querySelectorAll("sidebar-table").forEach(e=>{e.addEventListener("click",e=>{const t=e.currentTarget;this.deactivateAllTables(),t.activate()})})}template(e){return`<sidebar-table title="${e}"></sidebar-table>`}deactivate(){this.removeAttribute("active"),this.querySelector("[data-tables]").setAttribute("hidden","")}isActive(){return"true"==this.getAttribute("active")}getValue(){return this.querySelector("[data-local-database]").innerHTML}}customElements.define("sidebar-database",SidebarDatabase);class SidebarDatabases extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col"),this.populate()}template(e){return`<sidebar-database title="${e}"></sidebar-database>`}populate(){axios.get("http://localhost/tools/squares/server/php/queries/databases.php").then(e=>{if(200!==e.status)return;let t="";e.data.forEach(e=>{t+=this.template(e)}),this.innerHTML+=t})}}customElements.define("sidebar-databases",SidebarDatabases);class SidebarFilter extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <label class="flex flex-col gap-2">\n        <div class="uppercase font-bold text-sm">Filter tables</div>\n        <input spellcheck="false" placeholder="Show matching tables..." type="text" class="form-input bg-white border-gray-200 text-sm rounded focus:ring-0 focus:border-gray-400">\n      </label>\n    ',this.onChange()}onChange(){this.querySelector("input").addEventListener("input",()=>{this.filter()})}filter(){const e=$("sidebar-filter input").value;$$("sidebar-table").forEach(t=>{t.getValue().includes(e)?t.show():t.hide()})}}customElements.define("sidebar-filter",SidebarFilter);class SidebarTable extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const e=this.getAttribute("title");this.removeAttribute("title"),this.innerHTML=`\n      <img-svg src="boxicons/bx-table.svg" classes="w-4 h-4 text-navy-400"></img-svg>\n      <div data-local-table class="flex-1 truncate text-13" title="${e}">${e}</div>\n      \n      `}attributeChangedCallback(e,t,s){}activate(){this.setAttribute("active","true"),current.table=this.getValue(),current.database=this.closest("sidebar-database").getValue();const e=tab.getItem(current.database,current.table);if(e){tabs.deactivate(),e.activate(),$$("pane-main").forEach(e=>{e.deactivate()});$(`pane-main[database="${current.database}"][table="${current.table}"]`).activate()}else tab.add(current.database,current.table),syncSidebarLogo(),this.test(current.database,current.table).then(e=>{data[current.database+" "+current.table]=e;const t=`\n          <pane-main database="${current.database}" table="${current.table}" active="true"></pane-main>\n        `;$$("pane-main").forEach(e=>{e.deactivate()}),$("main-x").insertAdjacentHTML("beforeend",t);const s=$(`pane-main[database="${current.database}"][table="${current.table}"]`);$("select-table").setAttribute("hidden",""),$("records-x",s).setAttribute("rows",e.meta.limit),$("records-x",s).setAttribute("offset",e.meta.offset),$("records-x",s).setAttribute("total",e.meta.total)})}async test(e,t){try{const s=await axios.get(`http://localhost/tools/squares/server/php/queries/data.php?database=${e}&table=${t}`);return tables[`${e}|${t}`]=s.data,s.data}catch(e){console.error(e)}}deactivate(){this.removeAttribute("active")}hide(){this.setAttribute("hidden","")}show(){this.removeAttribute("hidden")}isActive(){return"true"==this.getAttribute("active")}getValue(){return this.querySelector("[data-local-table]").innerHTML}}customElements.define("sidebar-table",SidebarTable);class SidebarWrap extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col","pb-4","overflow-auto","resize-x","bg-gray-50","w-80","gap-4","pl-4"),this.innerHTML='\n      <h2 class="pt-4 text-sm text-gray-400 uppercase">Databases and tables</h2>\n      <sidebar-filter></sidebar-filter>\n      <sidebar-databases></sidebar-databases>\n    '}}customElements.define("sidebar-wrap",SidebarWrap);class IconDatabase2 extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes"]}connectedCallback(){this.innerHTML='\n        <svg\n          xmlns="http://www.w3.org/2000/svg"\n          viewBox="0 0 24 24"\n          width="24"\n          height="24"\n        >\n          <path fill="none" d="M0 0h24v24H0z" />\n          <path\n            d="M5 12.5c0 .313.461.858 1.53 1.393C7.914 14.585 9.877 15 12 15c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171C17.35 11.349 14.827 12 12 12s-5.35-.652-7-1.671V12.5zm14 2.829C17.35 16.349 14.827 17 12 17s-5.35-.652-7-1.671V17.5c0 .313.461.858 1.53 1.393C7.914 19.585 9.877 20 12 20c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171zM3 17.5v-10C3 5.015 7.03 3 12 3s9 2.015 9 4.5v10c0 2.485-4.03 4.5-9 4.5s-9-2.015-9-4.5zm9-7.5c2.123 0 4.086-.415 5.47-1.107C18.539 8.358 19 7.813 19 7.5c0-.313-.461-.858-1.53-1.393C16.086 5.415 14.123 5 12 5c-2.123 0-4.086.415-5.47 1.107C5.461 6.642 5 7.187 5 7.5c0 .313.461.858 1.53 1.393C7.914 9.585 9.877 10 12 10z"\n          />\n        </svg>\n      ',this.querySelector("svg").setAttribute("class",this.classes)}attributeChangedCallback(e,t,s){t!==s&&(this.classes=s)}}customElements.define("icon-database-2",IconDatabase2);class ModalInfo extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex flex-col flex-1 gap-6">\n        <div class="flex gap-3 items-center">\n          <img-svg src="remixicon/checkbox-multiple-blank.svg" classes="h-12 w-12"></img-svg>\n          <img-svg\n            src="logo.svg"\n            classes="h-10"\n          ></img-svg>\n        </div>\n        we rjiweor jweior jweior jwer iowejrio wejrweiojr weiorj weiorj\n        weiorj iowerj weiorj weiorjwe\n\n        \x3c!-- Links --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">Links</h2>\n          <ul class="list-disc list-inside">\n            <li>\n              <a\n                href="https://github.com/getsquares/squares"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Github</a\n              >\n            </li>\n            <li>\n              <a\n                href="https://github.com/getsquares/squares"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Documentation</a\n              >\n            </li>\n          </ul>\n        </div>\n\n        \x3c!-- Dependencies --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">Dependencies</h2>\n          <ul class="list-disc list-inside">\n            <li>\n              <a\n                href="https://remixicon.com/"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Remixicon</a\n              >\n            </li>\n            <li>\n              <a\n                href="https://fonts.google.com/icons"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Material Icons</a\n              >\n            </li>\n          </ul>\n        </div>\n\n        \x3c!-- Dependencies --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">License</h2>\n          <p>\n            Free to use with some limitations. You are not allowed to use\n            the source code in your own projects.\n          </p>\n        </div>\n        \n        \x3c!-- Purchase --\x3e\n        <div class="flex flex-col gap-4">\n          <div class="flex flex-col gap-2">\n            <h2 class="text-xl font-bold">Purchase</h2>\n            <p>\n              By purchasing to this product, you will support the software\n              now and in the future.\n            </p>\n          </div>\n          <div class="flex gap-2">\n            <div>\n              <button-item title="Purchase" href="#" style="action"></button-item>\n            </div>\n            <div>\n              <button-item title="Cancel" style="ghost"></button-item>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-info",ModalInfo);class ModalLogout extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex flex-col flex-1 gap-6">\n        <div class="flex flex-col gap-6">\n          <div class="flex flex-col gap-2">\n            <h2 class="text-xl font-bold">Logout</h2>\n            <p>\n              You you want to logout?\n            </p>\n          </div>\n          <div class="flex gap-2">\n            <div>\n              <button-item href="#" title="Logout" style="default"></button-item>\n            </div>\n            <div>\n              <button-item title="Cancel" style="ghost"></button-item>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-logout",ModalLogout);class TabItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["title","label","active"]}connectedCallback(){this.classList.add("rounded-t","px-4","pr-2","py-2","cursor-default","select-none","focus:outline-none","flex","gap-3","items-center","text-sm",...tab.classesInactive()),this.setAttribute("title",this.getAttribute("database")+"/"+this.getAttribute("table")),this.innerHTML=`\n      ${this.getAttribute("table")}\n      <img-svg src="remixicon/close.svg" classes="rounded w-5 h-5">\n    `,tab.onClose(this),tab.onClick(this)}deactivate(){this.removeAttribute("active")}activate(){this.setAttribute("active","true")}attributeChangedCallback(e,t,s){if(t!==s)switch(e){case"active":"true"==s?tab.activate(this):tab.deactivate(this)}}}customElements.define("tab-item",TabItem);class TabItems extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-1","items-center","gap-2","text-white","overflow-auto","w-full","self-end")}}customElements.define("tab-items",TabItems);class ActionbarInfo extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <div data-action>\n        <img-svg src="remixicon/info.svg" classes="w-5 h-5">\n        <div>Info</div>\n      </div>kkk\n    '+this.modal()}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}onClick(){}modal(){return'\n    <div class="bg-black inset-0">test</div>\n    '}}customElements.define("actionbar-info",ActionbarInfo);class TopbarItems extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n      <div class="flex gap-2 text-sm text-white py-2">\n        ${this.itemHtml("info","Info","remixicon/question-fill.svg")}\n        ${this.itemHtml("logout","Logout","material-icons/logout_black_24dp.svg")}\n      </div>\n    `,this.onClick()}itemHtml(e,t,s){return`\n      <div title="${t}" data-action="${e}" class="flex items-center gap-1 fill-current px-2 py-1.5 select-none hover:bg-black hover:bg-opacity-20 rounded"\n      >\n      <img-svg src="${s}"></img-svg>\n    </div>\n    `}onClick(){this.querySelectorAll("[data-action]").forEach(e=>{e.addEventListener("click",e=>{const t=e.currentTarget.getAttribute("data-action");["info","logout"].includes(t)&&($("[data-modal-content]").innerHTML=`<modal-${t}></modal-${t}>`,$("modal-box").activate())})})}}customElements.define("topbar-items",TopbarItems);class TopbarWrap extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n    <div\n      class="flex items-center justify-between pr-2 text-gray-200 bg-blueGray-700"\n    >\n      <resize-logo>\n        <div class="pl-4 pr-8 flex items-center gap-2 text-2xl text-white uppercase">\n          <img-svg\n            src="remixicon/checkbox-multiple-blank.svg"\n          ></img-svg>\n          <img-svg src="logo.svg" classes="h-5"></img-svg>\n        </div>\n      </resize-logo>\n      <tab-items></tab-items>\n      <topbar-items></topbar-items>\n    </div>\n    '}}customElements.define("topbar-wrap",TopbarWrap);class CellEdit extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active","null"]}connectedCallback(){this.setAttribute("hidden","")}attributeChangedCallback(e,t,s){if("active"==e&&t!==s)switch(e){case"active":"true"==s?this.thisActivate():this.thisDeactivate();break;case"null":"true"==s?this.setChecked(!0):this.setChecked(!1)}}setChecked(e){$('input[type="checkbox"][name="null"]').checked=e}populate(){const e="YES"==this.closest("table-cell").getAttribute("nullable");let t="";e&&(t='\n        <label class="flex gap-2 items-center">\n          <input type="checkbox" class="checkstyle-white form-checkbox" name="null">\n          <div class="italic">NULL</div>\n        </label>\n      ');let s=`\n      ${t}\n      <field-text></field-text>\n    `;this.innerHTML=s,e&&this.onClickNull()}onClickNull(){$('input[type="checkbox"][name="null"]',this).addEventListener("click",e=>{e.currentTarget.checked?(console.log("checked"),console.log($("cell-preview",this.closest("table-cell"))),$("cell-preview",this.closest("table-cell")).setAttribute("null","true")):$("cell-preview",this.closest("table-cell")).setAttribute("null","false")})}thisActivate(){this.removeAttribute("hidden"),this.populate()}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("cell-edit",CellEdit);class CellPreview extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active","null"]}connectedCallback(){let e="";"YES"==this.closest("table-cell").getAttribute("nullable")&&(e='<preview-null class="text-opacity-50 text-gray-800 italic">NULL</preview-null>'),this.innerHTML=`\n      ${e}\n      <preview-value></preview-value>\n    `}attributeChangedCallback(e,t,s){t!==s&&(console.log("differ"),"active"==e?"true"==s?this.thisActivate():this.thisDeactivate():"null"==e&&("true"==s?(this.showNull(),this.hideValue()):(this.hideNull(),this.showValue())))}showNull(){$("preview-null",this).removeAttribute("hidden")}hideNull(){$("preview-null",this).setAttribute("hidden","")}showValue(){$("preview-value",this).removeAttribute("hidden")}hideValue(){$("preview-value",this).setAttribute("hidden","")}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("cell-preview",CellPreview);class CellRing extends HTMLElement{constructor(){super()}static get observedAttributes(){return["state"]}connectedCallback(){this.onClick(),this.onDblClick()}attributeChangedCallback(e,t,s){"state"==e&&t!==s&&"default"!=s&&this.xEdges()}onClick(){this.addEventListener("click",e=>{this.handleCellActive(e)})}onDblClick(){this.addEventListener("dblclick",()=>{this.handleCellEdit()})}handleStep(e){switch(e){case"ArrowLeft":this.stepLeft();break;case"ArrowRight":this.stepRight();break;case"ArrowUp":this.stepUp();break;case"ArrowDown":this.stepDown()}}stepLeft(){const e=this.closest("table-cell").previousElementSibling;e&&"TABLE-CELL"===e.tagName&&$("cell-ring",e).handleCellActive()}stepRight(){const e=this.closest("table-cell").nextElementSibling;e&&"TABLE-CELL"===e.tagName&&$("cell-ring",e).handleCellActive()}stepDown(){const e=this.closest("table-cell"),t=cellActiveIndex(e),s=e.parentElement.nextElementSibling;s&&"TABLE-ROW"===s.tagName&&$(`table-cell:nth-child(${t}) cell-ring`,s).handleCellActive()}stepUp(){const e=this.closest("table-cell"),t=cellActiveIndex(e),s=e.parentElement.previousElementSibling;s&&"TABLE-ROW"===s.tagName&&$(`table-cell:nth-child(${t}) cell-ring`,s).handleCellActive()}handleCellTab(e){e.preventDefault(),this.handleStep(e.shiftKey?"ArrowLeft":"ArrowRight")}handleCellActive(){"active"==this.getAttribute("state")||(this.closest("table-cells").deactivateCells(),this.setAttribute("state","active"))}handleCellEdit(){in_field?in_field=!1:(this.setAttribute("state","edit"),$("cell-edit",this.closest("table-cell")).activate())}xEdges(){const e=this.closest("table-cell").previousElementSibling,t=this.closest("table-cell").nextElementSibling;"ROW-SELECT"==e.tagName&&this.classList.add("ml-2px"),t||this.classList.add("mr-2px")}}customElements.define("cell-ring",CellRing);class RowSelect extends HTMLElement{constructor(){super()}static get observedAttributes(){return["value"]}connectedCallback(){this.classList.add("relative","flex","sticky","z-50","left-0","heading-bkg"),this.innerHTML='\n      <label class="tp relative">\n        <input type="checkbox" class="checkstyle form-checkbox" name="test" />\n        <div class="absolute block inset-0 shadow-y"></div>\n      </label>\n    ',this.onClick()}onClick(){this.querySelector("input").addEventListener("input",e=>{const t=e.currentTarget.checked,s=this.closest(".contents").querySelectorAll("row-select, table-cell");t?this.closest("table-row").setAttribute("active","true"):this.closest("table-row").removeAttribute("active"),s.forEach(e=>{t?this.selectOne(e):this.deselectOne(e)}),$("row-actions").toggle()})}selectOne(e){e.classList.add("bg-navy-100"),e.classList.remove("bg-white")}deselectOne(e){e.classList.remove("bg-navy-100"),e.classList.add("bg-white")}}customElements.define("row-select",RowSelect);class TableCell extends HTMLElement{constructor(){super()}static get observedAttributes(){return["value"]}connectedCallback(){this.classList.add("relative","bg-white");const e=this.getAttribute("value");this.innerHTML='\n      <cell-ring state="default"></cell-ring>\n      <cell-edit></cell-edit>\n      <cell-preview active="true"></cell-preview>\n    ',$("preview-value",this).innerHTML=e}}customElements.define("table-cell",TableCell);class TableCells extends HTMLElement{constructor(){super()}static get observedAttributes(){return["value"]}connectedCallback(){this.classList.add("contents"),this.innerHTML=this.template();const e=$("cell-ring",this.closest("table-cells"));e&&e.setAttribute("state","active")}template(){const e=this.closest("pane-main"),t=data[`${e.getAttribute("database")} ${e.getAttribute("table")}`],s=t.cols_order;let i="",a="";return t.rows.forEach(e=>{a="",s.forEach(t=>{const s=e[t];a+=`<table-cell value="${s}"></table-cell>`}),i+=`\n        <table-row>\n          <row-select></row-select>\n          ${a}\n        </table-row>\n      `}),this.templateFirst(t)+i}templateFirst(e){let t="";return e.cols_order.forEach(s=>{t+=`\n        <table-cell nullable="${e.cols[s].meta.Null}" value=""></table-cell>\n      `}),t=`\n      <template data-first>\n        <table-row class="contents row-new">\n          <row-select></row-select>\n          ${t}\n        </table-row>\n      </template>\n    `,t}deactivateCells(){this.deactivateCellEdit(),this.deactivateCellRing()}deactivateCellRing(){const e=$('cell-ring[state="active"], cell-ring[state="edit"]',this);e&&e.setAttribute("state","default")}deactivateCellEdit(){const e=$("cell-edit[active]",this);e&&(e.innerHTML="",e.removeAttribute("active"))}}customElements.define("table-cells",TableCells);class TableHeadingCheck extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("sticky","top-0","z-[600]","flex","sticky","bg-gray-100","heading-bkg","left-0"),this.innerHTML='\n      <label class="tp relative heading-bkg flex items-center bg-gray-100">\n        <input type="checkbox" class="form-checkbox checkstyle-white" name="test" />\n      </label>\n    ',this.onChange()}keyHtml(){return'<img-svg src="remixicon/key-2-line.svg"></img-svg>'}onChange(){this.querySelector("input").addEventListener("change",e=>{const t=e.currentTarget.checked;$$("row-select").forEach(e=>{e.querySelector("input").checked=t,t?this.selectAll():this.deselectAll()})})}selectAll(){$$("[data-cells] row-select").forEach(e=>{$$("row-select, table-cell",e.closest("table-row")).forEach(t=>{e.selectOne(t)})})}deselectAll(){$$("[data-cells] row-select").forEach(e=>{e.closest(".contents").querySelectorAll("row-select, table-cell").forEach(t=>{e.deselectOne(t)})})}}customElements.define("table-heading-check",TableHeadingCheck);class TableHeading extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){const e=this.getAttribute("key"),t=this.getAttribute("title"),s=this.getAttribute("fieldtype"),i=e?this.keyHtml():"";this.classList.add("tp","heading-bkg","font-bold","flex","gap-2","items-center","text-sm","sticky","top-0","z-[500]","bg-gray-100"),this.innerHTML=`\n      ${i}\n      <div class="flex flex-col gap-1">\n        <div>\n          <div class="text-opacity-60 text-black inline-block py-0.5 text-xs font-normal rounded">${s}</div>\n        </div>\n        ${t}\n      </div>\n    `}keyHtml(){return'<img-svg src="remixicon/key-2-line.svg" classes="w-5 h-5"></img-svg>'}}customElements.define("table-heading",TableHeading);class TableHeadings extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("z-40","contents"),this.innerHTML=this.template()}template(){const e=this.closest("pane-main"),t=data[`${e.getAttribute("database")} ${e.getAttribute("table")}`],s=t.cols_order;let i="<table-heading-check></table-heading-check>";return s.forEach(e=>{const s=t.cols[e],a=s.config&&s.config.id?'key="true"':"";i+=`\n        <table-heading title="${e}" fieldtype="${s.meta.Type}" ${a}></table-heading>\n      `}),i}}customElements.define("table-headings",TableHeadings);class TableRow extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("contents")}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}addRow(){const e=$("[data-first]",this.closest("pane-main")).innerHTML;this.insertAdjacentHTML("afterend",e)}thisActivate(){this.classList.add("row-primary")}thisDeactivate(){this.classList.remove("row-primary")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("table-row",TableRow);class ActionbarRefresh extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <div data-action>\n        <img-svg src="material-icons/refresh.svg" classes="animate-spin w-5 h-5"></img-svg>\n        <div>Refresh</div>\n      </div>\n    '}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}}customElements.define("actionbar-refresh",ActionbarRefresh);class ButtonItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("href"),t=this.getAttribute("title");this.removeAttribute("title");let s="";s=e?this.linkHtml(t,e):this.buttonHtml(t,e),this.innerHTML=s}getClasses(){let e="";switch(this.getAttribute("style")){case"default":e=this.classesStyleDefault();break;case"action":e=this.classesStyleAction();break;case"ghost":e=this.classesStyleGhost()}return this.classesBase().concat(e)}linkHtml(e,t){return`<a href="${t}" class="${this.getClasses().join(" ")}">${e}</a>`}buttonHtml(e){return`<button class="focus:outline-none cursor-default ${this.getClasses().join(" ")}">${e}</button>`}classesBase(){return["inline-flex","items-center","gap-2","px-4","py-1.5","font-bold","rounded","fill-current"]}classesStyleDefault(){return["text-white","border-2","bg-blueGray-700","border-black","hover:bg-blueGray-800"]}classesStyleAction(){return["text-white","bg-gradient-to-br","from-navy-500","via-navy-600","to-navy-600","hover:from-navy-600","border","border-navy-600"]}classesStyleGhost(){return["border-2","border-gray-200","hover:border-gray-400"]}}customElements.define("button-item",ButtonItem);class CheckboxItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("name"),t=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`\n      <label class="flex select-none items-center gap-2">\n        <input type="checkbox" class="form-checkbox w-4 h-4 rounded focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${e}" ${s} />\n        ${t||""}\n      </label>\n    `}}customElements.define("checkbox-item",CheckboxItem);class ImgSvg extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes","src"]}attributeChangedCallback(e,t,s){t!==s&&"src"==e&&""!=s&&fetch("assets/icons/"+s).then(e=>e.text()).then(e=>{this.innerHTML=e;const t=this.querySelector("svg");t.setAttribute("class",this.getAttribute("classes")),t.classList.add("fill-current")}).catch(console.error.bind(console))}}customElements.define("img-svg",ImgSvg);class MessageItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("state"),t=this.innerHTML;let s="";switch(e){case"success":s="bg-green-600";break;case"error":s="bg-red-700"}this.classList.add("flex",s,"text-white","text-opacity-90"),this.innerHTML=`\n      <div class="flex-1 p-6">${t}</div>\n      <div class="p-2">\n        <button class="hover:bg-black hover:bg-opacity-10 p-2 focus:outline-none cursor-default">\n          <img-svg src="remixicon/close.svg"></img-svg>\n        </button>\n      </div>\n    `}}customElements.define("message-item",MessageItem);class ModalBox extends HTMLElement{constructor(){super()}connectedCallback(){this.deactivate(),this.innerHTML='\n      <div\n        data-backdrop\n        class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"\n      >\n        <div class="flex items-start w-full max-w-lg bg-white shadow-md">\n          <div class="p-8 flex-1" data-modal-content>\n            <modal-info></modal-info>\n          </div>\n          <button class="p-2 m-2 focus:outline-none hover:bg-gray-100 rounded">\n            <img-svg src="remixicon/close.svg"></img-svg>\n          </button>\n        </div>\n      </div>\n    ',this.onClose()}onClose(){this.querySelector("button").addEventListener("click",e=>{this.deactivate()}),this.querySelector("[data-backdrop]").addEventListener("click",e=>{e.target==e.currentTarget&&this.deactivate()})}activate(){this.removeAttribute("hidden")}deactivate(){this.setAttribute("hidden","")}}customElements.define("modal-box",ModalBox);class PaneMain extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("flex","flex-col","overflow-auto","flex-1");const e=this.gridCols(),t=`auto ${e.widths.join("px ")}px`;console.log(JSON.stringify(t)),this.innerHTML=`\n      <actions-x></actions-x>\n      <div class="flex-1 flex overflow-auto">\n        <div class="overflow-x-auto flex-1 my-4 border border-gray-200 rounded bg-white">\n          <div class="flex-1 text-13" style="width: ${e.sum}px;">\n            <div data-table class="grid gap-y-px bg-white" style="grid-template-columns: ${t};">\n              <table-headings></table-headings>\n              <table-cells></table-cells>\n            </div>\n          </div>\n        </div>\n      </div>\n      <pagination-x></pagination-x>\n    `}gridCols(){const e=data[`${this.getAttribute("database")} ${this.getAttribute("table")}`];let t=0,s=[];return e.cols_order.forEach(i=>{let a=null;const n=e.cols[i];a=n.config&&n.config.hasOwnProperty("width")?n.config.width:300,s.push(a),t+=a,console.log(a)}),{sum:t,widths:s}}part(){return'\n      <div class="contents">\n        <row-select></row-select>\n        <table-cell></table-cell>\n        <table-cell></table-cell>\n        <table-cell></table-cell>\n      </div>'}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.thisActivate():this.thisDeactivate())}thisActivate(){this.removeAttribute("hidden")}thisDeactivate(){this.setAttribute("hidden","")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("pane-main",PaneMain);class RadioItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("name"),t=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`\n      <label class="flex select-none items-center gap-2">\n        <input type="radio" class="w-4 h-4 focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${e}" ${s} />\n        ${t}\n      </label>\n    `}}customElements.define("radio-item",RadioItem);class FieldText extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <input value="test" type="text" class="form-input focus:outline-none focus:ring-yellow-500 focus:ring-offset-1 border-2 focus:ring-2 focus:border-gray-300 border-gray-300">\n    ',this.onKeyup(),this.onEnter(),this.onEscape(),updatePreview(this.querySelector("input").value,this),this.querySelector("input").select()}onKeyup(){this.querySelector("input").addEventListener("keyup",e=>{updatePreview(e.currentTarget.value,this)})}onEnter(){this.querySelector("input").addEventListener("keydown",e=>{"Enter"===e.key&&(e.preventDefault(),leaveEdit(e))})}onEscape(){window.addEventListener("keydown",e=>{if("Escape"!==e.key)return;$('cell-ring[state="edit"]')&&(e.preventDefault(),fieldClose())})}attributeChangedCallback(e,t,s){}}customElements.define("field-text",FieldText);