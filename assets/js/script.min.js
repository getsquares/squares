function getDomCellRings(){return document.querySelectorAll("cell-ring")}function getDomCellLeft(){const e=dom.current.table_cell.previousElementSibling;return e&&"TABLE-CELL"==e.tagName?e:dom.current.table_cell.closest("div").lastElementChild}function getDomCellRight(){const e=dom.current.table_cell.nextElementSibling;return e&&"TABLE-CELL"==e.tagName?e:dom.current.table_cell.closest("div").querySelector("table-cell")}function getDomCellDown(){const e=dom.current.table_cell,t=cellActiveIndex(e),s=e.parentElement.nextElementSibling;return s?s.querySelector(`table-cell:nth-child(${t})`):document.querySelector(`[data-cells] div.contents:first-child table-cell:nth-child(${t})`)}function getDomCellUp(){const e=dom.current.table_cell,t=cellActiveIndex(e),s=e.parentElement.previousElementSibling;return s?s.querySelector(`table-cell:nth-child(${t})`):document.querySelector(`[data-cells] div.contents:last-child table-cell:nth-child(${t})`)}function resetDomCellRings(){getDomCellRings().forEach(e=>{e.setAttribute("state","default")})}function resetDomCellEdits(){document.querySelectorAll("cell-edit").forEach(e=>{e.setAttribute("active","false")})}function tabClassActive(){return["bg-navy-100","text-navy-900","border-navy-300"]}function tabClassInactive(){return["hover:bg-gray-100","bg-gray-50","bg-gradient-to-b","from-white","to-gray-100","border-gray-300"]}function hollowClassActive(){return["bg-navy-100","text-navy-900","shadow-navy"]}function hollowClassInactive(){return["hover:bg-grayExtra"]}function resetDomCells(){resetDomCellRings(),resetDomCellEdits()}function eventCellClick(){getDomCellRings().forEach(e=>{e.addEventListener("click",e=>{handleCellActive(e)})})}function eventCellDoubleclick(){getDomCellRings().forEach(e=>{e.addEventListener("dblclick",()=>{handleCellEdit()})})}function eventCellKeydown(){window.addEventListener("keydown",e=>{switch(e.key){case"ArrowLeft":handleCellStep("left");break;case"ArrowRight":handleCellStep("right");break;case"ArrowDown":handleCellStep("down");break;case"ArrowUp":handleCellStep("up");break;case"Escape":handleCellEscape(e);break;case"Tab":handleCellTab(e);break;case"Enter":handleCellEdit()}})}function outsideClick(){document.addEventListener("click",e=>{if(!document.querySelector("[data-table]").contains(e.target)){resetDomCellEdits();const e=document.querySelector('cell-ring[state="edit"]');if(!e)return;e.setAttribute("state","active")}})}function handleCellActive(e){storeDomCell(e.currentTarget.closest("table-cell")),resetDomCells(),dom.current.cell_ring.setAttribute("state","active")}function handleCellStep(e){isCellActive()&&(storeDomCell(dom[e].table_cell),resetDomCells(),dom.current.cell_ring.setAttribute("state","active"))}function handleCellEscape(e){isCellActive()&&(e.preventDefault(),dom.current.cell_ring.setAttribute("state","default"),resetStore())}function handleCellClose(){isCellState("edit")&&(dom.current.cell_ring.setAttribute("state","active"),resetEdit())}function handleCellTab(e){isCellActive()&&(e.preventDefault(),handleCellStep(e.shiftKey?"left":"right"))}function handleCellEdit(){in_field?in_field=!1:isCellActive()&&(resetDomCells(),dom.current.cell_ring.setAttribute("state","edit"),dom.current.cell_edit.setAttribute("active","true"),dom.current.cell_edit.innerHTML="<field-text></field-text>")}function resetEdit(){dom.current.cell_ring.setAttribute("state","active"),dom.current.cell_edit.setAttribute("active","false"),dom.current.cell_edit.innerHTML=""}function leaveEdit(){in_field=!0,resetDomCellEdits();const e=document.querySelector('cell-ring[state="edit"]');e&&e.setAttribute("state","active")}function fieldClose(){handleCellClose()}function updatePreview(e,t){const s=t.closest("table-cell").querySelector("cell-preview");s.setAttribute("active","true"),s.innerHTML=e}function setCellFieldState(e,t){t.querySelector("cell-edit").setAttribute("active",e)}function setCellPreviewState(e,t){t.querySelector("cell-preview").setAttribute("active",e)}function cellActiveIndex(e){return[...e.parentElement.children].indexOf(e)+1}function isCellActive(){return dom.current&&"active"==dom.current.cell_ring.getAttribute("state")}function isCellState(e="active"){return dom.current&&dom.current.cell_ring.getAttribute("state")==e}function setCellActiveToEl(e,t="active"){e.setAttribute("state",t)}function syncSidebarLogo(){$("resize-logo").style.width=$("sidebar-wrap").offsetWidth+"px"}function error(e){}function success(e){}function spreadDomCell(e){return current={table_cell:e,cell_ring:e.querySelector("cell-ring"),cell_edit:e.querySelector("cell-edit"),cell_preview:e.querySelector("cell-preview")}}function resetStore(){dom.current=null,dom.left=null,dom.right=null,dom.up=null,dom.down=null}function storeDomCell(e){dom.current=spreadDomCell(e),dom.left=spreadDomCell(getDomCellLeft()),dom.right=spreadDomCell(getDomCellRight()),dom.down=spreadDomCell(getDomCellDown()),dom.up=spreadDomCell(getDomCellUp())}class tab{static activateLast(){const e=this.getLast();e&&e.activate()}static add(e,t){tabs.deactivate(),$("tab-items").insertAdjacentHTML("beforeend",tab.html(e,t,"true")),tab.onClick(tab.getLast())}static getItem(e,t){return $(`tab-item[database="${e}"][table="${t}"]`)}static getLast(){return $("tab-item:last-child")}static onClose(e){this.onCloseClick(e),this.onMiddleClick(e)}static onCloseClick(e){$("img-svg",e).on("click",()=>{tab.closeHandler(e)})}static onMiddleClick(e){e.on("mouseup",t=>{1===t.button&&tab.closeHandler(e)})}static html(e,t,s){return`\n    <tab-item database="${e}" table="${t}" active="${s}"></tab-item>`}static deactivate(e){const t=$("img-svg",e);t&&(e.classList.remove(...this.classesActive()),e.classList.add(...this.classesInactive()),t.classList.remove(...this.classesActiveClose()),t.classList.add(...this.classesInactiveClose()))}static activate(e){const t=$("img-svg",e);t&&(e.classList.add(...this.classesActive()),e.classList.remove(...this.classesInactive()),t.classList.add(...this.classesActiveClose()),t.classList.remove(...this.classesInactiveClose()),current.table=e.getAttribute("table"),current.database=e.getAttribute("database"))}static classesActive(){return["bg-white","text-gray-800"]}static classesInactive(){return["bg-navy-700","text-navy-200","hover:bg-navy-800"]}static classesActiveClose(){return["hover:bg-gray-200"]}static classesInactiveClose(){return["hover:bg-navy-600"]}static hasActive(){return $('tab-item[active="true"]')}static closeHandler(e){e.remove();const t=$('sidebar-table[active="true"]');t&&(t.removeAttribute("active","true"),this.hasActive()||tab.activateLast())}static onClick(e){e.on("mousedown",t=>{t.currentTarget===t.target&&1===t.which&&(tabs.deactivate(),e.activate())})}}class tabs{static deactivate(){const e=$$("tab-item");e&&e.forEach(e=>{e.deactivate()})}}class BarFooterItems extends HTMLElement{constructor(){super()}static get observedAttributes(){return["database","table"]}connectedCallback(){this.classList.add("flex","items-center","gap-4"),this.setAttribute("hidden",""),this.innerHTML=`\n      ${this.itemHtml(this.getAttribute("database"),"database","remixicon/database-2.svg")}\n\n      ${this.itemHtml(this.getAttribute("table"),"table","remixicon/table-line.svg")}\n\n      ${this.itemHtml(this.getAttribute("records"),"records","remixicon/layout-row-line.svg")}\n    `}itemHtml(e,t,s){return`\n      <div class="py-1.5 px-2 select-none flex gap-2 items-center hover:bg-gray-200 rounded"\n      >\n        <img-svg src="${s}"></img-svg>\n        <div data-local-${t}>${e}</div>\n      </div>\n    `}keyHtml(){return'<img-svg src="remixicon/key-2-line.svg"></img-svg>'}setRecords(e,t,s){this.querySelector("[data-local-records]").innerHTML=`${e}-${t} of ${s}`}attributeChangedCallback(e,t,s){const a=this.querySelector("[data-local-database]"),n=this.querySelector("[data-local-table]");t!==s&&("database"==e&&a?(a.innerHTML=s,this.removeAttribute("hidden")):"table"==e&&n&&(n.innerHTML=s))}}customElements.define("bar-footer-items",BarFooterItems);class ActionItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const e=this.getAttribute("label"),t=this.getAttribute("icon");this.classList.add(...tabClassInactive(),"flex","cursor-default","items-center","px-3","py-1.5","text-sm","select-none","gap-2","rounded","border"),this.innerHTML=`\n      <img-svg src="${t}" classes="w-5 h-5"></img-svg>\n      <div>${e}</div>\n    `,this.onClick()}onClick(){this.addEventListener("click",()=>{const e="true"==this.getAttribute("active"),t=$("pane-"+this.getAttribute("name"));$$("action-item").forEach(e=>{this.deactivate(e)}),$$("pane-items > *").forEach(e=>{e.deactivate()}),e?(this.deactivate(),t.deactivate()):(this.activate(),t.activate())})}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.classesActivate():this.classesDeactivate())}classesActivate(){this.classList.add(...tabClassActive()),this.classList.remove(...tabClassInactive())}classesDeactivate(e=this){e.classList.remove(...tabClassActive()),e.classList.add(...tabClassInactive())}activate(){this.setAttribute("active","true")}deactivate(e=this){e.removeAttribute("active")}}customElements.define("action-item",ActionItem);class ActionbarDropdown extends HTMLElement{constructor(){super()}connectedCallback(){this.setAttribute("hidden",""),this.innerHTML='\n      <div class="gap-4 bg-gray-100 border-t flex">\n        <div class="flex flex-col gap-4 p-6 flex-1">\n          <div data-actionbar-title class="font-bold"></div>\n          <div data-actionbar-dropdown-content></div>\n        </div>\n        <div class="p-2">\n          <button class="focus:outline-none hover:bg-gray-200 p-2 rounded">\n            <img-svg src="remixicon/close.svg"></img-svg>\n          </button>\n        </div>\n      </div>\n    ',this.onClose()}onClose(){this.querySelector("button").addEventListener("click",()=>{this.deactivate()})}setHtml(e,t){this.setTitle(e),this.setContent(t)}setTitle(e){this.querySelector("[data-actionbar-title]").innerHTML=e}setContent(e){this.querySelector("[data-actionbar-dropdown-content]").innerHTML=e}isActive(){return!this.hasAttribute("hidden")}setActive(e){e?this.removeAttribute("hidden",""):this.setAttribute("hidden","")}activate(){this.removeAttribute("hidden","")}deactivate(){this.setAttribute("hidden",""),this.setTitle(""),this.setContent("")}}customElements.define("actionbar-dropdown",ActionbarDropdown);class ActionbarItems extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML=`\n      <div class="flex justify-between gap-4 pt-2 bg-gray-50">\n        <div data-items class="flex rounded overflow-hidden gap-1">\n          <action-item name="panes" label="Panes" icon="remixicon/layout-5-line.svg"></action-item>\n          <action-item name="columns" label="4 hidden columns" icon="remixicon/layout-column-line.svg"></action-item>\n          <action-item name="filter" label="Filter" icon="remixicon/filter-3-line.svg"></action-item>\n          <action-item name="sort" label="Order" icon="remixicon/arrow-up-down.svg"></action-item>\n        </div>\n        \x3c!--\n        <div class="flex gap-4">\n          ${this.buttonHtml("refresh","material-icons/refresh.svg","Refresh")}\n          ${this.buttonHtml("add","remixicon/add.svg","Add row")}\n          \n          \n          <actionbar-import></actionbar-import>\n          <actionbar-export></actionbar-export>\n          \n        </div>\n        --\x3e\n      </div>\n    `,this.onClick()}buttonHtml(e,t,s){return`\n    <div data-local-add class="${hollowClassInactive().join(" ")} flex cursor-default items-center px-2 py-1.5 select-none gap-2 rounded-t border">\n      <img-svg src="${t}"></img-svg>\n      <div>${s}</div>\n    </div>\n  `}itemHtml(e,t,s){return`\n      <div data-title="${s}" data-action="${e}" class="${hollowClassInactive().join(" ")} flex cursor-default items-center px-2 py-1.5 select-none gap-2 rounded-t border">\n        <img-svg src="${t}"></img-svg>\n        <div>${s}</div>\n      </div>\n    `}onClick(){this.querySelectorAll("[data-action]").forEach(e=>{e.addEventListener("click",e=>{const t=e.currentTarget,s=this.isActive(t);t.getAttribute("data-action"),$("actionbar-dropdown");this.deactivateAll(),s?this.deactivate(t):this.activate(t)})})}isActive(e){return e.classList.contains("bg-blue-50")}activate(e){e.classList.add(...tabClassActive()),e.classList.remove(...tabClassInactive())}deactivate(e){e.classList.add(...tabClassInactive()),e.classList.remove(...tabClassActive())}deactivateAll(){$$("[data-action]").forEach(e=>{this.deactivate(e)})}}customElements.define("actionbar-items",ActionbarItems);class ActionsWrap extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("flex","flex-col","gap-2"),this.innerHTML='      \n      <actionbar-items></actionbar-items>\n      <pane-items class="block bg-white border rounded border-gray-200">\n        <pane-columns></pane-columns>\n        <pane-filter></pane-filter>\n        <pane-sort></pane-sort>\n      </pane-items>\n      '}}customElements.define("actions-wrap",ActionsWrap);class PaneClose extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="p-2">\n        <button class="focus:outline-none hover:bg-gray-100 p-2 rounded">\n          <img-svg src="remixicon/close.svg"></img-svg>\n        </button>\n      </div>',this.onClick()}onClick(){const e=this.getAttribute("hide");$("button",this).addEventListener("click",()=>{this.closest(e).deactivate()})}}customElements.define("pane-close",PaneClose);class SidebarDatabaseLoading extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","gap-2","py-1","px-4","cursor-default","select-none","fill-current","items-center"),this.innerHTML='\n      <img-svg src="material-icons/refresh.svg" classes="animate-spin w-4 h-4 text-gray-400"></img-svg>\n      <div data-local-table class="flex-1 truncate text-13">Loading...</div>\n    '}}customElements.define("sidebar-database-loading",SidebarDatabaseLoading);class SidebarDatabaseRefresh extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add(...hollowClassInactive(),"flex","gap-2","py-1","px-4","cursor-default","select-none","fill-current","items-center"),this.innerHTML='\n      <img-svg src="material-icons/refresh.svg" classes="w-4 h-4 text-gray-400"></img-svg>\n      <div data-local-table class="flex-1 truncate text-13">Refresh</div>\n    '}}customElements.define("sidebar-database-refresh",SidebarDatabaseRefresh);class SidebarDatabase extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const e=this.getAttribute("title");this.removeAttribute("title"),this.innerHTML=`\n      <div data-database class="${hollowClassInactive().join(" ")} flex gap-2 px-4 py-1 cursor-default select-none fill-current items-center">\n        <img-svg src="remixicon/database-2-fill.svg" classes="w-4 h-4 text-yellow-500"></img-svg>\n        <div data-local-database class="flex-1 truncate font-bold text-sm">${e}</div>\n        <img-svg data-arrow src="remixicon/arrow-down-s.svg" classes="transform rotate-180 w-4 h-4"></img-svg>\n      </div>\n\n      <div data-tables hidden></div>\n      `,this.onClickDatabase()}attributeChangedCallback(e,t,s){if(t!==s){const t=this.querySelector("[data-arrow] svg");t&&("active"==e&&"true"==s?t.classList.remove("rotate-180"):t.classList.add("rotate-180"))}}onClickDatabase(){this.querySelector("[data-database]").addEventListener("click",e=>{this.isActive()?this.deactivate():this.activate()})}onClickTable(e){e.addEventListener("click",()=>{e.isActive()?e.deactivate():e.activate()})}deactivateAllTables(){$$("sidebar-table").forEach(e=>{e.deactivate()})}activate(){const e=this.querySelector("[data-tables]");this.setAttribute("active","true"),this.querySelector("[data-tables]").removeAttribute("hidden"),""==e.innerHTML&&this.populate()}populate(){const e=this.querySelector("[data-tables]");e.innerHTML="<sidebar-database-loading></sidebar-database-loading>",axios.get("http://localhost/tools/squares/server/php/queries/tables.php?database="+this.getValue()).then(t=>{if(200!==t.status)return;let s="\n        <sidebar-database-refresh></sidebar-database-refresh>\n        ";t.data.forEach(e=>{s+=this.template(e)}),e.innerHTML=s,$("sidebar-filter").filter(e),this.populateEvents(e)})}populateEvents(e){e.querySelectorAll("sidebar-table").forEach(e=>{e.addEventListener("click",e=>{const t=e.currentTarget;this.deactivateAllTables(),t.activate();$("bar-footer-items").setAttribute("database",this.getValue()),$("bar-footer-items").setAttribute("table",t.getValue()),$("bar-footer-items").setRecords(1,300,1235)})})}template(e){return`<sidebar-table title="${e}"></sidebar-table>`}deactivate(){this.removeAttribute("active"),this.querySelector("[data-tables]").setAttribute("hidden","")}isActive(){return"true"==this.getAttribute("active")}getValue(){return this.querySelector("[data-local-database]").innerHTML}}customElements.define("sidebar-database",SidebarDatabase);class SidebarDatabases extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col"),this.populate()}template(e){return`<sidebar-database title="${e}"></sidebar-database>`}populate(){axios.get("http://localhost/tools/squares/server/php/queries/databases.php").then(e=>{if(200!==e.status)return;console.log(e.data);let t="";e.data.forEach(e=>{t+=this.template(e)}),this.innerHTML+=t})}}customElements.define("sidebar-databases",SidebarDatabases);class SidebarFilter extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <label class="flex flex-col gap-2 mx-4">\n        <div class="uppercase font-bold text-sm">Filter tables</div>\n        <input spellcheck="false" placeholder="Show matching tables..." type="text" class="bg-white border-gray-200 text-sm rounded focus:ring-0 focus:border-gray-400">\n      </label>\n    ',this.onChange()}onChange(){this.querySelector("input").addEventListener("input",()=>{this.filter()})}filter(){const e=$("sidebar-filter input").value;$$("sidebar-table").forEach(t=>{t.getValue().includes(e)?t.show():t.hide()})}}customElements.define("sidebar-filter",SidebarFilter);class SidebarTable extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){const e=this.getAttribute("title");this.removeAttribute("title"),this.classList.add(...hollowClassInactive(),"flex","gap-2","py-1","px-4","cursor-default","select-none","fill-current","items-center"),this.innerHTML=`\n      <img-svg src="boxicons/bx-table.svg" classes="w-4 h-4 text-navy-400"></img-svg>\n      <div data-local-table class="flex-1 truncate text-13" title="${e}">${e}</div>\n      \n      `}attributeChangedCallback(e,t,s){t!==s&&("active"==e&&"true"==s?(this.classList.add(...hollowClassActive()),this.classList.remove(...hollowClassInactive()),console.log(this.querySelector("img-svg")),this.querySelector("svg").classList.replace("text-navy-300","text-navy-500")):(this.classList.remove(...hollowClassActive()),this.classList.add(...hollowClassInactive()),this.querySelector("svg").classList.replace("text-navy-500","text-navy-300")))}activate(){this.setAttribute("active","true"),current.table=this.getValue(),current.database=this.closest("sidebar-database").getValue();const e=tab.getItem(current.database,current.table);e?(tabs.deactivate(),e.activate()):(tab.add(current.database,current.table),syncSidebarLogo(),console.log("tab"),this.test(current.database,current.table).then(e=>{console.log(tables)}))}async test(e,t){try{const s=await axios.get(`http://localhost/tools/squares/server/php/queries/data.php?database=${e}&table=${t}`);return tables[`${e}|${t}`]=s.data,s.data}catch(e){console.error(e)}}deactivate(){this.removeAttribute("active")}hide(){this.setAttribute("hidden","")}show(){this.removeAttribute("hidden")}isActive(){return"true"==this.getAttribute("active")}getValue(){return this.querySelector("[data-local-table]").innerHTML}}customElements.define("sidebar-table",SidebarTable);class SidebarWrap extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-col","pb-4","overflow-auto","resize-x","bg-gray-50","w-80","gap-4"),this.innerHTML='\n      <h2 class="p-4 pb-0 text-sm text-gray-400 uppercase">Databases and tables</h2>\n      <sidebar-filter></sidebar-filter>\n      <sidebar-databases></sidebar-databases>\n    '}}customElements.define("sidebar-wrap",SidebarWrap);class IconDatabase2 extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes"]}connectedCallback(){this.innerHTML='\n        <svg\n          xmlns="http://www.w3.org/2000/svg"\n          viewBox="0 0 24 24"\n          width="24"\n          height="24"\n        >\n          <path fill="none" d="M0 0h24v24H0z" />\n          <path\n            d="M5 12.5c0 .313.461.858 1.53 1.393C7.914 14.585 9.877 15 12 15c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171C17.35 11.349 14.827 12 12 12s-5.35-.652-7-1.671V12.5zm14 2.829C17.35 16.349 14.827 17 12 17s-5.35-.652-7-1.671V17.5c0 .313.461.858 1.53 1.393C7.914 19.585 9.877 20 12 20c2.123 0 4.086-.415 5.47-1.107 1.069-.535 1.53-1.08 1.53-1.393v-2.171zM3 17.5v-10C3 5.015 7.03 3 12 3s9 2.015 9 4.5v10c0 2.485-4.03 4.5-9 4.5s-9-2.015-9-4.5zm9-7.5c2.123 0 4.086-.415 5.47-1.107C18.539 8.358 19 7.813 19 7.5c0-.313-.461-.858-1.53-1.393C16.086 5.415 14.123 5 12 5c-2.123 0-4.086.415-5.47 1.107C5.461 6.642 5 7.187 5 7.5c0 .313.461.858 1.53 1.393C7.914 9.585 9.877 10 12 10z"\n          />\n        </svg>\n      ',this.querySelector("svg").setAttribute("class",this.classes)}attributeChangedCallback(e,t,s){t!==s&&(this.classes=s)}}customElements.define("icon-database-2",IconDatabase2);class ModalInfo extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex flex-col flex-1 gap-6">\n        <div class="flex gap-3 items-center">\n          <img-svg src="remixicon/checkbox-multiple-blank.svg" classes="h-12 w-12"></img-svg>\n          <img-svg\n            src="logo.svg"\n            classes="h-10"\n          ></img-svg>\n        </div>\n        we rjiweor jweior jweior jwer iowejrio wejrweiojr weiorj weiorj\n        weiorj iowerj weiorj weiorjwe\n\n        \x3c!-- Links --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">Links</h2>\n          <ul class="list-disc list-inside">\n            <li>\n              <a\n                href="https://github.com/getsquares/squares"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Github</a\n              >\n            </li>\n            <li>\n              <a\n                href="https://github.com/getsquares/squares"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Documentation</a\n              >\n            </li>\n          </ul>\n        </div>\n\n        \x3c!-- Dependencies --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">Dependencies</h2>\n          <ul class="list-disc list-inside">\n            <li>\n              <a\n                href="https://remixicon.com/"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Remixicon</a\n              >\n            </li>\n            <li>\n              <a\n                href="https://fonts.google.com/icons"\n                target="_blank"\n                class="text-blue-600 underline"\n                >Material Icons</a\n              >\n            </li>\n          </ul>\n        </div>\n\n        \x3c!-- Dependencies --\x3e\n        <div class="flex flex-col gap-2">\n          <h2 class="text-xl font-bold">License</h2>\n          <p>\n            Free to use with some limitations. You are not allowed to use\n            the source code in your own projects.\n          </p>\n        </div>\n        \n        \x3c!-- Purchase --\x3e\n        <div class="flex flex-col gap-4">\n          <div class="flex flex-col gap-2">\n            <h2 class="text-xl font-bold">Purchase</h2>\n            <p>\n              By purchasing to this product, you will support the software\n              now and in the future.\n            </p>\n          </div>\n          <div class="flex gap-2">\n            <div>\n              <button-item title="Purchase" href="#" style="action"></button-item>\n            </div>\n            <div>\n              <button-item title="Cancel" style="ghost"></button-item>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-info",ModalInfo);class ModalLogout extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex flex-col flex-1 gap-6">\n        <div class="flex flex-col gap-6">\n          <div class="flex flex-col gap-2">\n            <h2 class="text-xl font-bold">Logout</h2>\n            <p>\n              You you want to logout?\n            </p>\n          </div>\n          <div class="flex gap-2">\n            <div>\n              <button-item href="#" title="Logout" style="default"></button-item>\n            </div>\n            <div>\n              <button-item title="Cancel" style="ghost"></button-item>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',this.onCancel()}onCancel(){this.querySelector('button-item[style="ghost"]').addEventListener("click",()=>{$("modal-box").deactivate()})}}customElements.define("modal-logout",ModalLogout);class CellEdit extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.setAttribute("active","false"),this.classList.add("z-20","hidden","block","absolute","bg-gray-100","shadow-md","top-full","p-4","left-0","mt-0.5")}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}}customElements.define("cell-edit",CellEdit);class CellPreview extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("block","relative","tp")}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}}customElements.define("cell-preview",CellPreview);class CellRing extends HTMLElement{constructor(){super()}static get observedAttributes(){return["state"]}connectedCallback(){this.classList.add("absolute","block","inset-0","z-10")}attributeChangedCallback(e,t,s){if("state"==e&&t!==s){this.classList.remove("ring-1","ring-2","ring-gray-500","ring-blue-500","ring-orange-500","z-10","z-30","shadow-y","ml-2px");const e=this.closest("table-cell").previousElementSibling,t=this.closest("table-cell").nextElementSibling;switch(s){case"default":this.classList.add("shadow-y"),this.classList.add("z-10");break;case"active":this.classList.add("ring-2","ring-gray-500","z-30");break;case"changed":this.classList.add("ring-2","ring-orange-500","z-30");break;case"edit":this.classList.add("ring-2","ring-blue-500","z-30")}"default"!=s&&("ROW-SELECT"==e.tagName&&this.classList.add("ml-2px"),t||this.classList.add("mr-2px"))}}}customElements.define("cell-ring",CellRing);class RowSelect extends HTMLElement{constructor(){super()}static get observedAttributes(){return["value"]}connectedCallback(){this.classList.add("relative","flex","sticky","z-50","left-0","heading-bkg"),this.innerHTML='\n      <label class="tp relative">\n        <input type="checkbox" class="checkstyle" name="test" />\n        <div class="absolute block inset-0 shadow-y"></div>\n      </label>\n    ',this.onClick()}onClick(){this.querySelector("input").addEventListener("input",e=>{const t=e.currentTarget.checked;this.closest(".contents").querySelectorAll("row-select, table-cell").forEach(e=>{t?this.selectOne(e):this.deselectOne(e)})})}selectOne(e){e.classList.add("bg-navy-100"),e.classList.remove("bg-white")}deselectOne(e){e.classList.remove("bg-navy-100"),e.classList.add("bg-white")}}customElements.define("row-select",RowSelect);class TableCell extends HTMLElement{constructor(){super()}static get observedAttributes(){return["value"]}connectedCallback(){this.classList.add("relative","bg-white"),this.innerHTML=`\n      <cell-ring state="default"></cell-ring>\n      <cell-edit></cell-edit>\n      <cell-preview active="true" class="select-none">\n        ${this.value}\n      </cell-preview>\n    `}}customElements.define("table-cell",TableCell);class TableHeadingCheck extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("sticky","top-0","left-0","z-50","flex","sticky"),this.innerHTML='\n      <label class="tp relative heading-bkg flex items-center">\n        <input type="checkbox" class="checkstyle" name="test" />\n        <div class="absolute block inset-0 ring-1 ring-gray-100"></div>\n      </label>\n    ',this.onChange()}keyHtml(){return'<img-svg src="remixicon/key-2-line.svg"></img-svg>'}onChange(){this.querySelector("input").addEventListener("change",e=>{const t=e.currentTarget.checked;$$("row-select").forEach(e=>{e.querySelector("input").checked=t,t?this.selectAll():this.deselectAll()})})}selectAll(){$$("[data-cells] row-select").forEach(e=>{e.closest(".contents").querySelectorAll("row-select, table-cell").forEach(t=>{e.selectOne(t)})})}deselectAll(){$$("[data-cells] row-select").forEach(e=>{e.closest(".contents").querySelectorAll("row-select, table-cell").forEach(t=>{e.deselectOne(t)})})}}customElements.define("table-heading-check",TableHeadingCheck);class TableHeading extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){const e=this.getAttribute("key"),t=this.getAttribute("title"),s=e?this.keyHtml():"";this.classList.add("tp","heading-bkg","font-bold","flex","gap-2","items-center","text-sm","sticky","top-0","z-50"),this.innerHTML=`\n      ${s}\n      ${t}\n    `}keyHtml(){return'<img-svg src="remixicon/key-2-line.svg" classes="w-5 h-5"></img-svg>'}}customElements.define("table-heading",TableHeading);class TabItem extends HTMLElement{constructor(){super()}static get observedAttributes(){return["title","label","active"]}connectedCallback(){this.classList.add("rounded-t","px-4","pr-2","py-1.5","cursor-default","select-none","focus:outline-none","flex","gap-3","items-center","text-sm",...tab.classesInactive()),this.setAttribute("title",this.getAttribute("database")+"/"+this.getAttribute("table")),this.innerHTML=`\n      ${this.getAttribute("table")}\n      <img-svg src="remixicon/close.svg" classes="rounded w-5 h-5">\n    `,tab.onClose(this),tab.onClick(this)}deactivate(){this.removeAttribute("active")}activate(){this.setAttribute("active","true")}attributeChangedCallback(e,t,s){if(t!==s)switch(e){case"active":"true"==s?tab.activate(this):tab.deactivate(this)}}}customElements.define("tab-item",TabItem);class TabItems extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("flex","flex-1","items-center","gap-2","text-white","bg-navy-600","overflow-auto","w-full","self-end")}}customElements.define("tab-items",TabItems);class ActionbarInfo extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <div data-action>\n        <img-svg src="remixicon/info.svg" classes="w-5 h-5">\n        <div>Info</div>\n      </div>kkk\n    '+this.modal()}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}onClick(){}modal(){return'\n    <div class="bg-black inset-0">test</div>\n    '}}customElements.define("actionbar-info",ActionbarInfo);class TopbarItems extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n      <div class="flex gap-2 text-sm text-white py-2">\n        ${this.itemHtml("info","Info","remixicon/question-fill.svg")}\n        ${this.itemHtml("logout","Logout","material-icons/logout_black_24dp.svg")}\n      </div>\n    `,this.onClick()}itemHtml(e,t,s){return`\n      <div title="${t}" data-action="${e}" class="flex items-center gap-1 fill-current px-2 py-1.5 select-none hover:bg-black hover:bg-opacity-20 rounded"\n      >\n      <img-svg src="${s}"></img-svg>\n    </div>\n    `}onClick(){this.querySelectorAll("[data-action]").forEach(e=>{e.addEventListener("click",e=>{const t=e.currentTarget.getAttribute("data-action");["info","logout"].includes(t)&&($("[data-modal-content]").innerHTML=`<modal-${t}></modal-${t}>`,$("modal-box").activate())})})}}customElements.define("topbar-items",TopbarItems);class TopbarWrap extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n    <div\n      class="flex items-center justify-between pr-2 text-gray-200 bg-navy-600"\n    >\n      <resize-logo>\n        <div class="pl-4 pr-8 flex items-center gap-2 text-2xl text-white uppercase">\n          <img-svg\n            src="remixicon/checkbox-multiple-blank.svg"\n          ></img-svg>\n          <img-svg src="logo.svg" classes="h-5"></img-svg>\n        </div>\n      </resize-logo>\n      <tab-items></tab-items>\n      <topbar-items></topbar-items>\n    </div>\n    '}}customElements.define("topbar-wrap",TopbarWrap);class ActionbarRefresh extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <div data-action>\n        <img-svg src="material-icons/refresh.svg" classes="animate-spin w-5 h-5"></img-svg>\n        <div>Refresh</div>\n      </div>\n    '}attributeChangedCallback(e,t,s){"active"==e&&t!==s&&("true"==s?this.classList.remove("hidden"):this.classList.add("hidden"))}}customElements.define("actionbar-refresh",ActionbarRefresh);class ActionbarSort extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <actionbar-icon\n        src="remixicon/arrow-up-down.svg"\n        title="Sort"\n      ></actionbar-icon>\n    ',this.onClick()}onClick(){this.addEventListener("click",()=>{const e=this.querySelector("actionbar-icon");e.isActive()?e.deactivate():e.activate("Sort",this.html())})}html(){return'\n      <div class="flex gap-4">\n        <label class="flex select-none items-center gap-2">\n          <input\n            type="radio"\n            class="w-5 h-5 border border-gray-400 text-blue-600 focus:ring-0 focus:ring-offset-0"\n            name="same"\n          />\n          Testing\n        </label>\n        <label class="flex select-none items-center gap-2">\n          <input\n            type="radio"\n            class="w-5 h-5 border border-gray-400 text-blue-600 focus:ring-0 focus:ring-offset-0"\n            name="same"\n          />\n          Testing\n        </label>\n      </div>\n    '}}customElements.define("actionbar-sort",ActionbarSort);class ActionbarColumns2 extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex gap-8">\n        <checkbox-item name="test" label="id" checked="true"></checkbox-item>\n        <checkbox-item name="test" label="title" checked="true"></checkbox-item>\n        <checkbox-item name="test" label="slug" checked="true"></checkbox-item>\n        <checkbox-item name="test" label="description" checked="true"></checkbox-item>\n        <checkbox-item name="test" label="categories" checked="true"></checkbox-item>\n      </div>\n    '}}customElements.define("actionbar-columns2",ActionbarColumns2);class ActionbarSort2 extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n      <div class="flex gap-4">\n        <radio-item name="test" label="Hegllo" checked="true"></radio-item>\n        <radio-item name="test" label="Hegllo" checked="true"></radio-item>\n      </div>\n    '}}customElements.define("actionbar-sort2",ActionbarSort2);class PaneColumns extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","hidden","text-sm"),this.innerHTML=this.template("Columns")}checkboxes(){return this.partCheckbox("test23",!0)+this.partCheckbox("test")}template(e){return`\n      <div class="flex flex-col gap-2 p-4 flex-1">\n        <div class="font-bold">${e}</div>\n        <div class="flex gap-2">\n          ${this.checkboxes()}\n        </div>\n      </div>\n      <pane-close hide="pane-columns"></pane-close>\n    `}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.classesActivate():this.classesDeactivate())}classesActivate(e=this){e.classList.remove("hidden")}classesDeactivate(e=this){e.classList.add("hidden")}partCheckbox(e,t){return`\n    <checkbox-item class="bg-gray-50 px-3 py-1.5 rounded border border-gray-200" name="${e}" label="${e}" checked="${t}"></checkbox-item>\n    `}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("pane-columns",PaneColumns);class PaneFilter extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","hidden","text-sm"),this.innerHTML=this.template("Filter")}filters(){return this.partFilter("test23",!0)+this.partFilter("test")}template(e){return`\n      <div class="flex flex-col gap-2 p-4 flex-1">\n        <div class="grid grid-cols-[minmax(200px,max-content),minmax(200px,max-content),1fr] gap-2 flex-col">\n          <div class="contents">\n            ${this.partHeading("Column")}\n            ${this.partHeading("Match")}\n            ${this.partHeading("Value")}\n          </div>\n          ${this.filters()}\n        </div>\n        <button-item style="action" title="Filter data" class="ml-auto"></button-item>\n      </div>\n      <pane-close hide="pane-filter"></pane-close>\n    `}partHeading(e){return`<div class="font-bold text-sm">${e}</div>`}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.classesActivate():this.classesDeactivate())}classesActivate(e=this){e.classList.remove("hidden")}classesDeactivate(e=this){e.classList.add("hidden")}partFilter(e,t){return`\n    <div class="contents">\n      <select class="actionbar-select">\n        <option>hello</option>\n        <option>hello2</option>\n      </select>\n      <select class="actionbar-select">\n        ${this.partMatches()}\n      </select>\n      <input type="text" class="actionbar-select">\n    </div>\n    `}partMatches(){let e=[];return[{name:"contains",label:"Contains"},{name:"not_contains",label:"Not contains"},{name:"starts_with",label:"Starts with"},{name:"ends_with",label:"Ends with"},{name:"equals",label:"Equals"},{name:"not_equals",label:"Not equals"},{name:"less_than",label:"Less than"},{name:"larger_than",label:"Larger than"}].forEach(t=>{e.push(`<option value="${t.name}">${t.label}</option>`)}),e.join(" ")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("pane-filter",PaneFilter);class PaneSort extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("gap-4","flex","hidden","text-sm"),this.innerHTML=this.template("Sort by")}filters(){return this.partFilter("test23",!0)+this.partFilter("test")}template(e){return'\n      <div class="flex flex-col gap-6 p-4 flex-1">\n        <div class="flex flex-col gap-2">\n          <div class="font-bold">Order by</div>\n          <div class="flex gap-8">\n            <radio-item name="order_by" label="Unsorted" checked=""></radio-item>\n            <radio-item name="order_by" label="id" checked=""></radio-item>\n            <radio-item name="order_by" label="title" checked=""></radio-item>\n            <radio-item name="order_by" label="slug" checked=""></radio-item>\n            <radio-item name="order_by" label="description" checked=""></radio-item>\n          </div>\n        </div>\n        <div class="flex flex-col gap-2">\n          <div class="font-bold">Order direction</div>\n          <div class="flex gap-8">\n            <radio-item name="order" label="Unsorted" checked=""></radio-item>\n            <radio-item name="order" label="Ascending" checked=""></radio-item>\n            <radio-item name="order" label="Descending" checked=""></radio-item>\n          </div>\n        </div>\n      </div>\n      <pane-close hide="pane-filter"></pane-close>\n    '}partHeading(e){return`<div class="font-bold text-sm uppercase">${e}</div>`}attributeChangedCallback(e,t,s){t!==s&&"active"==e&&("true"==s?this.classesActivate():this.classesDeactivate())}classesActivate(e=this){e.classList.remove("hidden")}classesDeactivate(e=this){e.classList.add("hidden")}partFilter(e,t){return`\n    <div class="contents">\n      <select class="bg-white border-gray-300 rounded focus:ring-0 focus:border-gray-400 text-sm">\n        <option>hello</option>\n        <option>hello2</option>\n      </select>\n      <select class="bg-white border-gray-300 rounded focus:ring-0 focus:border-gray-400 text-sm">\n        ${this.partMatches()}\n      </select>\n    </div>\n    `}partMatches(){let e=[];return[{name:"asc",label:"Ascending"},{name:"desc",label:"Descending"}].forEach(t=>{e.push(`<option value="${t.name}">${t.label}</option>`)}),e.join(" ")}activate(){this.setAttribute("active","true")}deactivate(){this.removeAttribute("active")}}customElements.define("pane-sort",PaneSort);class ButtonItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("href"),t=this.getAttribute("title");this.removeAttribute("title");let s="";s=e?this.linkHtml(t,e):this.buttonHtml(t,e),this.innerHTML=s}getClasses(){let e="";switch(this.getAttribute("style")){case"default":e=this.classesStyleDefault();break;case"action":e=this.classesStyleAction();break;case"ghost":e=this.classesStyleGhost()}return this.classesBase().concat(e)}linkHtml(e,t){return`<a href="${t}" class="${this.getClasses().join(" ")}">${e}</a>`}buttonHtml(e){return`<button class="focus:outline-none cursor-default ${this.getClasses().join(" ")}">${e}</button>`}classesBase(){return["inline-flex","items-center","gap-2","px-4","py-1.5","font-bold","rounded","fill-current"]}classesStyleDefault(){return["text-white","border-2","bg-blueGray-700","border-black","hover:bg-blueGray-800"]}classesStyleAction(){return["text-white","bg-gradient-to-br","from-navy-500","via-navy-600","to-navy-600","hover:from-navy-600","border","border-navy-600"]}classesStyleGhost(){return["border-2","border-gray-200","hover:border-gray-400"]}}customElements.define("button-item",ButtonItem);class CheckboxItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("name"),t=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`\n      <label class="flex select-none items-center gap-2">\n        <input type="checkbox" class="w-4 h-4 rounded focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${e}" ${s} />\n        ${t||""}\n      </label>\n    `}}customElements.define("checkbox-item",CheckboxItem);class ImgSvg extends HTMLElement{constructor(){super()}static get observedAttributes(){return["classes","src"]}attributeChangedCallback(e,t,s){t!==s&&"src"==e&&""!=s&&fetch("assets/icons/"+s).then(e=>e.text()).then(e=>{this.innerHTML=e;const t=this.querySelector("svg");t.setAttribute("class",this.getAttribute("classes")),t.classList.add("fill-current")}).catch(console.error.bind(console))}}customElements.define("img-svg",ImgSvg);class MessageItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("state"),t=this.innerHTML;let s="";switch(e){case"success":s="bg-green-600";break;case"error":s="bg-red-700"}this.classList.add("flex",s,"text-white","text-opacity-90"),this.innerHTML=`\n      <div class="flex-1 p-6">${t}</div>\n      <div class="p-2">\n        <button class="hover:bg-black hover:bg-opacity-10 p-2 focus:outline-none cursor-default">\n          <img-svg src="remixicon/close.svg"></img-svg>\n        </button>\n      </div>\n    `}}customElements.define("message-item",MessageItem);class ModalBox extends HTMLElement{constructor(){super()}connectedCallback(){this.deactivate(),this.innerHTML='\n      <div\n        data-backdrop\n        class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"\n      >\n        <div class="flex items-start w-full max-w-lg bg-white shadow-md">\n          <div class="p-8 flex-1" data-modal-content>\n            <modal-info></modal-info>\n          </div>\n          <button class="p-2 m-2 focus:outline-none hover:bg-gray-100 rounded">\n            <img-svg src="remixicon/close.svg"></img-svg>\n          </button>\n        </div>\n      </div>\n    ',this.onClose()}onClose(){this.querySelector("button").addEventListener("click",e=>{this.deactivate()}),this.querySelector("[data-backdrop]").addEventListener("click",e=>{e.target==e.currentTarget&&this.deactivate()})}activate(){this.removeAttribute("hidden")}deactivate(){this.setAttribute("hidden","")}}customElements.define("modal-box",ModalBox);class PaneMain extends HTMLElement{constructor(){super()}static get observedAttributes(){return["active"]}connectedCallback(){this.classList.add("flex","flex-col","overflow-auto","gap-2"),this.innerHTML=`\n      <actions-wrap></actions-wrap>\n      <div class="flex-1 flex overflow-auto">\n        <div class="flex-1 overflow-x-auto border border-gray-200 rounded">\n          <div class="flex-1 text-13 w-[1300px]">\n            <div data-table class="grid gap-y-px bg-white grid-cols-[auto,1200px,300px,300px]">\n              ${this.headings()}\n              <div data-cells class="contents"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <prev-next></prev-next>\n    `;let e="";for(let t=0;t<100;t++)e+=this.part();$("[data-cells]").innerHTML=e}headings(){return'\n    <div data-headings class="z-40 contents">\n      <table-heading-check></table-heading-check>\n      <table-heading title="id" key="true"></table-heading>\n      <table-heading title="title"></table-heading>\n      <table-heading title="description"></table-heading>\n    </div>'}part(){return'\n      <div class="contents">\n        <row-select></row-select>\n        <table-cell></table-cell>\n        <table-cell></table-cell>\n        <table-cell></table-cell>\n      </div>'}}customElements.define("pane-main",PaneMain);class PrevNext extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML='\n    <div class="flex justify-between gap-8 px-4 pb-2 bg-gray-50">\n      <div class="flex gap-2 items-center text-sm">\n        \x3c!--1-100 of 12,300--\x3e\n      </div>\n      <div class="flex gap-4">\n        <div class="py-1.5 px-2 select-none flex gap-1 items-center hover:bg-grayExtra rounded">\n          <img-svg src="remixicon/arrow-left-s-line.svg" classes="w-5 h-5">\n        </div>\n        <div class="text-13 items-center flex">1-100 of 12,300</div>\n        <div class="py-1.5 px-2 select-none flex gap-1 items-center hover:bg-grayExtra rounded">\n          <img-svg src="remixicon/arrow-right-s-line.svg" classes="w-5 h-5">\n        </div>\n      </div>\n    </div>\n    '}}customElements.define("prev-next",PrevNext);class RadioItem extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("name"),t=this.getAttribute("label"),s="true"==this.getAttribute("checked")?" checked":"";this.innerHTML=`\n      <label class="flex select-none items-center gap-2">\n        <input type="radio" class="w-4 h-4 focus:outline-none focus:ring-0 focus:ring-offset-0 text-navy-600" name="${e}" ${s} />\n        ${t}\n      </label>\n    `}}customElements.define("radio-item",RadioItem);class FieldText extends HTMLElement{constructor(){super()}static get observedAttributes(){}connectedCallback(){this.innerHTML='\n      <input value="test" type="text" class="focus:outline-none focus:ring-yellow-500 focus:ring-offset-1 border-2 focus:ring-2 focus:border-gray-300 border-gray-300">\n    ',this.onKeyup(),this.onEnter(),this.onEscape(),updatePreview(this.querySelector("input").value,this),this.querySelector("input").select()}onKeyup(){this.querySelector("input").addEventListener("keyup",e=>{updatePreview(e.currentTarget.value,this)})}onEnter(){this.querySelector("input").addEventListener("keydown",e=>{"Enter"===e.key&&(e.preventDefault(),leaveEdit())})}onEscape(){window.addEventListener("keydown",e=>{"Escape"===e.key&&(e.preventDefault(),fieldClose())})}attributeChangedCallback(e,t,s){}}customElements.define("field-text",FieldText);